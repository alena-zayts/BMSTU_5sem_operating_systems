            Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 1

020A:0746  E8 0070		;*		call	sub_2			; (07B9)
020A:0746  E8 70 00				db	0E8h, 70h, 00h
020A:0749  06					push	es
020A:074A  1E					push	ds
020A:074B  50					push	ax
020A:074C  52					push	dx
020A:074D  B8 0040				mov	ax,40h
020A:0750  8E D8				mov	ds,ax
020A:0752  33 C0				xor	ax,ax			; Zero register
020A:0754  8E C0				mov	es,ax
020A:0756  FF 06 006C				inc	word ptr ds:[6Ch]	; (0040:006C=8E8Bh)
020A:075A  75 04				jnz	loc_1			; Jump if not zero
020A:075C  FF 06 006E				inc	word ptr ds:[6Eh]	; (0040:006E=14h)
020A:0760			loc_1:
020A:0760  83 3E 006E 18			cmp	word ptr ds:[6Eh],18h	; (0040:006E=14h)
020A:0765  75 15				jne	loc_2			; Jump if not equal
020A:0767  81 3E 006C 00B0			cmp	word ptr ds:[6Ch],0B0h	; (0040:006C=8E8Bh)
020A:076D  75 0D				jne	loc_2			; Jump if not equal
020A:076F  A3 006E				mov	word ptr ds:[6Eh],ax	; (0040:006E=14h)
020A:0772  A3 006C				mov	word ptr ds:[6Ch],ax	; (0040:006C=8E8Bh)
020A:0775  C6 06 0070 01			mov	byte ptr ds:[70h],1	; (0040:0070=0)
020A:077A  0C 08				or	al,8
020A:077C			loc_2:
020A:077C  50					push	ax
020A:077D  FE 0E 0040				dec	byte ptr ds:[40h]	; (0040:0040=78h)
020A:0781  75 0B				jnz	loc_3			; Jump if not zero
020A:0783  80 26 003F F0			and	byte ptr ds:[3Fh],0F0h	; (0040:003F=0)
020A:0788  B0 0C				mov	al,0Ch
020A:078A  BA 03F2				mov	dx,3F2h
020A:078D  EE					out	dx,al			; port 3F2h, dsk0 contrl output
020A:078E			loc_3:
020A:078E  58					pop	ax
020A:078F  F7 06 0314 0004			test	word ptr ds:[314h],4	; (0040:0314=3200h)
020A:0795  75 0C				jnz	loc_4			; Jump if not zero
020A:0797  9F					lahf				; Load ah from flags
020A:0798  86 E0				xchg	ah,al
020A:079A  50					push	ax
020A:079B  26: FF 1E 0070			call	dword ptr es:[70h]	; (0000:0070=6ADh)
020A:07A0  EB 03				jmp	short loc_5		; (07A5)
020A:07A2  90					nop
020A:07A3			loc_4:
020A:07A3  CD 1C				int	1Ch			; Timer break (call each 18.2ms)
020A:07A5			loc_5:
020A:07A5  E8 0011				call	sub_2			; (07B9)
020A:07A8  B0 20				mov	al,20h			; ' '
020A:07AA  E6 20				out	20h,al			; port 20h, 8259-1 int command
										;  al = 20h, end of interrupt
020A:07AC  5A					pop	dx
020A:07AD  58					pop	ax
020A:07AE  1F					pop	ds
020A:07AF  07					pop	es
020A:07B0  E9 FE99				jmp	$-164h
020A:07B3  C4					db	0C4h
							                        ;* No entry point to code
020A:07B4  C4 0E 93E9				les	cx,dword ptr ds:[93E9h]	; (0000:93E9=2E55h) Load 32 bit ptr
020A:07B8  FE					db	0FEh

           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 2

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_2		proc	near
020A:07B9  1E					push	ds
020A:07BA  50					push	ax
020A:07BB  B8 0040				mov	ax,40h
020A:07BE  8E D8				mov	ds,ax
020A:07C0  9F					lahf				; Load ah from flags
020A:07C1  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:07C7  75 0C				jnz	loc_7			; Jump if not zero
020A:07C9  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:07D0			loc_6:
020A:07D0  9E					sahf				; Store ah into flags
020A:07D1  58					pop	ax
020A:07D2  1F					pop	ds
020A:07D3  EB 03				jmp	short loc_8		; (07D8)
020A:07D5			loc_7:
020A:07D5  FA					cli				; Disable interrupts
020A:07D6  EB F8				jmp	short loc_6		; (07D0)
020A:07D8			loc_8:
020A:07D8  C3					retn
				sub_2		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_3		proc	near
020A:07D9  1E					push	ds
020A:07DA  50					push	ax
020A:07DB  B8 0040				mov	ax,40h
020A:07DE  8E D8				mov	ds,ax
020A:07E0  9F					lahf				; Load ah from flags
020A:07E1  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:07E7  75 14				jnz	loc_10			; Jump if not zero
020A:07E9  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:07EF  0C75			data_100	dw	0C75h
020A:07F1  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:07F8			loc_9:
020A:07F8  9E					sahf				; Store ah into flags
020A:07F9  58					pop	ax
020A:07FA  1F					pop	ds
020A:07FB  EB 03				jmp	short loc_11		; (0800)
020A:07FD			loc_10:
020A:07FD  FB					sti				; Enable interrupts
020A:07FE  EB F8				jmp	short loc_9		; (07F8)
020A:0800			loc_11:
020A:0800  C3					retn
				sub_3		endp

020A:0801  00					db	0
020A:0802  0000			data_101	dw	0
020A:0804  0000			data_102	dw	0

           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 3

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_4		proc	near
020A:0806  2E: FF 06 0804			inc	cs:data_102		; (020A:0804=0)
020A:080B  3D 13FF				cmp	ax,13FFh
020A:080E  75 5B				jne	loc_14			; Jump if not equal
020A:0810  83 F9 01				cmp	cx,1
020A:0813  74 40				je	loc_12			; Jump if equal
020A:0815  56					push	si
020A:0816  BE 00A4				mov	si,0A4h
020A:0819  2E: 2B 36 0802			sub	si,cs:data_101		; (020A:0802=0)
020A:081E  3B CE				cmp	cx,si
020A:0820  73 3E				jae	loc_13			; Jump if above or =
020A:0822  57					push	di
020A:0823  51					push	cx
020A:0824  52					push	dx
020A:0825  1E					push	ds
020A:0826  06					push	es
020A:0827  8C C2				mov	dx,es
020A:0829  8E DA				mov	ds,dx
020A:082B  BA B000				mov	dx,0B000h
020A:082E  8E C2				mov	es,dx
020A:0830  8B D1				mov	dx,cx
020A:0832  8B F7				mov	si,di
020A:0834  2E: 8B 3E 0802			mov	di,cs:data_101		; (020A:0802=0)
020A:0839  FC					cld				; Clear direction
020A:083A  D1 E9				shr	cx,1			; Shift w/zeros fill
020A:083C  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020A:083E  80 D1 00				adc	cl,0
020A:0841  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:0843  2E: 01 16 0802			add	cs:data_101,dx		; (020A:0802=0)
020A:0848  07					pop	es
020A:0849  1F					pop	ds
020A:084A  5A					pop	dx
020A:084B  59					pop	cx
020A:084C  5F					pop	di
020A:084D  5E					pop	si
020A:084E  F9					stc				; Set carry flag
020A:084F  2E: FF 0E 0804			dec	cs:data_102		; (020A:0804=0)
020A:0854  C3					retn
020A:0855			loc_12:
020A:0855  50					push	ax
020A:0856  B4 0E				mov	ah,0Eh
020A:0858  26: 8A 05				mov	al,es:[di]
020A:085B  E8 0012				call	sub_5			; (0870)
020A:085E  58					pop	ax
020A:085F  C3					retn
020A:0860			loc_13:
020A:0860  5E					pop	si
020A:0861  2E: FF 0E 0804			dec	cs:data_102		; (020A:0804=0)
020A:0866  C4					db	0C4h
020A:0867  C4 42 F9				les	ax,dword ptr [bp+si-7]	; Load 32 bit ptr
020A:086A  C3					retn
020A:086B			loc_14:
020A:086B  80 FC 0E				cmp	ah,0Eh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 4

020A:086E  75 28				jne	loc_15			; Jump if not equal

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_5:
020A:0870  56					push	si
020A:0871  2E: 8B 36 0802			mov	si,cs:data_101		; (020A:0802=0)
020A:0876  81 FE 00A4				cmp	si,0A4h
020A:087A  73 E4				jae	loc_13			; Jump if above or =
020A:087C  1E					push	ds
020A:087D  BE B000				mov	si,0B000h
020A:0880  8E DE				mov	ds,si
020A:0882  2E: 8B 36 0802			mov	si,cs:data_101		; (020A:0802=0)
020A:0887  88 04				mov	[si],al
020A:0889  46					inc	si
020A:088A  2E: 89 36 0802			mov	cs:data_101,si		; (020A:0802=0)
020A:088F  1F					pop	ds
020A:0890  5E					pop	si
020A:0891  F9					stc				; Set carry flag
020A:0892  2E: FF 0E 0804			dec	cs:data_102		; (020A:0804=0)
020A:0897  C3					retn
020A:0898			loc_15:
020A:0898  50					push	ax
020A:0899  B8 13FE				mov	ax,13FEh
020A:089C  C4					db	0C4h
020A:089D  C4 42 58				les	ax,dword ptr [bp+si+58h]	; Load 32 bit ptr
020A:08A0  F8					clc				; Clear carry flag
020A:08A1  2E: FF 0E 0804			dec	cs:data_102		; (020A:0804=0)
020A:08A6  C3					retn
				sub_4		endp

020A:08A7  00			data_103	db	0
020A:08A8  00			data_104	db	0
020A:08A9  2E: 80 3E 08A7 02			cmp	cs:data_103,2		; (020A:08A7=0)
020A:08AF  75 05				jne	loc_16			; Jump if not equal
020A:08B1  E8 FF52				call	sub_4			; (0806)
020A:08B4  72 5F				jc	loc_22			; Jump if carry Set
020A:08B6			loc_16:
020A:08B6  2E: 80 3E 08A7 01			cmp	cs:data_103,1		; (020A:08A7=0)
020A:08BC  74 5D				je	loc_24			; Jump if equal
020A:08BE  80 FC 00				cmp	ah,0
020A:08C1  74 30				je	loc_20			; Jump if equal
020A:08C3  80 FC 1C				cmp	ah,1Ch
020A:08C6  77 0B				ja	loc_17			; Jump if above
020A:08C8  80 FC 04				cmp	ah,4
020A:08CB  74 20				je	loc_19			; Jump if equal
020A:08CD  C4					db	0C4h
020A:08CE  C4 42 EB				les	ax,dword ptr [bp+si-15h]	; Load 32 bit ptr
020A:08D1  43					inc	bx
020A:08D2  90					nop
020A:08D3			loc_17:
020A:08D3  80 FC 4F				cmp	ah,4Fh			; 'O'
020A:08D6  75 06				jne	loc_18			; Jump if not equal
020A:08D8  C4					db	0C4h
020A:08D9  C4 BE 73EB				les	di,dword ptr [bp+73EBh]	; Load 32 bit ptr
020A:08DD  90					nop
020A:08DE			loc_18:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 5

020A:08DE  80 FC F0				cmp	ah,0F0h
020A:08E1  72 35				jb	loc_23			; Jump if below
020A:08E3  80 FC F7				cmp	ah,0F7h
020A:08E6  76 05				jbe	loc_19			; Jump if below or =
020A:08E8  80 FC FA				cmp	ah,0FAh
020A:08EB  75 2B				jne	loc_23			; Jump if not equal
020A:08ED			loc_19:
020A:08ED  C4					db	0C4h
020A:08EE  C4 BE 23EB				les	di,dword ptr [bp+23EBh]	; Load 32 bit ptr
020A:08F2  90					nop
020A:08F3			loc_20:
020A:08F3  2E: C6 06 08A8 01			mov	cs:data_104,1		; (020A:08A8=0)
020A:08F9  C4					db	0C4h
020A:08FA  C4 BE 9090				les	di,dword ptr [bp-6F70h]	; Load 32 bit ptr
020A:08FE  50					push	ax
020A:08FF  25 007F				and	ax,7Fh
020A:0902  3C 03				cmp	al,3
020A:0904  76 08				jbe	loc_21			; Jump if below or =
020A:0906  3C			data_105	db	3Ch
020A:0907  07					pop	es
020A:0908  74 04				jz	loc_21			; Jump if zero
020A:090A  58					pop	ax
020A:090B  EB 0E				jmp	short loc_24		; (091B)
							                        ;* No entry point to code
020A:090D  90					nop
020A:090E			loc_21:
020A:090E  58					pop	ax
020A:090F  2E: C6 06 08A8 00			mov	cs:data_104,0		; (020A:08A8=0)
020A:0915			loc_22:
020A:0915  E9 FD34				jmp	$-2C9h
020A:0918			loc_23:
020A:0918  F9					stc				; Set carry flag
020A:0919  EB FA				jmp	short loc_22		; (0915)
020A:091B			loc_24:
020A:091B  2E: C6 06 08A8 00			mov	cs:data_104,0		; (020A:08A8=0)
020A:0921  3D 13FF				cmp	ax,13FFh
020A:0924  74 2F				je	loc_28			; Jump if equal
020A:0926  80 FC F0				cmp	ah,0F0h
020A:0929  72 0D				jb	loc_25			; Jump if below
020A:092B  80 FC F7				cmp	ah,0F7h
020A:092E  76 BD				jbe	loc_19			; Jump if below or =
020A:0930  80 FC FA				cmp	ah,0FAh
020A:0933  74 B8				je	loc_19			; Jump if equal
020A:0935  EB 19				jmp	short loc_27		; (0950)
020A:0937  90					nop
020A:0938			loc_25:
020A:0938  80 FC 04				cmp	ah,4
020A:093B  74 B0				je	loc_19			; Jump if equal
020A:093D  80 FC 00				cmp	ah,0
020A:0940  75 06				jne	loc_26			; Jump if not equal
020A:0942  C4					db	0C4h
020A:0943  C4 BE 09EB				les	di,dword ptr [bp+9EBh]	; Load 32 bit ptr
020A:0947  90					nop
020A:0948			loc_26:
020A:0948  80 FC 11				cmp	ah,11h
020A:094B  75 03				jne	loc_27			; Jump if not equal
020A:094D  C4					db	0C4h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 6

020A:094E  C4 BE 22EA				les	di,dword ptr [bp+22EAh]	; Load 32 bit ptr
020A:0952  00 00				add	[bx+si],al
020A:0954  C0					db	0C0h
020A:0955			loc_28:
020A:0955  56					push	si
020A:0956  57					push	di
020A:0957  55					push	bp

020A:0958			locloop_29:
020A:0958  BA 0046				mov	dx,46h
020A:095B  52					push	dx
020A:095C  0E					push	cs
020A:095D  BB 096C				mov	bx,96Ch
020A:0960  53					push	bx
020A:0961  BB 0007				mov	bx,7
020A:0964  B4 0E				mov	ah,0Eh
020A:0966  26: 8A 05				mov	al,es:[di]
020A:0969  47					inc	di
020A:096A  EB E4		;*		jmp	short loc_27		;*(0950)
020A:096A  EB E4				db	0EBh,0E4h
							                        ;* No entry point to code
020A:096C  E2 EA				loop	locloop_29		; Loop if cx > 0

020A:096E  5D					pop	bp
020A:096F  5F					pop	di
020A:0970  5E					pop	si
020A:0971  B8 0001				mov	ax,1
020A:0974			loc_30:
020A:0974  EB 9F				jmp	short loc_22		; (0915)
							                        ;* No entry point to code
020A:0976  2E: 80 3E 08A7 02			cmp	cs:data_103,2		; (020A:08A7=0)
020A:097C  75 05				jne	loc_31			; Jump if not equal
020A:097E  E8 FE85				call	sub_4			; (0806)
020A:0981  72 F1				jc	loc_30			; Jump if carry Set
020A:0983			loc_31:
020A:0983  2E: 80 3E 08A7 01			cmp	cs:data_103,1		; (020A:08A7=0)
020A:0989  74 06				je	loc_32			; Jump if equal
020A:098B  C4					db	0C4h
020A:098C  C4 10				les	dx,dword ptr [bx+si]	; Load 32 bit ptr
020A:098E  E9 FCBB				jmp	$-342h
020A:0991			loc_32:
020A:0991  80 FC 13				cmp	ah,13h
020A:0994  75 04				jne	loc_33			; Jump if not equal
020A:0996  3C FF				cmp	al,0FFh
020A:0998  74 BB				je	loc_28			; Jump if equal
020A:099A			loc_33:
020A:099A  EA F000:FF53		;*		jmp	far ptr loc_1925	;*(F000:FF53)
020A:099A  EA					db	0EAh
020A:099B  FF53 F000				dw	0FF53h, 0F000h
020A:099F  CD 10				int	10h			; Video display   ah=functn 00h
										;  set display mode in al
020A:09A1  C4					db	0C4h
020A:09A2  C4					db	0C4h
020A:09A3  FE C4				inc	ah
020A:09A5  C4 11				les	dx,dword ptr [bx+di]	; Load 32 bit ptr
020A:09A7  E9 FCA2				jmp	$-35Bh
020A:09AA  C4					db	0C4h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 7

							                        ;* No entry point to code
020A:09AB  C4 12				les	dx,dword ptr [bp+si]	; Load 32 bit ptr
020A:09AD  E9 FC9C				jmp	$-361h
020A:09B0  C4					db	0C4h
							                        ;* No entry point to code
020A:09B1  C4 14				les	dx,dword ptr [si]	; Load 32 bit ptr
020A:09B3  E9 FC96				jmp	$-367h
020A:09B6  87 DB				xchg	bx,bx
020A:09B8  0000			data_107	dw	0
020A:09BA  00 00				add	[bx+si],al
020A:09BC  0032			data_108	dw	32h
020A:09BE  00 00				add	[bx+si],al
020A:09C0  0032			data_109	dw	32h
020A:09C2  00 00				add	[bx+si],al
020A:09C4  1E					push	ds
020A:09C5  53					push	bx
020A:09C6  BB 0040				mov	bx,40h
020A:09C9  8E DB				mov	ds,bx
020A:09CB  80 FC 10				cmp	ah,10h
020A:09CE  E8 FDE8				call	sub_2			; (07B9)
020A:09D1  72 03				jc	loc_34			; Jump if carry Set
020A:09D3  E9 00E0				jmp	loc_48			; (0AB6)
020A:09D6			loc_34:
020A:09D6  0A E4				or	ah,ah			; Zero ?
020A:09D8  74 3E				jz	loc_39			; Jump if zero
020A:09DA  FE CC				dec	ah
020A:09DC  74 74				jz	loc_43			; Jump if zero
020A:09DE  FE CC				dec	ah
020A:09E0  74 11				jz	loc_36			; Jump if zero
020A:09E2  FE CC				dec	ah
020A:09E4  74 08				jz	loc_35			; Jump if zero
020A:09E6  FE CC				dec	ah
020A:09E8  74 04				jz	loc_35			; Jump if zero
020A:09EA  FE CC				dec	ah
020A:09EC  74 0A				jz	loc_37			; Jump if zero
020A:09EE			loc_35:
020A:09EE  5B					pop	bx
020A:09EF  1F					pop	ds
020A:09F0  E9 FC59				jmp	$-3A4h
020A:09F3			loc_36:
020A:09F3  A0 0017				mov	al,byte ptr data_13+1	; (020A:0017=0)
020A:09F6  EB F6				jmp	short loc_35		; (09EE)
020A:09F8			loc_37:
020A:09F8  56					push	si
020A:09F9  8B 1E 001C				mov	bx,word ptr data_16+2	; (020A:001C=148Fh)
020A:09FD  8B F3				mov	si,bx
020A:09FF  E8 01B9				call	sub_10			; (0BBB)
020A:0A02  3B 1E 001A				cmp	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A06  74			data_110	db	74h			; Data table (indexed access)
020A:0A07  0B 89 890C				or	cx,word ptr ds:[890Ch][bx+di]	; (020A:890C=574h)
020A:0A0B  1E					push	ds
020A:0A0C  1C			data_111	db	1Ch			; Data table (indexed access)
020A:0A0D  00			data_112	db	0
020A:0A0E  B0 00				mov	al,0
020A:0A10  5E					pop	si
020A:0A11  EB DB				jmp	short loc_35		; (09EE)
020A:0A13			loc_38:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 8

020A:0A13  B0 01				mov	al,1
020A:0A15  5E					pop	si
020A:0A16  EB D6				jmp	short loc_35		; (09EE)
020A:0A18			loc_39:
020A:0A18  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A1C  3B 1E 001C				cmp	bx,word ptr data_16+2	; (020A:001C=148Fh)
020A:0A20  75 13				jne	loc_41			; Jump if not equal
020A:0A22  E8 FDB4				call	sub_3			; (07D9)
020A:0A25  B8 9002				mov	ax,9002h
020A:0A28  CD 15				int	15h			; General services, ah=func 90h
										;  device busy, al=type,
										;   es:bx=ptr of request block
020A:0A2A			loc_40:
020A:0A2A  E8 FD8C				call	sub_2			; (07B9)
020A:0A2D  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A31  3B 1E 001C				cmp	bx,word ptr data_16+2	; (020A:001C=148Fh)
020A:0A35			loc_41:
020A:0A35  E8 0190				call	sub_11			; (0BC8)
020A:0A38  75 05				jnz	loc_42			; Jump if not zero
020A:0A3A  E8 00E3				call	sub_6			; (0B20)
020A:0A3D  EB EB				jmp	short loc_40		; (0A2A)
020A:0A3F			loc_42:
020A:0A3F  8B 07				mov	ax,[bx]
020A:0A41  E8 0177				call	sub_10			; (0BBB)
020A:0A44  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020A:001A=0AE9Ch)
020A:0A48  E8 0129				call	sub_9			; (0B74)
020A:0A4B  72 DD				jc	loc_40			; Jump if carry Set
020A:0A4D  E8 00FC				call	sub_7			; (0B4C)
020A:0A50  EB 9C				jmp	short loc_35		; (09EE)
020A:0A52			loc_43:
020A:0A52  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A56  3B 1E 001C				cmp	bx,word ptr data_16+2	; (020A:001C=148Fh)
020A:0A5A  8B 07				mov	ax,[bx]
020A:0A5C  E8 0169				call	sub_11			; (0BC8)
020A:0A5F  74 2F				jz	loc_45			; Jump if zero
020A:0A61  E8 00E8				call	sub_7			; (0B4C)
020A:0A64  E8 010D				call	sub_9			; (0B74)
020A:0A67  E8 FD6F				call	sub_3			; (07D9)
020A:0A6A  73 45				jnc	loc_47			; Jump if carry=0
020A:0A6C  E8 014C				call	sub_10			; (0BBB)
020A:0A6F  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020A:001A=0AE9Ch)
020A:0A73  EB DD				jmp	short loc_43		; (0A52)
020A:0A75			loc_44:
020A:0A75  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0A79  3B 1E 001C				cmp	bx,word ptr data_16+2	; (020A:001C=148Fh)
020A:0A7D  8B 07				mov	ax,[bx]
020A:0A7F  E8 0146				call	sub_11			; (0BC8)
020A:0A82  74 0C				jz	loc_45			; Jump if zero
020A:0A84  E8 00C5				call	sub_7			; (0B4C)
020A:0A87  E8 00D1				call	sub_8			; (0B5B)
020A:0A8A  E8 FD4C				call	sub_3			; (07D9)
020A:0A8D  EB 22				jmp	short loc_47		; (0AB1)
020A:0A8F  90					nop
020A:0A90			loc_45:
020A:0A90  E8 FD46				call	sub_3			; (07D9)
020A:0A93  50					push	ax
020A:0A94  9F					lahf				; Load ah from flags
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 9

020A:0A95  50					push	ax
020A:0A96  2E: A1 09B8				mov	ax,cs:data_107		; (020A:09B8=0)
020A:0A9A  2E: 3B 06 09C0			cmp	ax,cs:data_109		; (020A:09C0=32h)
020A:0A9F  72 08				jb	loc_46			; Jump if below
020A:0AA1  B4 01				mov	ah,1
020A:0AA3  C4					db	0C4h
020A:0AA4  C4 16 06EB				les	dx,dword ptr ds:[6EBh]	; (020A:06EB=52D2h) Load 32 bit ptr
020A:0AA8  90					nop
020A:0AA9			loc_46:
020A:0AA9  2E: FF 06 09BC			inc	cs:data_108		; (020A:09BC=7Eh)
020A:0AAE  58					pop	ax
020A:0AAF  9E					sahf				; Store ah into flags
020A:0AB0  58					pop	ax
020A:0AB1			loc_47:
020A:0AB1  5B					pop	bx
020A:0AB2  1F					pop	ds
020A:0AB3  CA 0002				retf	2			; Return far
020A:0AB6			loc_48:
020A:0AB6  80 EC 10				sub	ah,10h
020A:0AB9  74 2C				jz	loc_50			; Jump if zero
020A:0ABB  FE CC				dec	ah
020A:0ABD  74 B6				jz	loc_44			; Jump if zero
020A:0ABF  FE CC				dec	ah
020A:0AC1  74 03				jz	loc_49			; Jump if zero
020A:0AC3  E9 FF28				jmp	loc_35			; (09EE)
020A:0AC6			loc_49:
020A:0AC6  A0 0018				mov	al,byte ptr data_13+2	; (020A:0018=0)
020A:0AC9  8A E0				mov	ah,al
020A:0ACB  24 04				and	al,4
020A:0ACD  51					push	cx
020A:0ACE  B1 05				mov	cl,5
020A:0AD0  D2 E0				shl	al,cl			; Shift w/zeros fill
020A:0AD2  59					pop	cx
020A:0AD3  80 E4 73				and	ah,73h			; 's'
020A:0AD6  0A C4				or	al,ah
020A:0AD8  8A 26 0096				mov	ah,byte ptr ds:[96h]	; (020A:0096=0)
020A:0ADC  80 E4 0C				and	ah,0Ch
020A:0ADF  0A E0				or	ah,al
020A:0AE1  A0 0017				mov	al,byte ptr data_13+1	; (020A:0017=0)
020A:0AE4  E9 FF07				jmp	loc_35			; (09EE)
020A:0AE7			loc_50:
020A:0AE7  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0AEB  3B 1E 001C				cmp	bx,word ptr data_16+2	; (020A:001C=148Fh)
020A:0AEF  75 13				jne	loc_52			; Jump if not equal
020A:0AF1  E8 FCE5				call	sub_3			; (07D9)
020A:0AF4  B8 9002				mov	ax,9002h
020A:0AF7  CD 15				int	15h			; General services, ah=func 90h
										;  device busy, al=type,
										;   es:bx=ptr of request block
020A:0AF9			loc_51:
020A:0AF9  E8 FCBD				call	sub_2			; (07B9)
020A:0AFC  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (020A:001A=0AE9Ch)
020A:0B00  3B 1E 001C				cmp	bx,word ptr data_16+2	; (020A:001C=148Fh)
020A:0B04			loc_52:
020A:0B04  E8 00C1				call	sub_11			; (0BC8)
020A:0B07  75 05				jnz	loc_53			; Jump if not zero
020A:0B09  E8 0014				call	sub_6			; (0B20)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 10

020A:0B0C  EB EB				jmp	short loc_51		; (0AF9)
020A:0B0E			loc_53:
020A:0B0E  8B 07				mov	ax,[bx]
020A:0B10  E8 00A8				call	sub_10			; (0BBB)
020A:0B13  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (020A:001A=0AE9Ch)
020A:0B17  E8 0041				call	sub_8			; (0B5B)
020A:0B1A  E8 002F				call	sub_7			; (0B4C)
020A:0B1D  E9 FECE				jmp	loc_35			; (09EE)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_6		proc	near
020A:0B20  50					push	ax
020A:0B21  E8 FCB5				call	sub_3			; (07D9)
020A:0B24  B4 02				mov	ah,2
020A:0B26  C4					db	0C4h
020A:0B27  C4 16 1E8B				les	dx,data_189		; (020A:1E8B=0) Load 32 bit ptr
020A:0B2B  1A 00				sbb	al,[bx+si]
020A:0B2D  3B 1E 001C				cmp	bx,word ptr data_16+2	; (020A:001C=148Fh)
020A:0B31  75 17				jne	loc_56			; Jump if not equal
020A:0B33  2E: A1 09B8				mov	ax,cs:data_107		; (020A:09B8=0)
020A:0B37  2E: 3B 06 09C0			cmp	ax,cs:data_109		; (020A:09C0=32h)
020A:0B3C  73 07				jae	loc_55			; Jump if above or =
020A:0B3E  2E: FF 06 09BC			inc	cs:data_108		; (020A:09BC=38h)
020A:0B43  EB E4		;*		jmp	short loc_54		;*(0B29)
020A:0B43  EB E4				db	0EBh,0E4h
020A:0B45			loc_55:
020A:0B45  B4 01				mov	ah,1
020A:0B47  C4					db	0C4h
020A:0B48  C4 16 C358				les	dx,dword ptr ds:[0C358h]	; (020A:C358=344Ch) Load 32 bit ptr

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_7:
020A:0B4C  2E: C7 06 09B8 0000			mov	cs:data_107,0		; (020A:09B8=0)
020A:0B53  2E: C7 06 09BC 0000			mov	cs:data_108,0		; (020A:09BC=48h)
020A:0B5A  C3					retn
				sub_6		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_8		proc	near
020A:0B5B  53					push	bx
020A:0B5C  50					push	ax
020A:0B5D  9F					lahf				; Load ah from flags
020A:0B5E  8B D8				mov	bx,ax
020A:0B60  58					pop	ax
020A:0B61  53					push	bx
020A:0B62  3C F0				cmp	al,0F0h
020A:0B64  75 06				jne	loc_57			; Jump if not equal
020A:0B66  0A E4				or	ah,ah			; Zero ?
020A:0B68  74 02				jz	loc_57			; Jump if zero
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 11

020A:0B6A  32 C0				xor	al,al			; Zero register
020A:0B6C			loc_57:
020A:0B6C  8B D8				mov	bx,ax
020A:0B6E  58					pop	ax
020A:0B6F  9E					sahf				; Store ah into flags
020A:0B70  8B C3				mov	ax,bx
020A:0B72  5B					pop	bx
020A:0B73  C3					retn
				sub_8		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_9		proc	near
020A:0B74  53					push	bx
020A:0B75  50					push	ax
020A:0B76  9F					lahf				; Load ah from flags
020A:0B77  8B D8				mov	bx,ax
020A:0B79  58					pop	ax
020A:0B7A  53					push	bx
020A:0B7B  80 FC E0				cmp	ah,0E0h
020A:0B7E  75 0F				jne	loc_58			; Jump if not equal
020A:0B80  B4 1C				mov	ah,1Ch
020A:0B82  3C 0D				cmp	al,0Dh
020A:0B84  74 23				je	loc_60			; Jump if equal
020A:0B86  3C 0A				cmp	al,0Ah
020A:0B88  74 1F				je	loc_60			; Jump if equal
020A:0B8A  B4 35				mov	ah,35h			; '5'
020A:0B8C  EB 1B				jmp	short loc_60		; (0BA9)
020A:0B8E  90					nop
020A:0B8F			loc_58:
020A:0B8F  80 FC 84				cmp	ah,84h
020A:0B92  77 1E				ja	loc_61			; Jump if above
020A:0B94  3C F0				cmp	al,0F0h
020A:0B96  75 07				jne	loc_59			; Jump if not equal
020A:0B98  0A E4				or	ah,ah			; Zero ?
020A:0B9A  74 0D				jz	loc_60			; Jump if zero
020A:0B9C  EB 14				jmp	short loc_61		; (0BB2)
020A:0B9E  90					nop
020A:0B9F			loc_59:
020A:0B9F  3C E0				cmp	al,0E0h
020A:0BA1  75 06				jne	loc_60			; Jump if not equal
020A:0BA3  0A E4				or	ah,ah			; Zero ?
020A:0BA5  74 02				jz	loc_60			; Jump if zero
020A:0BA7  32 C0				xor	al,al			; Zero register
020A:0BA9			loc_60:
020A:0BA9  8B D8				mov	bx,ax
020A:0BAB  58					pop	ax
020A:0BAC  9E					sahf				; Store ah into flags
020A:0BAD  8B C3				mov	ax,bx
020A:0BAF  5B					pop	bx
020A:0BB0  F8					clc				; Clear carry flag
020A:0BB1  C3					retn
020A:0BB2			loc_61:
020A:0BB2  8B D8				mov	bx,ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 12

020A:0BB4  58					pop	ax
020A:0BB5  9E					sahf				; Store ah into flags
020A:0BB6  8B C3				mov	ax,bx
020A:0BB8  5B					pop	bx
020A:0BB9  F9					stc				; Set carry flag
020A:0BBA  C3					retn
				sub_9		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_10		proc	near
020A:0BBB  43					inc	bx
020A:0BBC  43					inc	bx
020A:0BBD  3B 1E 0082				cmp	bx,word ptr ds:[82h]	; (020A:0082=10h)
020A:0BC1  75 04				jne	loc_62			; Jump if not equal
020A:0BC3  1E8B			data_113	dw	1E8Bh
020A:0BC5  0080			data_114	dw	80h
020A:0BC7			loc_62:
020A:0BC7  53C3			data_115	dw	53C3h
020A:0BC9  5051			data_116	dw	5051h
020A:0BCB  509F			data_117	dw	509Fh
020A:0BCD  17A0			data_118	dw	17A0h
020A:0BCF  00 24				add	[si],ah
020A:0BD1  B170			data_119	dw	0B170h
020A:0BD3  D204			data_120	dw	0D204h
020A:0BD5  E8 0724				call	$+727h
020A:0BD8  8A 1E 0097				mov	bl,byte ptr data_51+1	; (020A:0097=0)
020A:0BDC  32 D8				xor	bl,al
020A:0BDE  80 E3 07				and	bl,7
020A:0BE1  74 25				jz	loc_63			; Jump if zero
020A:0BE3  F6 06 0097 40			test	byte ptr data_51+1,40h	; (020A:0097=0) '@'
020A:0BE8  75 1E				jnz	loc_63			; Jump if not zero
020A:0BEA  80 0E 0097 40			or	byte ptr data_51+1,40h	; (020A:0097=0) '@'
020A:0BEF  D2 E3				shl	bl,cl			; Shift w/zeros fill
020A:0BF1  0A C3				or	al,bl
020A:0BF3  03B4			data_124	dw	3B4h
020A:0BF5  C4C4			data_125	dw	0C4C4h
020A:0BF7  8016			data_126	dw	8016h
020A:0BF9  26					db	26h
020A:0BFA  97					xchg	di,ax
020A:0BFB  00 F8				add	al,bh
020A:0BFD  24 0F				and	al,0Fh
020A:0BFF  08 06 0097				or	byte ptr data_51+1,al	; (020A:0097=0)
020A:0C03  80 26 0097 BF			and	byte ptr data_51+1,0BFh	; (020A:0097=0)
020A:0C08			loc_63:
020A:0C08  58					pop	ax
020A:0C09  9E					sahf				; Store ah into flags
020A:0C0A  58					pop	ax
020A:0C0B  59					pop	cx
020A:0C0C  5B					pop	bx
020A:0C0D  C3					retn
				sub_10		endp

020A:0C0E  C4					db	0C4h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 13

							                        ;* No entry point to code
020A:0C0F  C4 18				les	bx,dword ptr [bx+si]	; Load 32 bit ptr
020A:0C11  E9 FA38				jmp	$-5C5h
020A:0C14  C4					db	0C4h
							                        ;* No entry point to code
020A:0C15  C4 19				les	bx,dword ptr [bx+di]	; Load 32 bit ptr
020A:0C17  E9 FA32				jmp	$-5CBh
020A:0C1A  8E8A			data_127	dw	8E8Ah
020A:0C1C  0014			data_128	dw	14h
020A:0C1E  01			data_129	db	1
020A:0C1F  E8 FBB7				call	sub_3			; (07D9)
020A:0C22  80 FC 02				cmp	ah,2
020A:0C25  72 06				jb	loc_64			; Jump if below
020A:0C27  C4					db	0C4h
020A:0C28  C4 1A				les	bx,dword ptr [bp+si]	; Load 32 bit ptr
020A:0C2A  E9 FA1F				jmp	$-5DEh
020A:0C2D			loc_64:
020A:0C2D  1E					push	ds
020A:0C2E  53					push	bx
020A:0C2F  50					push	ax
020A:0C30  B8 0040				mov	ax,40h
020A:0C33  8E D8				mov	ds,ax
020A:0C35  58					pop	ax
020A:0C36  E8 FB80				call	sub_2			; (07B9)
020A:0C39  0A E4				or	ah,ah			; Zero ?
020A:0C3B  75 3F				jnz	loc_67			; Jump if not zero
020A:0C3D			loc_65:
020A:0C3D  A0 0070				mov	al,byte ptr ds:[70h]	; (0040:0070=0)
020A:0C40  8B 0E 006E				mov	cx,word ptr ds:[6Eh]	; (0040:006E=14h)
020A:0C44  8B 16 006C				mov	dx,word ptr ds:[6Ch]	; (0040:006C=8E9Eh)
020A:0C48  2E: 39 0E 0C1C			cmp	cs:data_128,cx		; (020A:0C1C=14h)
020A:0C4D  75 35				jne	loc_68			; Jump if not equal
020A:0C4F  2E: 8B 1E 0C1A			mov	bx,cs:data_127		; (020A:0C1A=8E8Ah)
020A:0C54  3B DA				cmp	bx,dx
020A:0C56  74 05				je	loc_66			; Jump if equal
020A:0C58  43					inc	bx
020A:0C59  3B DA				cmp	bx,dx
020A:0C5B  75 27				jne	loc_68			; Jump if not equal
020A:0C5D			loc_66:
020A:0C5D  2E: FE 06 0C1E			inc	cs:data_129		; (020A:0C1E=1)
020A:0C62  2E: 80 3E 0C1E 10			cmp	cs:data_129,10h		; (020A:0C1E=1)
020A:0C68  72 20				jb	loc_69			; Jump if below
020A:0C6A  E8 FB6C				call	sub_3			; (07D9)
020A:0C6D  33 C0				xor	ax,ax			; Zero register
020A:0C6F  2E: FF 0E 0C1A			dec	cs:data_127		; (020A:0C1A=8E8Ah)
020A:0C74  C4					db	0C4h
020A:0C75  C4 5A E8				les	bx,dword ptr [bp+si-18h]	; Load 32 bit ptr
020A:0C78  3F					aas				; Ascii adjust
020A:0C79  FB					sti				; Enable interrupts
020A:0C7A  EB C1				jmp	short loc_65		; (0C3D)
020A:0C7C			loc_67:
020A:0C7C  89 16 006C				mov	word ptr ds:[6Ch],dx	; (0040:006C=8E9Fh)
020A:0C80  89 0E 006E				mov	word ptr ds:[6Eh],cx	; (0040:006E=14h)
020A:0C84			loc_68:
020A:0C84  2E: C6 06 0C1E 00			mov	cs:data_129,0		; (020A:0C1E=1)
020A:0C8A			loc_69:
020A:0C8A  2E: 89 16 0C1A			mov	cs:data_127,dx		; (020A:0C1A=8E8Ah)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 14

020A:0C8F  2E: 89 0E 0C1C			mov	cs:data_128,cx		; (020A:0C1C=14h)
020A:0C94  C6 06 0070 00			mov	byte ptr ds:[70h],0	; (0040:0070=0)
020A:0C99  5B					pop	bx
020A:0C9A  1F					pop	ds
020A:0C9B  E9 F9AE				jmp	$-64Fh
020A:0C9E  C4					db	0C4h
							                        ;* No entry point to code
020A:0C9F  C4 1E A8E9				les	bx,dword ptr data_663	; (020A:A8E9=1974h) Load 32 bit ptr
020A:0CA3  F9					stc				; Set carry flag
020A:0CA4  C4					db	0C4h
020A:0CA5  C4 70 E9				les	si,dword ptr [bx+si-17h]	; Load 32 bit ptr
020A:0CA8  A2 E8F9				mov	byte ptr ds:[0E8F9h],al	; (020A:E8F9=6)
020A:0CAB  2C FB				sub	al,0FBh
020A:0CAD  CD 4A				int	4Ah			; RTC Alarm occurred
020A:0CAF  EB 01				jmp	short $+3		; delay for I/O
020A:0CB1  90					nop
020A:0CB2  EB 01				jmp	short $+3		; delay for I/O
020A:0CB4  90					nop
020A:0CB5  EB 01				jmp	short $+3		; delay for I/O
020A:0CB7  90					nop
020A:0CB8  E8 FAFE				call	sub_2			; (07B9)
020A:0CBB  C4					db	0C4h
020A:0CBC  C4					db	0C4h
020A:0CBD  FE C4				inc	ah
020A:0CBF  C4 71 CD				les	si,dword ptr [bx+di-33h]	; Load 32 bit ptr
020A:0CC2  0A E9				or	ch,cl
020A:0CC4  86 F9				xchg	bh,cl
020A:0CC6  C4					db	0C4h
020A:0CC7			loc_70:
020A:0CC7  C4 75 CD				les	si,dword ptr [di-33h]	; Load 32 bit ptr
020A:0CCA  02 E9				add	ch,cl
020A:0CCC  7E F9				jle	loc_70			; Jump if < or =
020A:0CCE  E8 FB08				call	sub_3			; (07D9)
020A:0CD1  EB 00				jmp	short $+2		; delay for I/O
020A:0CD3  EB 00				jmp	short $+2		; delay for I/O
020A:0CD5  EB 00				jmp	short $+2		; delay for I/O
020A:0CD7  C4					db	0C4h
020A:0CD8  C4					db	0C4h
020A:0CD9  FE					db	0FEh
020A:0CDA  EB 0B				jmp	short loc_72		; (0CE7)
							                        ;* No entry point to code
020A:0CDC  3C 2F				cmp	al,2Fh			; '/'
020A:0CDE  75 06				jne	loc_71			; Jump if not equal
020A:0CE0  44					inc	sp
020A:0CE1  D9					db	0D9h
020A:0CE2  02 4E 00				add	cl,[bp]
020A:0CE5  40					inc	ax
020A:0CE6			loc_71:
020A:0CE6  F8					clc				; Clear carry flag
020A:0CE7			loc_72:
020A:0CE7  C3					retn
020A:0CE8  48					dec	ax
020A:0CE9  49					dec	cx
020A:0CEA  4D					dec	bp
020A:0CEB  45					inc	bp
020A:0CEC  4D					dec	bp
020A:0CED  20 20				and	[bx+si],ah
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 15

020A:0CEF  20 24				and	[si],ah
020A:0CF1  00 70 00		;*		add	[bx+si+0],dh
020A:0CF1  00 70 00				db	 00h, 70h, 00h
020A:0CF4  00 A0 0041				add	byte ptr ds:[41h][bx+si],ah	; (020A:0041=18h)
020A:0CF8  4C					dec	sp
020A:0CF9  00 58 4D				add	[bx+si+4Dh],bl
020A:0CFC  53					push	bx
020A:0CFD  58					pop	ax
020A:0CFE  58					pop	ax
020A:0CFF  58					pop	ax
020A:0D00  58					pop	ax
020A:0D01  30 DE				xor	dh,bl
020A:0D03  04 74				add	al,74h			; 't'
020A:0D05  00 82 FB04				add	[bp+si-4FCh],al
020A:0D09  8D 54 00				lea	dx,[si+0]		; Load effective addr
020A:0D0C  00 00				add	[bx+si],al
020A:0D0E  42					inc	dx
020A:0D0F  05 020A				add	ax,20Ah
020A:0D12  A4					movsb				; Mov [si] to es:[di]
020A:0D13  10 A7 0100				adc	byte ptr ds:[100h][bx],ah	; (020A:0100=28h)
020A:0D17  01 01				add	[bx+di],ax
020A:0D19  01 00				add	[bx+si],ax
020A:0D1B  01 00				add	[bx+si],ax
020A:0D1D  01 00				add	[bx+si],ax
020A:0D1F  01 00				add	[bx+si],ax
020A:0D21  000A[00]				db	10 dup (0)
020A:0D2B  02 01				add	al,[bx+di]
020A:0D2D  00					db	0
020A:0D2E  00 00				add	[bx+si],al
020A:0D30  00 2E 1E89				add	data_188,ch		; (020A:1E89=0)
020A:0D34  16					push	ss
020A:0D35  00 2E 068C				add	byte ptr ds:[68Ch],ch	; (020A:068C=2)
020A:0D39  18 00				sbb	[bx+si],al
020A:0D3B  CB					retf
							                        ;* No entry point to code
020A:0D3C  53					push	bx
020A:0D3D  1E					push	ds
020A:0D3E  2E: C5 1E 0016			lds	bx,dword ptr cs:[16h]	; (020A:0016=0) Load 32 bit ptr
020A:0D43  80 7F 02 10				cmp	byte ptr [bx+2],10h
020A:0D47  C7 47 03 0100			mov	word ptr [bx+3],100h
020A:0D4C  76 05				jbe	loc_73			; Jump if below or =
020A:0D4E  81 4F 03 8003			or	word ptr [bx+3],8003h
020A:0D53			loc_73:
020A:0D53  1F					pop	ds
020A:0D54  5B					pop	bx
020A:0D55  CB					retf
							                        ;* No entry point to code
020A:0D56  E8 03DB				call	sub_20			; (1134)
020A:0D59  80 FC 43				cmp	ah,43h			; 'C'
020A:0D5C  75 15				jne	loc_75			; Jump if not equal
020A:0D5E  0A C0				or	al,al			; Zero ?
020A:0D60  75 05				jnz	loc_74			; Jump if not zero
020A:0D62  B0 80				mov	al,80h
020A:0D64  E9 03F5				jmp	loc_126			; (115C)
020A:0D67			loc_74:
020A:0D67  3C 10				cmp	al,10h
020A:0D69  75 08				jne	loc_75			; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 16

020A:0D6B  0E					push	cs
020A:0D6C  07					pop	es
020A:0D6D  BB 00AF				mov	bx,0AFh
020A:0D70  E9 03E9				jmp	loc_126			; (115C)
020A:0D73			loc_75:
020A:0D73  E8 039E				call	sub_19			; (1114)
020A:0D76  2E: FF 2E 0022			jmp	dword ptr cs:[22h]	; (020A:0022=0FFh)
							                        ;* No entry point to code
020A:0D7B  12 A0 0265				adc	ah,byte ptr ds:[265h][bx+si]	; (020A:0265=0)
020A:0D7F  98					cbw				; Convrt byte to word
020A:0D80  02 B2 D402				add	dh,[bp+si-2BFEh]
020A:0D84  02 F6				add	dh,dh
020A:0D86  02 30				add	dh,[bx+si]
020A:0D88  03 99 2B03				add	bx,data_226[bx+di]	; (020A:2B03=8D1Eh)
020A:0D8C  A0 A03C				mov	al,data_631		; (020A:A03C=0A3h)
020A:0D8F  94					xchg	sp,ax
020A:0D90  A0 A264				mov	al,data_639		; (020A:A264=1Eh)
020A:0D93  CF					iret				; Interrupt return
							                        ;* No entry point to code
020A:0D94  A0 A0FF				mov	al,data_635		; (020A:A0FF=10h)
020A:0D97  23 A1 A159				and	sp,data_636[bx+di]	; (020A:A159=0E903h)
020A:0D9B  11 A2 A216				adc	[bp+si-5DEAh],sp
020A:0D9F  EB 03				jmp	short loc_76		; (0DA4)
020A:0DA1  90					nop
020A:0DA2  90					nop
020A:0DA3  90					nop
020A:0DA4			loc_76:
020A:0DA4  51					push	cx
020A:0DA5  56					push	si
020A:0DA6  57					push	di
020A:0DA7  1E					push	ds
020A:0DA8  06					push	es
020A:0DA9  9C					pushf				; Push flags
020A:0DAA  FC					cld				; Clear direction
020A:0DAB  1E					push	ds
020A:0DAC  07					pop	es
020A:0DAD  0E					push	cs
020A:0DAE  1F					pop	ds
020A:0DAF  50					push	ax
020A:0DB0  0A E4				or	ah,ah			; Zero ?
020A:0DB2  74 31				jz	loc_79			; Jump if zero
020A:0DB4  80 FC 12				cmp	ah,12h
020A:0DB7  72 07				jb	loc_77			; Jump if below
020A:0DB9  58					pop	ax
020A:0DBA  33 C0				xor	ax,ax			; Zero register
020A:0DBC  B3 80				mov	bl,80h
020A:0DBE  EB 72				jmp	short loc_83		; (0E32)
020A:0DC0			loc_77:
020A:0DC0  9C					pushf				; Push flags
020A:0DC1  E8 0350				call	sub_19			; (1114)
020A:0DC4  83 3E 0020 00			cmp	word ptr data_18+2,0	; (020A:0020=0A3B9h)
020A:0DC9  75 05				jne	loc_78			; Jump if not equal
020A:0DCB  52					push	dx
020A:0DCC  E8 0076				call	sub_13			; (0E45)
020A:0DCF  5A					pop	dx
020A:0DD0			loc_78:
020A:0DD0  0E					push	cs
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 17

020A:0DD1  FF 16 0014				call	word ptr ds:[14h]	; (020A:0014=0E0Dh)
020A:0DD5  80 3E 002C 00			cmp	byte ptr ds:[2Ch],0	; (020A:002C=39h)
020A:0DDA  74 09				je	loc_79			; Jump if equal
020A:0DDC  58					pop	ax
020A:0DDD  33 C0				xor	ax,ax			; Zero register
020A:0DDF  B3 81				mov	bl,81h
020A:0DE1  33 D2				xor	dx,dx			; Zero register
020A:0DE3  EB			data_131	db	0EBh
020A:0DE4  4D					dec	bp
020A:0DE5			loc_79:
020A:0DE5  58					pop	ax
020A:0DE6  50					push	ax
020A:0DE7  8A C4				mov	al,ah
020A:0DE9  32 E4				xor	ah,ah			; Zero register
020A:0DEB  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:0DED  8B F8				mov	di,ax
020A:0DEF  58					pop	ax
020A:0DF0  8B BD 008B				mov	di,word ptr data_45+1[di]	; (020A:008B=504Fh)
020A:0DF4  0B FF				or	di,di			; Zero ?
020A:0DF6  79 38				jns	loc_82			; Jump if not sign
020A:0DF8  80 3E 002B 00			cmp	byte ptr ds:[2Bh],0	; (020A:002B=38h)
020A:0DFD  74 12				je	loc_80			; Jump if equal
020A:0DFF  56					push	si
020A:0E00  5057			data_132	dw	5057h			; Data table (indexed access)
020A:0E02  53					push	bx
020A:0E03  51					push	cx
020A:0E04  DFE8			data_134	dw	0DFE8h
020A:0E06  01 3D				add	[di],di
020A:0E08  01 00				add	[bx+si],ax
020A:0E0A  59					pop	cx
020A:0E0B  5B					pop	bx
020A:0E0C  58					pop	ax
020A:0E0D  5F					pop	di
020A:0E0E  5E					pop	si
020A:0E0F  75 17				jnz	loc_81			; Jump if not zero
020A:0E11			loc_80:
020A:0E11  0E E8 002A				callf	sub_12			; (0E3F)
020A:0E15  80 3E 002B 00			cmp	byte ptr ds:[2Bh],0	; (020A:002B=38h)
020A:0E1A  74 16				je	loc_83			; Jump if equal
020A:0E1C  50					push	ax
020A:0E1D  53					push	bx
020A:0E1E  E8 01FF				call	sub_16			; (1020)
020A:0E21  3D 0001				cmp	ax,1
020A:0E24  5B					pop	bx
020A:0E25  58					pop	ax
020A:0E26  74 0A				jz	loc_83			; Jump if zero
020A:0E28			loc_81:
020A:0E28  33 C0				xor	ax,ax			; Zero register
020A:0E2A  33 D2				xor	dx,dx			; Zero register
020A:0E2C  B3 82				mov	bl,82h
020A:0E2E  EB 02				jmp	short loc_83		; (0E32)
020A:0E30			loc_82:
020A:0E30  FF D7				call	di			;*
020A:0E32			loc_83:
020A:0E32  0E					push	cs
020A:0E33  FF 16 0014				call	word ptr ds:[14h]	; (020A:0014=0E0Dh)
020A:0E37  07					pop	es
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 18

020A:0E38  1F					pop	ds
020A:0E39  5F					pop	di
020A:0E3A  5E					pop	si
020A:0E3B  59					pop	cx
020A:0E3C  CB					retf				; Return far
020A:0E3D  6E					db	6Eh
020A:0E3E  FB					sti				; Enable interrupts

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_12		proc	near
020A:0E3F  FF 36 014D				push	word ptr ds:[14Dh]	; (020A:014D=5582h)
020A:0E43  57					push	di
020A:0E44  CB					retf				; Return far
				sub_12		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_13		proc	near
020A:0E45  06					push	es
020A:0E46  E8 0071				call	sub_14			; (0EBA)
020A:0E49  80 3E 002C 00			cmp	byte ptr ds:[2Ch],0	; (020A:002C=39h)
020A:0E4E  74 02				je	loc_84			; Jump if equal
020A:0E50  07					pop	es
020A:0E51  C3					retn
020A:0E52			loc_84:
020A:0E52  B8 020D				mov	ax,20Dh
020A:0E55  C4					db	0C4h
020A:0E56  C4 52 09				les	dx,dword ptr [bp+si+9]	; Load 32 bit ptr
020A:0E59  C4 36 001A				les	si,dword ptr ds:[1Ah]	; (020A:001A=0AE9Ch) Load 32 bit ptr
020A:0E5D  26: 87 04				xchg	es:[si],ax
020A:0E60  A3 001E				mov	word ptr ds:[1Eh],ax	; (020A:001E=961Fh)
020A:0E63  8C C8				mov	ax,cs
020A:0E65  26: 87 44 02				xchg	es:[si+2],ax
020A:0E69  A3 0020				mov	word ptr data_18+2,ax	; (020A:0020=0A3B9h)
020A:0E6C  8B C1				mov	ax,cx
020A:0E6E  3D 3C00				cmp	ax,3C00h
020A:0E71  72 03				jb	loc_85			; Jump if below
020A:0E73  B8 3C00				mov	ax,3C00h
020A:0E76			loc_85:
020A:0E76  2B 06 0037				sub	ax,word ptr ds:[37h]	; (020A:0037=0)
020A:0E7A  3D 0040				cmp	ax,40h
020A:0E7D  72 0C				jb	loc_86			; Jump if below
020A:0E7F  83 3E 0035 00			cmp	word ptr ds:[35h],0	; (020A:0035=80Fh)
020A:0E84  75 05				jne	loc_86			; Jump if not equal
020A:0E86  C6 06 0029 01			mov	byte ptr ds:[29h],1	; (020A:0029=14h)
020A:0E8B			loc_86:
020A:0E8B  0B C0				or	ax,ax			; Zero ?
020A:0E8D  74 20				jz	loc_89			; Jump if zero
020A:0E8F  B9 0400				mov	cx,400h
020A:0E92  33 DB				xor	bx,bx			; Zero register
020A:0E94  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (020A:0029=14h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 19

020A:0E99  74 03				je	loc_87			; Jump if equal
020A:0E9B  BB 0040				mov	bx,40h
020A:0E9E			loc_87:
020A:0E9E  3B 1E 0035				cmp	bx,word ptr ds:[35h]	; (020A:0035=80Fh)
020A:0EA2  73 04				jae	loc_88			; Jump if above or =
020A:0EA4  8B 1E 0035				mov	bx,word ptr ds:[35h]	; (020A:0035=80Fh)
020A:0EA8			loc_88:
020A:0EA8  03 CB				add	cx,bx
020A:0EAA  2B C3				sub	ax,bx
020A:0EAC  E8 01E2				call	sub_18			; (1091)
020A:0EAF			loc_89:
020A:0EAF  07					pop	es
020A:0EB0  C3					retn
				sub_13		endp

							                        ;* No entry point to code
020A:0EB1  13 00				adc	ax,[bx+si]
020A:0EB3  FF					db	0FFh
020A:0EB4  FF 56 44				call	word ptr [bp+44h]	;*
020A:0EB7  49					dec	cx
020A:0EB8  53					push	bx
020A:0EB9  4B					dec	bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_14		proc	near
020A:0EBA  06					push	es
020A:0EBB  33 C0				xor	ax,ax			; Zero register
020A:0EBD  8E C0				mov	es,ax
020A:0EBF  26: 8E 06 0066			mov	es,word ptr es:[66h]	; (0000:0066=20Ah)
020A:0EC4  BF 0012				mov	di,12h
020A:0EC7  BE 01C5				mov	si,1C5h
020A:0ECA  B9 0005				mov	cx,5
020A:0ECD  FC					cld				; Clear direction
020A:0ECE  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:0ED0  07					pop	es
020A:0ED1  74 24				jz	loc_90			; Jump if zero
020A:0ED3  E8 0110				call	sub_15			; (0FE6)
020A:0ED6  06					push	es
020A:0ED7  2E: C4 3E 01C1			les	di,dword ptr cs:[1C1h]	; (020A:01C1=0) Load 32 bit ptr
020A:0EDC  BE 01C5				mov	si,1C5h
020A:0EDF  B9 0005				mov	cx,5
020A:0EE2  FC					cld				; Clear direction
020A:0EE3  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:0EE5  07					pop	es
020A:0EE6  9C					pushf				; Push flags
020A:0EE7  E8 0136				call	sub_16			; (1020)
020A:0EEA  0E					push	cs
020A:0EEB  FF 16 0014				call	word ptr ds:[14h]	; (020A:0014=0E0Dh)
020A:0EEF  74 06				jz	loc_90			; Jump if zero
020A:0EF1  C6 06 002C 00			mov	byte ptr ds:[2Ch],0	; (020A:002C=39h)
020A:0EF6  C3					retn
020A:0EF7			loc_90:
020A:0EF7  C6 06 002C 01			mov	byte ptr ds:[2Ch],1	; (020A:002C=39h)
020A:0EFC  C3					retn
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 20

				sub_14		endp

							                        ;* No entry point to code
020A:0EFD  80 FC 88				cmp	ah,88h
020A:0F00  74 0A				je	loc_91			; Jump if equal
020A:0F02  80 FC 87				cmp	ah,87h
020A:0F05  74 0C				je	loc_92			; Jump if equal
020A:0F07  2E: FF 2E 001E			jmp	dword ptr cs:[1Eh]	; (020A:001E=961Fh)
020A:0F0C			loc_91:
020A:0F0C  2E: A1 0035				mov	ax,word ptr cs:[35h]	; (020A:0035=80Fh)
020A:0F10  E9 0249				jmp	loc_126			; (115C)
020A:0F13			loc_92:
020A:0F13  E8 01FE				call	sub_19			; (1114)
020A:0F16  83 EC 04				sub	sp,4
020A:0F19  60					db	60h
020A:0F1A  E8 016C				call	sub_17			; (1089)
020A:0F1D  8B EC				mov	bp,sp
020A:0F1F  89 46 12				mov	[bp+12h],ax
020A:0F22  8B 46 18				mov	ax,[bp+18h]
020A:0F25  89 46 10				mov	[bp+10h],ax
020A:0F28  61					db	61h
020A:0F29  2E: FF 1E 001E			call	dword ptr cs:[1Eh]	; (020A:001E=961Fh)
020A:0F2E  50					push	ax
020A:0F2F  9C					pushf				; Push flags
020A:0F30  55					push	bp
020A:0F31  8B EC				mov	bp,sp
020A:0F33  8B 46 02				mov	ax,[bp+2]
020A:0F36  89 46 0C				mov	[bp+0Ch],ax
020A:0F39  83 7E 06 00				cmp	word ptr [bp+6],0
020A:0F3D  5D					pop	bp
020A:0F3E  58					pop	ax
020A:0F3F  58					pop	ax
020A:0F40  74 0B				jz	loc_93			; Jump if zero
020A:0F42  E8 01CF				call	sub_19			; (1114)
020A:0F45  60					db	60h
020A:0F46  B8 0001				mov	ax,1
020A:0F49  E8 0272				call	sub_21			; (11BE)
020A:0F4C  61					db	61h
020A:0F4D			loc_93:
020A:0F4D  83 C4 02				add	sp,2
020A:0F50  E9 0209				jmp	loc_126			; (115C)
							                        ;* No entry point to code
020A:0F53  00 00				add	[bx+si],al
020A:0F55  E8 01BC				call	sub_19			; (1114)
020A:0F58  B3 91				mov	bl,91h
020A:0F5A  3C 40				cmp	al,40h			; '@'
020A:0F5C  75 06				jne	loc_94			; Jump if not equal
020A:0F5E  3B 16 0263				cmp	dx,word ptr ds:[263h]	; (020A:0263=0)
020A:0F62  74 21				je	loc_95			; Jump if equal
020A:0F64			loc_94:
020A:0F64  80 3E 0026 01			cmp	byte ptr ds:[26h],1	; (020A:0026=3)
020A:0F69  74 1A				je	loc_95			; Jump if equal
020A:0F6B  B3 90				mov	bl,90h
020A:0F6D  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (020A:0029=14h)
020A:0F72  74 11				je	loc_95			; Jump if equal
020A:0F74  B3 92				mov	bl,92h
020A:0F76  3B 16 0033				cmp	dx,word ptr ds:[33h]	; (020A:0033=0Ch)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 21

020A:0F7A  72 09				jb	loc_95			; Jump if below
020A:0F7C  B8 0001				mov	ax,1
020A:0F7F  A2 0026				mov	byte ptr ds:[26h],al	; (020A:0026=3)
020A:0F82  32 DB				xor	bl,bl			; Zero register
020A:0F84  C3					retn
020A:0F85			loc_95:
020A:0F85  33 C0				xor	ax,ax			; Zero register
020A:0F87  C3					retn
							                        ;* No entry point to code
020A:0F88  E8 0189				call	sub_19			; (1114)
020A:0F8B  A0 0026				mov	al,byte ptr ds:[26h]	; (020A:0026=3)
020A:0F8E  0A C0				or	al,al			; Zero ?
020A:0F90  74 0B				jz	loc_96			; Jump if zero
020A:0F92  C6 06 0026 00			mov	byte ptr ds:[26h],0	; (020A:0026=3)
020A:0F97  B8 0001				mov	ax,1
020A:0F9A  32 DB				xor	bl,bl			; Zero register
020A:0F9C  C3					retn
020A:0F9D			loc_96:
020A:0F9D  33 C0				xor	ax,ax			; Zero register
020A:0F9F  B3 93				mov	bl,93h
020A:0FA1  C3					retn
							                        ;* No entry point to code
020A:0FA2  E8 016F				call	sub_19			; (1114)
020A:0FA5  83 3E 0031 01			cmp	word ptr ds:[31h],1	; (020A:0031=3F3Eh)
020A:0FAA  74 0D				je	loc_97			; Jump if equal
020A:0FAC  E8 0037				call	sub_15			; (0FE6)
020A:0FAF  0B C0				or	ax,ax			; Zero ?
020A:0FB1  74 0C				jz	loc_98			; Jump if zero
020A:0FB3  C7 06 0031 0001			mov	word ptr ds:[31h],1	; (020A:0031=3F3Eh)
020A:0FB9			loc_97:
020A:0FB9  B8 0001				mov	ax,1
020A:0FBC  32 DB				xor	bl,bl			; Zero register
020A:0FBE  C3					retn
020A:0FBF			loc_98:
020A:0FBF  B3 82				mov	bl,82h
020A:0FC1  33 C0				xor	ax,ax			; Zero register
020A:0FC3  C3					retn
							                        ;* No entry point to code
020A:0FC4  E8 014D				call	sub_19			; (1114)
020A:0FC7  83 3E 0031 00			cmp	word ptr ds:[31h],0	; (020A:0031=3F3Eh)
020A:0FCC  74 0D				je	loc_99			; Jump if equal
020A:0FCE  E8 004F				call	sub_16			; (1020)
020A:0FD1  0B C0				or	ax,ax			; Zero ?
020A:0FD3  74 0C				jz	loc_100			; Jump if zero
020A:0FD5  C7 06 0031 0000			mov	word ptr ds:[31h],0	; (020A:0031=3F3Eh)
020A:0FDB			loc_99:
020A:0FDB  B8 0001				mov	ax,1
020A:0FDE  32 DB				xor	bl,bl			; Zero register
020A:0FE0  C3					retn
020A:0FE1			loc_100:
020A:0FE1  B3 82				mov	bl,82h
020A:0FE3  33			data_136	db	33h
020A:0FE4  C0					db	0C0h
020A:0FE5  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 22

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_15		proc	near
020A:0FE6  E8 012B				call	sub_19			; (1114)
020A:0FE9  80 3E 0027 01			cmp	byte ptr ds:[27h],1	; (020A:0027=4)
020A:0FEE  75 25				jne	loc_104			; Jump if not equal
020A:0FF0  C6 06 003B 03			mov	byte ptr ds:[3Bh],3	; (020A:003B=0)
020A:0FF5  83 3E 002F 00			cmp	word ptr ds:[2Fh],0	; (020A:002F=3D3Ch)
020A:0FFA  74 07				je	loc_102			; Jump if equal
020A:0FFC			loc_101:
020A:0FFC  E8 008A				call	sub_17			; (1089)
020A:0FFF  0B C0				or	ax,ax			; Zero ?
020A:1001  75 0E				jnz	loc_103			; Jump if not zero
020A:1003			loc_102:
020A:1003  B8 0001				mov	ax,1
020A:1006  E8 01B5				call	sub_21			; (11BE)
020A:1009  FE 0E 003B				dec	byte ptr ds:[3Bh]	; (020A:003B=0)
020A:100D  75 ED				jnz	loc_101			; Jump if not zero
020A:100F  EB 0A				jmp	short loc_105		; (101B)
020A:1011			loc_103:
020A:1011  FF 06 002F				inc	word ptr ds:[2Fh]	; (020A:002F=3D3Ch)
020A:1015			loc_104:
020A:1015  B8 0001				mov	ax,1
020A:1018  32 DB				xor	bl,bl			; Zero register
020A:101A  C3					retn
020A:101B			loc_105:
020A:101B  B3 82				mov	bl,82h
020A:101D  33 C0				xor	ax,ax			; Zero register
020A:101F  C3					retn
				sub_15		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_16		proc	near
020A:1020  E8 00F1				call	sub_19			; (1114)
020A:1023  80 3E 0027 00			cmp	byte ptr ds:[27h],0	; (020A:0027=4)
020A:1028  74 34				je	loc_110			; Jump if equal
020A:102A  83 3E 002F 00			cmp	word ptr ds:[2Fh],0	; (020A:002F=3D3Ch)
020A:102F  74 33				je	loc_111			; Jump if equal
020A:1031  C6 06 003B 03			mov	byte ptr ds:[3Bh],3	; (020A:003B=0)
020A:1036			loc_106:
020A:1036  E8 0050				call	sub_17			; (1089)
020A:1039  83 3E 002F 01			cmp	word ptr ds:[2Fh],1	; (020A:002F=3D3Ch)
020A:103E  75 08				jne	loc_107			; Jump if not equal
020A:1040  0B C0				or	ax,ax			; Zero ?
020A:1042  74 16				jz	loc_109			; Jump if zero
020A:1044  33 C0				xor	ax,ax			; Zero register
020A:1046  EB 07				jmp	short loc_108		; (104F)
020A:1048			loc_107:
020A:1048  0B C0				or	ax,ax			; Zero ?
020A:104A  75 0E				jnz	loc_109			; Jump if not zero
020A:104C  B8 0001				mov	ax,1
020A:104F			loc_108:
020A:104F  E8 016C				call	sub_21			; (11BE)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 23

020A:1052  FE 0E 003B				dec	byte ptr ds:[3Bh]	; (020A:003B=0)
020A:1056  75 DE				jnz	loc_106			; Jump if not zero
020A:1058  EB 0A				jmp	short loc_111		; (1064)
020A:105A			loc_109:
020A:105A  FF 0E 002F				dec	word ptr ds:[2Fh]	; (020A:002F=3D3Ch)
020A:105E			loc_110:
020A:105E  B8 0001				mov	ax,1
020A:1061  32 DB				xor	bl,bl			; Zero register
020A:1063  C3					retn
020A:1064			loc_111:
020A:1064  B3 82				mov	bl,82h
020A:1066  33 C0				xor	ax,ax			; Zero register
020A:1068  C3					retn
				sub_16		endp

							                        ;* No entry point to code
020A:1069  2E: 80 3E 002B 00			cmp	byte ptr cs:[2Bh],0	; (020A:002B=38h)
020A:106F  74 04				je	loc_112			; Jump if equal
020A:1071  B8 0001				mov	ax,1
020A:1074  CB					retf				; Return far
020A:1075			loc_112:
020A:1075  E8 FF6E				call	sub_15			; (0FE6)
020A:1078  CB					retf
							                        ;* No entry point to code
020A:1079  2E: 80 3E 002B 00			cmp	byte ptr cs:[2Bh],0	; (020A:002B=38h)
020A:107F  74 04				je	loc_113			; Jump if equal
020A:1081  B8 0001				mov	ax,1
020A:1084  CB					retf				; Return far
020A:1085			loc_113:
020A:1085  E8 FF98				call	sub_16			; (1020)
020A:1088  CB					retf				; Return far

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_17		proc	near
020A:1089  2E: A0 003C				mov	al,byte ptr cs:[3Ch]	; (020A:003C=10h)
020A:108D  98					cbw				; Convrt byte to word
020A:108E  32 DB				xor	bl,bl			; Zero register
020A:1090  C3					retn
				sub_17		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_18		proc	near
020A:1091  8B D0				mov	dx,ax
020A:1093  8B F1				mov	si,cx
020A:1095  33 FF				xor	di,di			; Zero register
020A:1097  06					push	es
020A:1098  8E 06 014D				mov	es,word ptr ds:[14Dh]	; (020A:014D=5582h)
020A:109C  26: 8B 1E A004			mov	bx,word ptr es:[0A004h]	; (5582:A004=50C8h)
020A:10A1  26: 8B 0E A008			mov	cx,word ptr es:[0A008h]	; (5582:A008=8BFFh)

           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 24

020A:10A6			locloop_114:
020A:10A6  26: 80 3F 04				cmp	byte ptr es:[bx],4
020A:10AA  75 08				jne	loc_115			; Jump if not equal
020A:10AC  0B FF				or	di,di			; Zero ?
020A:10AE  75 48				jnz	loc_118			; Jump if not zero
020A:10B0  8B FB				mov	di,bx
020A:10B2  EB 44				jmp	short loc_118		; (10F8)
020A:10B4			loc_115:
020A:10B4  26: 80 3F 01				cmp	byte ptr es:[bx],1
020A:10B8  75 3E				jne	loc_118			; Jump if not equal
020A:10BA  26: 8B 47 02				mov	ax,es:[bx+2]
020A:10BE  26: 03 47 04				add	ax,es:[bx+4]
020A:10C2  3B C6				cmp	ax,si
020A:10C4  72 32				jb	loc_118			; Jump if below
020A:10C6  8B C6				mov	ax,si
020A:10C8  03 C2				add	ax,dx
020A:10CA  26: 3B 47 02				cmp	ax,es:[bx+2]
020A:10CE  72 28				jb	loc_118			; Jump if below
020A:10D0  26: 3B 77 02				cmp	si,es:[bx+2]
020A:10D4  76 08				jbe	loc_116			; Jump if below or =
020A:10D6  03 D6				add	dx,si
020A:10D8  26: 8B 77 02				mov	si,es:[bx+2]
020A:10DC  2B D6				sub	dx,si
020A:10DE			loc_116:
020A:10DE  26: 8B 47 02				mov	ax,es:[bx+2]
020A:10E2  26: 03 47 04				add	ax,es:[bx+4]
020A:10E6  2B C2				sub	ax,dx
020A:10E8  2B C6				sub	ax,si
020A:10EA  76 02				jbe	loc_117			; Jump if below or =
020A:10EC  03 D0				add	dx,ax
020A:10EE			loc_117:
020A:10EE  26: C6 07 04				mov	byte ptr es:[bx],4
020A:10F2  0B FF				or	di,di			; Zero ?
020A:10F4  75 02				jnz	loc_118			; Jump if not zero
020A:10F6  8B FB				mov	di,bx
020A:10F8			loc_118:
020A:10F8  83 C3 06				add	bx,6
020A:10FB  E2 A9				loop	locloop_114		; Loop if cx > 0

020A:10FD  0B FF				or	di,di			; Zero ?
020A:10FF  74 11				jz	loc_119			; Jump if zero
020A:1101  26: C6 45 01 00			mov	byte ptr es:[di+1],0
020A:1106  26: C6 05 01				mov	byte ptr es:[di],1
020A:110A  26: 89 75 02				mov	es:[di+2],si
020A:110E  26: 89 55 04				mov	es:[di+4],dx
020A:1112			loc_119:
020A:1112  07					pop	es
020A:1113  C3					retn
				sub_18		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_19		proc	near
020A:1114  1E					push	ds
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 25

020A:1115  50					push	ax
020A:1116  B8 0040				mov	ax,40h
020A:1119  8E D8				mov	ds,ax
020A:111B  9F					lahf				; Load ah from flags
020A:111C  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:1122  75 0C				jnz	loc_121			; Jump if not zero
020A:1124  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:112B			loc_120:
020A:112B  9E					sahf				; Store ah into flags
020A:112C  58					pop	ax
020A:112D  1F					pop	ds
020A:112E  EB 03				jmp	short loc_122		; (1133)
020A:1130			loc_121:
020A:1130  FA					cli				; Disable interrupts
020A:1131  EB F8				jmp	short loc_120		; (112B)
020A:1133			loc_122:
020A:1133  C3					retn
				sub_19		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_20		proc	near
020A:1134  1E					push	ds
020A:1135  50					push	ax
020A:1136  B8 0040				mov	ax,40h
020A:1139  8E D8				mov	ds,ax
020A:113B  9F					lahf				; Load ah from flags
020A:113C  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1142  75 14				jnz	loc_124			; Jump if not zero
020A:1144  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:114A  75 0C				jnz	loc_124			; Jump if not zero
020A:114C  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:1153			loc_123:
020A:1153  9E					sahf				; Store ah into flags
020A:1154  58					pop	ax
020A:1155  1F					pop	ds
020A:1156  EB 03				jmp	short loc_125		; (115B)
020A:1158			loc_124:
020A:1158  FB					sti				; Enable interrupts
020A:1159  EB F8				jmp	short loc_123		; (1153)
020A:115B			loc_125:
020A:115B  C3					retn
				sub_20		endp

020A:115C			loc_126:
020A:115C  1E					push	ds
020A:115D  50					push	ax
020A:115E  B8 0040				mov	ax,40h
020A:1161  8E D8				mov	ds,ax
020A:1163  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:1169  75 4F				jnz	loc_134			; Jump if not zero
020A:116B  55					push	bp
020A:116C  8B EC				mov	bp,sp
020A:116E  8B 46 0A				mov	ax,[bp+0Ah]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 26

020A:1171  5D					pop	bp
020A:1172  A9 0100				test	ax,100h
020A:1175  75 43				jnz	loc_134			; Jump if not zero
020A:1177  A9 0200				test	ax,200h
020A:117A  74 22				jz	loc_130			; Jump if zero
020A:117C  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:1183  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1189  75 2F				jnz	loc_134			; Jump if not zero
020A:118B			loc_127:
020A:118B  86 E0				xchg	ah,al
020A:118D  FC					cld				; Clear direction
020A:118E  A8 04				test	al,4
020A:1190  75 25				jnz	loc_133			; Jump if not zero
020A:1192			loc_128:
020A:1192  A8 08				test	al,8
020A:1194  75 11				jnz	loc_131			; Jump if not zero
020A:1196  70 19				jo	loc_132			; Jump if overflow=1
020A:1198			loc_129:
020A:1198  9E					sahf				; Store ah into flags
020A:1199  58					pop	ax
020A:119A  1F					pop	ds
020A:119B  CA 0002				retf	2			; Return far
020A:119E			loc_130:
020A:119E  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (020A:0314=3231h)
020A:11A5  EB E4				jmp	short loc_127		; (118B)
020A:11A7			loc_131:
020A:11A7  70 EF				jo	loc_129			; Jump if overflow=1
020A:11A9  50					push	ax
020A:11AA  B0 7F				mov	al,7Fh
020A:11AC  04 02				add	al,2
020A:11AE  58					pop	ax
020A:11AF  EB E7				jmp	short loc_129		; (1198)
020A:11B1			loc_132:
020A:11B1  50					push	ax
020A:11B2  32 C0				xor	al,al			; Zero register
020A:11B4  58					pop	ax
020A:11B5  EB E1				jmp	short loc_129		; (1198)
020A:11B7			loc_133:
020A:11B7  FD					std				; Set direction flag
020A:11B8  EB D8				jmp	short loc_128		; (1192)
020A:11BA			loc_134:
020A:11BA  58					pop	ax
020A:11BB  1F					pop	ds
020A:11BC  CF					iret				; Interrupt return
020A:11BD  00 3D				add	[di],bh
020A:11BF  02 00				add	al,[bx+si]
020A:11C1  75 06				jnz	loc_135			; Jump if not zero
020A:11C3  2E: A0 003C				mov	al,byte ptr cs:[3Ch]	; (020A:003C=10h)
020A:11C7  98					cbw				; Convrt byte to word
020A:11C8  C3					retn
020A:11C9			loc_135:
020A:11C9  C4					db	0C4h
020A:11CA  C4 52 00		;*		les	dx,dword ptr [bp+si+0]	; Load 32 bit ptr
020A:11CA  C4 52 00				db	0C4h, 52h, 00h
020A:11CD  C3					retn
							                        ;* No entry point to code
020A:11CE  2E: C6 46 28 03			mov	byte ptr cs:[bp+28h],3
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 27

020A:11D3  49					dec	cx
020A:11D4  00 00				add	[bx+si],al
020A:11D6  0D 002F				or	ax,2Fh
020A:11D9  00 06 0600				add	byte ptr ds:[600h],al	; (020A:0600=2)
020A:11DD  00 0F				add	[bx],cl
020A:11DF  61					db	61h
020A:11E0  FF					db	0FFh
020A:11E1  FF 06 2300				inc	data_217		; (020A:2300=0)
020A:11E5  0021[00]				db	33 dup (0)
020A:1206  00			data_138	db	0
020A:1207  00			data_139	db	0
020A:1208  00			data_140	db	0
020A:1209  00			data_141	db	0
020A:120A  00			data_142	db	0
020A:120B  00					db	0
020A:120C  00					db	0
020A:120D  00					db	0
020A:120E  00					db	0
020A:120F  00					db	0
020A:1210  00					db	0
020A:1211  00					db	0
020A:1212  00					db	0
020A:1213  00					db	0
020A:1214  00					db	0
020A:1215  00					db	0
020A:1216  00					db	0
020A:1217  00					db	0
020A:1218  00					db	0
020A:1219  00					db	0
020A:121A  00					db	0
020A:121B  00					db	0
020A:121C  00					db	0
020A:121D  00					db	0
020A:121E  00					db	0
020A:121F  00					db	0
020A:1220  00					db	0
020A:1221  00					db	0
020A:1222  00					db	0
020A:1223  00					db	0
020A:1224  00					db	0
020A:1225  00					db	0
020A:1226  00					db	0
020A:1227  00					db	0
020A:1228  00					db	0
020A:1229  00					db	0
020A:122A  00					db	0
020A:122B  00					db	0
020A:122C  00					db	0
020A:122D  00					db	0
020A:122E  00					db	0
020A:122F  00					db	0
020A:1230  00					db	0
020A:1231  00					db	0
020A:1232  00					db	0
020A:1233  00					db	0
020A:1234  00					db	0
020A:1235  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 28

020A:1236  00					db	0
020A:1237  00					db	0
020A:1238  00					db	0
020A:1239  00					db	0
020A:123A  00					db	0
020A:123B  00					db	0
020A:123C  00					db	0
020A:123D  00					db	0
020A:123E  00					db	0
020A:123F  00					db	0
020A:1240  00					db	0
020A:1241  00					db	0
020A:1242  00					db	0
020A:1243  00					db	0
020A:1244  00					db	0
020A:1245  00					db	0
020A:1246  00					db	0
020A:1247  00					db	0
020A:1248  00					db	0
020A:1249  00					db	0
020A:124A  00					db	0
020A:124B  00					db	0
020A:124C  00					db	0
020A:124D  00					db	0
020A:124E  00					db	0
020A:124F  00					db	0
020A:1250  00					db	0
020A:1251  00					db	0
020A:1252  00					db	0
020A:1253  00					db	0
020A:1254  00					db	0
020A:1255  00					db	0
020A:1256  00					db	0
020A:1257  00					db	0
020A:1258  00					db	0
020A:1259  00					db	0
020A:125A  00					db	0
020A:125B  00					db	0
020A:125C  00					db	0
020A:125D  00					db	0
020A:125E  00					db	0
020A:125F  00					db	0
020A:1260  00					db	0
020A:1261  00					db	0
020A:1262  00					db	0
020A:1263  00					db	0
020A:1264  00					db	0
020A:1265  00					db	0
020A:1266  00					db	0
020A:1267  00					db	0
020A:1268  00					db	0
020A:1269  00					db	0
020A:126A  00					db	0
020A:126B  00					db	0
020A:126C  00					db	0
020A:126D  00					db	0
020A:126E  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 29

020A:126F  00					db	0
020A:1270  00					db	0
020A:1271  00					db	0
020A:1272  00					db	0
020A:1273  00					db	0
020A:1274  00					db	0
020A:1275  00					db	0
020A:1276  00					db	0
020A:1277  00					db	0
020A:1278  00					db	0
020A:1279  00					db	0
020A:127A  00					db	0
020A:127B  00					db	0
020A:127C  00					db	0
020A:127D  00					db	0
020A:127E  00					db	0
020A:127F  00					db	0
020A:1280  00					db	0
020A:1281  00					db	0
020A:1282  00					db	0
020A:1283  00					db	0
020A:1284  00					db	0
020A:1285  00					db	0
020A:1286  00					db	0
020A:1287  00					db	0
020A:1288  00					db	0
020A:1289  00					db	0
020A:128A  00					db	0
020A:128B  00					db	0
020A:128C  00					db	0
020A:128D  00					db	0
020A:128E  00					db	0
020A:128F  00					db	0
020A:1290  00					db	0
020A:1291  00					db	0
020A:1292  00					db	0
020A:1293  00					db	0
020A:1294  00					db	0
020A:1295  00					db	0
020A:1296  00					db	0
020A:1297  00					db	0
020A:1298  00					db	0
020A:1299  00					db	0
020A:129A  00					db	0
020A:129B  00					db	0
020A:129C  00					db	0
020A:129D  00					db	0
020A:129E  00					db	0
020A:129F  00					db	0
020A:12A0  00					db	0
020A:12A1  00					db	0
020A:12A2  00					db	0
020A:12A3  00					db	0
020A:12A4  00					db	0
020A:12A5  00					db	0
020A:12A6  00					db	0
020A:12A7  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 30

020A:12A8  00					db	0
020A:12A9  00					db	0
020A:12AA  00					db	0
020A:12AB  00					db	0
020A:12AC  00					db	0
020A:12AD  00					db	0
020A:12AE  00					db	0
020A:12AF  00					db	0
020A:12B0  00					db	0
020A:12B1  00					db	0
020A:12B2  00					db	0
020A:12B3  00					db	0
020A:12B4  00					db	0
020A:12B5  00					db	0
020A:12B6  00					db	0
020A:12B7  00					db	0
020A:12B8  00					db	0
020A:12B9  00					db	0
020A:12BA  00					db	0
020A:12BB  00					db	0
020A:12BC  00					db	0
020A:12BD  00					db	0
020A:12BE  00					db	0
020A:12BF  00					db	0
020A:12C0  00					db	0
020A:12C1  00					db	0
020A:12C2  00					db	0
020A:12C3  00					db	0
020A:12C4  00					db	0
020A:12C5  00					db	0
020A:12C6  00					db	0
020A:12C7  00					db	0
020A:12C8  00					db	0
020A:12C9  00					db	0
020A:12CA  00					db	0
020A:12CB  00					db	0
020A:12CC  00					db	0
020A:12CD  00					db	0
020A:12CE  00					db	0
020A:12CF  00					db	0
020A:12D0  00					db	0
020A:12D1  00					db	0
020A:12D2  00					db	0
020A:12D3  00					db	0
020A:12D4  00					db	0
020A:12D5  00					db	0
020A:12D6  00					db	0
020A:12D7  00					db	0
020A:12D8  00					db	0
020A:12D9  00					db	0
020A:12DA  00					db	0
020A:12DB  00					db	0
020A:12DC  00					db	0
020A:12DD  00					db	0
020A:12DE  00					db	0
020A:12DF  00					db	0
020A:12E0  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 31

020A:12E1  00					db	0
020A:12E2  00					db	0
020A:12E3  00					db	0
020A:12E4  00					db	0
020A:12E5  00					db	0
020A:12E6  00					db	0
020A:12E7  00					db	0
020A:12E8  00					db	0
020A:12E9  00					db	0
020A:12EA  00					db	0
020A:12EB  00					db	0
020A:12EC  00					db	0
020A:12ED  00					db	0
020A:12EE  00					db	0
020A:12EF  00					db	0
020A:12F0  00					db	0
020A:12F1  00					db	0
020A:12F2  00					db	0
020A:12F3  00					db	0
020A:12F4  00					db	0
020A:12F5  00					db	0
020A:12F6  00					db	0
020A:12F7  00					db	0
020A:12F8  00					db	0
020A:12F9  00					db	0
020A:12FA  00					db	0
020A:12FB  00					db	0
020A:12FC  00					db	0
020A:12FD  00					db	0
020A:12FE  00					db	0
020A:12FF  00					db	0
020A:1300  00					db	0
020A:1301  00					db	0
020A:1302  00					db	0
020A:1303  00					db	0
020A:1304  00					db	0
020A:1305  00					db	0
020A:1306  00					db	0
020A:1307  00					db	0
020A:1308  00					db	0
020A:1309  00					db	0
020A:130A  00					db	0
020A:130B  00					db	0
020A:130C  00					db	0
020A:130D  00					db	0
020A:130E  00					db	0
020A:130F  00					db	0
020A:1310  00					db	0
020A:1311  00					db	0
020A:1312  00					db	0
020A:1313  00					db	0
020A:1314  00					db	0
020A:1315  00					db	0
020A:1316  00					db	0
020A:1317  00					db	0
020A:1318  00					db	0
020A:1319  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 32

020A:131A  00					db	0
020A:131B  0000			data_143	dw	0
020A:131D  0000			data_144	dw	0
020A:131F  0000			data_145	dw	0
020A:1321  0000			data_146	dw	0
020A:1323  00					db	0
020A:1324  00					db	0
020A:1325  00					db	0
020A:1326  0000			data_147	dw	0
020A:1328  00			data_148	db	0
020A:1329  00			data_149	db	0
020A:132A  00					db	0
020A:132B  00					db	0
020A:132C  00					db	0
020A:132D  00					db	0
020A:132E  00					db	0
020A:132F  00					db	0
020A:1330  00					db	0
020A:1331  00					db	0
020A:1332  00					db	0
020A:1333  00					db	0
020A:1334  00					db	0
020A:1335  00					db	0
020A:1336  00					db	0
020A:1337  00					db	0
020A:1338  00					db	0
020A:1339  00					db	0
020A:133A  00					db	0
020A:133B  00					db	0
020A:133C  00					db	0
020A:133D  00					db	0
020A:133E  00			data_150	db	0
020A:133F  00					db	0
020A:1340  00					db	0
020A:1341  00					db	0
020A:1342  00					db	0
020A:1343  00					db	0
020A:1344  00					db	0
020A:1345  0000			data_151	dw	0
020A:1347  00					db	0
020A:1348  00					db	0
020A:1349  00					db	0
020A:134A  00					db	0
020A:134B  00					db	0
020A:134C  00					db	0
020A:134D  00					db	0
020A:134E  00					db	0
020A:134F  00					db	0
020A:1350  00					db	0
020A:1351  00					db	0
020A:1352  00					db	0
020A:1353  00					db	0
020A:1354  00					db	0
020A:1355  00					db	0
020A:1356  00					db	0
020A:1357  00					db	0
020A:1358  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 33

020A:1359  00					db	0
020A:135A  00					db	0
020A:135B  00					db	0
020A:135C  00					db	0
020A:135D  00					db	0
020A:135E  00					db	0
020A:135F  00					db	0
020A:1360  00					db	0
020A:1361  00					db	0
020A:1362  00					db	0
020A:1363  00					db	0
020A:1364  00					db	0
020A:1365  00					db	0
020A:1366  00					db	0
020A:1367  00					db	0
020A:1368  00					db	0
020A:1369  00					db	0
020A:136A  00					db	0
020A:136B  00					db	0
020A:136C  00					db	0
020A:136D  00					db	0
020A:136E  00					db	0
020A:136F  00					db	0
020A:1370  00					db	0
020A:1371  00					db	0
020A:1372  00					db	0
020A:1373  00					db	0
020A:1374  00					db	0
020A:1375  00					db	0
020A:1376  00					db	0
020A:1377  00					db	0
020A:1378  00					db	0
020A:1379  00					db	0
020A:137A  00					db	0
020A:137B  00					db	0
020A:137C  00					db	0
020A:137D  00					db	0
020A:137E  00					db	0
020A:137F  00					db	0
020A:1380  00					db	0
020A:1381  00					db	0
020A:1382  00					db	0
020A:1383  00					db	0
020A:1384  00					db	0
020A:1385  00					db	0
020A:1386  00					db	0
020A:1387  00					db	0
020A:1388  00					db	0
020A:1389  00					db	0
020A:138A  00					db	0
020A:138B  00					db	0
020A:138C  00					db	0
020A:138D  00					db	0
020A:138E  00					db	0
020A:138F  00					db	0
020A:1390  00					db	0
020A:1391  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 34

020A:1392  00					db	0
020A:1393  00					db	0
020A:1394  00					db	0
020A:1395  00					db	0
020A:1396  00					db	0
020A:1397  00					db	0
020A:1398  00					db	0
020A:1399  00					db	0
020A:139A  00					db	0
020A:139B  00					db	0
020A:139C  00					db	0
020A:139D  00					db	0
020A:139E  00					db	0
020A:139F  00					db	0
020A:13A0  00					db	0
020A:13A1  00					db	0
020A:13A2  00					db	0
020A:13A3  00					db	0
020A:13A4  00					db	0
020A:13A5  00					db	0
020A:13A6  00					db	0
020A:13A7  00					db	0
020A:13A8  00					db	0
020A:13A9  00					db	0
020A:13AA  00					db	0
020A:13AB  00					db	0
020A:13AC  00					db	0
020A:13AD  00					db	0
020A:13AE  00					db	0
020A:13AF  00					db	0
020A:13B0  00					db	0
020A:13B1  00					db	0
020A:13B2  00					db	0
020A:13B3  00					db	0
020A:13B4  00					db	0
020A:13B5  00					db	0
020A:13B6  00					db	0
020A:13B7  00					db	0
020A:13B8  00					db	0
020A:13B9  00					db	0
020A:13BA  00					db	0
020A:13BB  00					db	0
020A:13BC  00					db	0
020A:13BD  00					db	0
020A:13BE  00					db	0
020A:13BF  00					db	0
020A:13C0  00					db	0
020A:13C1  00					db	0
020A:13C2  00					db	0
020A:13C3  00					db	0
020A:13C4  00					db	0
020A:13C5  00					db	0
020A:13C6  00					db	0
020A:13C7  00					db	0
020A:13C8  00					db	0
020A:13C9  00					db	0
020A:13CA  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 35

020A:13CB  00					db	0
020A:13CC  00					db	0
020A:13CD  00					db	0
020A:13CE  00					db	0
020A:13CF  00					db	0
020A:13D0  00					db	0
020A:13D1  00					db	0
020A:13D2  00					db	0
020A:13D3  00					db	0
020A:13D4  00					db	0
020A:13D5  00					db	0
020A:13D6  00					db	0
020A:13D7  00					db	0
020A:13D8  00					db	0
020A:13D9  00					db	0
020A:13DA  00					db	0
020A:13DB  00					db	0
020A:13DC  00					db	0
020A:13DD  00					db	0
020A:13DE  00					db	0
020A:13DF  00					db	0
020A:13E0  00					db	0
020A:13E1  00					db	0
020A:13E2  00					db	0
020A:13E3  00					db	0
020A:13E4  00			data_152	db	0
020A:13E5  00			data_153	db	0
020A:13E6  0000			data_154	dw	0
020A:13E8  00					db	0
020A:13E9  00					db	0
020A:13EA  00					db	0
020A:13EB  00					db	0
020A:13EC  00					db	0
020A:13ED  00					db	0
020A:13EE  00					db	0
020A:13EF  00					db	0
020A:13F0  00					db	0
020A:13F1  00					db	0
020A:13F2  00					db	0
020A:13F3  00					db	0
020A:13F4  00					db	0
020A:13F5  00					db	0
020A:13F6  00					db	0
020A:13F7  00					db	0
020A:13F8  00					db	0
020A:13F9  00					db	0
020A:13FA  00					db	0
020A:13FB  00					db	0
020A:13FC  00					db	0
020A:13FD  00					db	0
020A:13FE  00					db	0
020A:13FF  00					db	0
020A:1400  00					db	0
020A:1401  00					db	0
020A:1402  00					db	0
020A:1403  00					db	0
020A:1404  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 36

020A:1405  00					db	0
020A:1406  00					db	0
020A:1407  00					db	0
020A:1408  00					db	0
020A:1409  00					db	0
020A:140A  00					db	0
020A:140B  00					db	0
020A:140C  00					db	0
020A:140D  00					db	0
020A:140E  00					db	0
020A:140F  00					db	0
020A:1410  00					db	0
020A:1411  00					db	0
020A:1412  00					db	0
020A:1413  00					db	0
020A:1414  00					db	0
020A:1415  00					db	0
020A:1416  00					db	0
020A:1417  00					db	0
020A:1418  00					db	0
020A:1419  00					db	0
020A:141A  00					db	0
020A:141B  00					db	0
020A:141C  00					db	0
020A:141D  00					db	0
020A:141E  00					db	0
020A:141F  00					db	0
020A:1420  00					db	0
020A:1421  00					db	0
020A:1422  00					db	0
020A:1423  00					db	0
020A:1424  00					db	0
020A:1425  00					db	0
020A:1426  00					db	0
020A:1427  00					db	0
020A:1428  00					db	0
020A:1429  00					db	0
020A:142A  00					db	0
020A:142B  00					db	0
020A:142C  00					db	0
020A:142D  00					db	0
020A:142E  00					db	0
020A:142F  00					db	0
020A:1430  00					db	0
020A:1431  00					db	0
020A:1432  00					db	0
020A:1433  00					db	0
020A:1434  00					db	0
020A:1435  00					db	0
020A:1436  00					db	0
020A:1437  00					db	0
020A:1438  00					db	0
020A:1439  00					db	0
020A:143A  00					db	0
020A:143B  00					db	0
020A:143C  00					db	0
020A:143D  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 37

020A:143E  00					db	0
020A:143F  00					db	0
020A:1440  00					db	0
020A:1441  00					db	0
020A:1442  00					db	0
020A:1443  00					db	0
020A:1444  00					db	0
020A:1445  00					db	0
020A:1446  00					db	0
020A:1447  00					db	0
020A:1448  00					db	0
020A:1449  00					db	0
020A:144A  00					db	0
020A:144B  00					db	0
020A:144C  00					db	0
020A:144D  00					db	0
020A:144E  00					db	0
020A:144F  00					db	0
020A:1450  00					db	0
020A:1451  00					db	0
020A:1452  00					db	0
020A:1453  00					db	0
020A:1454  00					db	0
020A:1455  00					db	0
020A:1456  00					db	0
020A:1457  00					db	0
020A:1458  00					db	0
020A:1459  00					db	0
020A:145A  00					db	0
020A:145B  00					db	0
020A:145C  00					db	0
020A:145D  00					db	0
020A:145E  00					db	0
020A:145F  00					db	0
020A:1460  00					db	0
020A:1461  00					db	0
020A:1462  00					db	0
020A:1463  00					db	0
020A:1464  00					db	0
020A:1465  00					db	0
020A:1466  00					db	0
020A:1467  00					db	0
020A:1468  00					db	0
020A:1469  00					db	0
020A:146A  00					db	0
020A:146B  00					db	0
020A:146C  00					db	0
020A:146D  00					db	0
020A:146E  00					db	0
020A:146F  00					db	0
020A:1470  00					db	0
020A:1471  00					db	0
020A:1472  00					db	0
020A:1473  00					db	0
020A:1474  00					db	0
020A:1475  00					db	0
020A:1476  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 38

020A:1477  00					db	0
020A:1478  00					db	0
020A:1479  00					db	0
020A:147A  00					db	0
020A:147B  00					db	0
020A:147C  00					db	0
020A:147D  00					db	0
020A:147E  00					db	0
020A:147F  00					db	0
020A:1480  00					db	0
020A:1481  00					db	0
020A:1482  00					db	0
020A:1483  00					db	0
020A:1484  00					db	0
020A:1485  00					db	0
020A:1486  00					db	0
020A:1487  00					db	0
020A:1488  00					db	0
020A:1489  00					db	0
020A:148A  00					db	0
020A:148B  00					db	0
020A:148C  00					db	0
020A:148D  00					db	0
020A:148E  00					db	0
020A:148F  00					db	0
020A:1490  00					db	0
020A:1491  00					db	0
020A:1492  00					db	0
020A:1493  00					db	0
020A:1494  00					db	0
020A:1495  00					db	0
020A:1496  00					db	0
020A:1497  00					db	0
020A:1498  00					db	0
020A:1499  00					db	0
020A:149A  00					db	0
020A:149B  00					db	0
020A:149C  00					db	0
020A:149D  00					db	0
020A:149E  00					db	0
020A:149F  00					db	0
020A:14A0  00					db	0
020A:14A1  00					db	0
020A:14A2  00					db	0
020A:14A3  00					db	0
020A:14A4  00					db	0
020A:14A5  00					db	0
020A:14A6  00					db	0
020A:14A7  00					db	0
020A:14A8  00					db	0
020A:14A9  00					db	0
020A:14AA  00					db	0
020A:14AB  00					db	0
020A:14AC  00					db	0
020A:14AD  00					db	0
020A:14AE  00					db	0
020A:14AF  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 39

020A:14B0  00					db	0
020A:14B1  00					db	0
020A:14B2  00					db	0
020A:14B3  00					db	0
020A:14B4  00					db	0
020A:14B5  00					db	0
020A:14B6  00					db	0
020A:14B7  00					db	0
020A:14B8  00					db	0
020A:14B9  00					db	0
020A:14BA  00					db	0
020A:14BB  00					db	0
020A:14BC  00					db	0
020A:14BD  00					db	0
020A:14BE  00					db	0
020A:14BF  00					db	0
020A:14C0  00					db	0
020A:14C1  00					db	0
020A:14C2  00					db	0
020A:14C3  00					db	0
020A:14C4  00					db	0
020A:14C5  00					db	0
020A:14C6  00					db	0
020A:14C7  00					db	0
020A:14C8  00					db	0
020A:14C9  00					db	0
020A:14CA  00					db	0
020A:14CB  00					db	0
020A:14CC  00					db	0
020A:14CD  00					db	0
020A:14CE  00					db	0
020A:14CF  00					db	0
020A:14D0  00					db	0
020A:14D1  00					db	0
020A:14D2  00					db	0
020A:14D3  00					db	0
020A:14D4  00					db	0
020A:14D5  00					db	0
020A:14D6  00					db	0
020A:14D7  00					db	0
020A:14D8  00					db	0
020A:14D9  00					db	0
020A:14DA  00					db	0
020A:14DB  00					db	0
020A:14DC  00					db	0
020A:14DD  00					db	0
020A:14DE  00					db	0
020A:14DF  00					db	0
020A:14E0  00					db	0
020A:14E1  00					db	0
020A:14E2  00					db	0
020A:14E3  00					db	0
020A:14E4  00					db	0
020A:14E5  00					db	0
020A:14E6  00					db	0
020A:14E7  00					db	0
020A:14E8  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 40

020A:14E9  00					db	0
020A:14EA  00					db	0
020A:14EB  00					db	0
020A:14EC  00					db	0
020A:14ED  00					db	0
020A:14EE  00					db	0
020A:14EF  00					db	0
020A:14F0  00					db	0
020A:14F1  00					db	0
020A:14F2  00					db	0
020A:14F3  00					db	0
020A:14F4  00					db	0
020A:14F5  00					db	0
020A:14F6  00					db	0
020A:14F7  00					db	0
020A:14F8  00					db	0
020A:14F9  00					db	0
020A:14FA  00			data_155	db	0
020A:14FB  00					db	0
020A:14FC  00					db	0
020A:14FD  00					db	0
020A:14FE  00					db	0
020A:14FF  00					db	0
020A:1500  00					db	0
020A:1501  00					db	0
020A:1502  00					db	0
020A:1503  00					db	0
020A:1504  00			data_156	db	0
020A:1505  00					db	0
020A:1506  00					db	0
020A:1507  00					db	0
020A:1508  00					db	0
020A:1509  00					db	0
020A:150A  00					db	0
020A:150B  00					db	0
020A:150C  00					db	0
020A:150D  00					db	0
020A:150E  00					db	0
020A:150F  00					db	0
020A:1510  00					db	0
020A:1511  00					db	0
020A:1512  00					db	0
020A:1513  00					db	0
020A:1514  00					db	0
020A:1515  00					db	0
020A:1516  00					db	0
020A:1517  00					db	0
020A:1518  00					db	0
020A:1519  00					db	0
020A:151A  00					db	0
020A:151B  00					db	0
020A:151C  00					db	0
020A:151D  00					db	0
020A:151E  00					db	0
020A:151F  00					db	0
020A:1520  00					db	0
020A:1521  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 41

020A:1522  00					db	0
020A:1523  00					db	0
020A:1524  00					db	0
020A:1525  00					db	0
020A:1526  00					db	0
020A:1527  00					db	0
020A:1528  00					db	0
020A:1529  00					db	0
020A:152A  00					db	0
020A:152B  00					db	0
020A:152C  00					db	0
020A:152D  00					db	0
020A:152E  00					db	0
020A:152F  00					db	0
020A:1530  00					db	0
020A:1531  00					db	0
020A:1532  00					db	0
020A:1533  00					db	0
020A:1534  00					db	0
020A:1535  00					db	0
020A:1536  00					db	0
020A:1537  00					db	0
020A:1538  00					db	0
020A:1539  00					db	0
020A:153A  00					db	0
020A:153B  00					db	0
020A:153C  00					db	0
020A:153D  00					db	0
020A:153E  00					db	0
020A:153F  00					db	0
020A:1540  00					db	0
020A:1541  00					db	0
020A:1542  00					db	0
020A:1543  00					db	0
020A:1544  00					db	0
020A:1545  00					db	0
020A:1546  00					db	0
020A:1547  00					db	0
020A:1548  00					db	0
020A:1549  00					db	0
020A:154A  00					db	0
020A:154B  00					db	0
020A:154C  00					db	0
020A:154D  00					db	0
020A:154E  00					db	0
020A:154F  00					db	0
020A:1550  00					db	0
020A:1551  00					db	0
020A:1552  00					db	0
020A:1553  00					db	0
020A:1554  00					db	0
020A:1555  00					db	0
020A:1556  00					db	0
020A:1557  00					db	0
020A:1558  00					db	0
020A:1559  00					db	0
020A:155A  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 42

020A:155B  00					db	0
020A:155C  00					db	0
020A:155D  00					db	0
020A:155E  00					db	0
020A:155F  00					db	0
020A:1560  00					db	0
020A:1561  00					db	0
020A:1562  00					db	0
020A:1563  00					db	0
020A:1564  00					db	0
020A:1565  00					db	0
020A:1566  00					db	0
020A:1567  00					db	0
020A:1568  00					db	0
020A:1569  00					db	0
020A:156A  00					db	0
020A:156B  00					db	0
020A:156C  00					db	0
020A:156D  00					db	0
020A:156E  00					db	0
020A:156F  00					db	0
020A:1570  00					db	0
020A:1571  00					db	0
020A:1572  00					db	0
020A:1573  00					db	0
020A:1574  00					db	0
020A:1575  00					db	0
020A:1576  00					db	0
020A:1577  00					db	0
020A:1578  00					db	0
020A:1579  00					db	0
020A:157A  00					db	0
020A:157B  00					db	0
020A:157C  00					db	0
020A:157D  00					db	0
020A:157E  00					db	0
020A:157F  00					db	0
020A:1580  00					db	0
020A:1581  00					db	0
020A:1582  00					db	0
020A:1583  00					db	0
020A:1584  00					db	0
020A:1585  00					db	0
020A:1586  00					db	0
020A:1587  00					db	0
020A:1588  00					db	0
020A:1589  00					db	0
020A:158A  00					db	0
020A:158B  00					db	0
020A:158C  00					db	0
020A:158D  00					db	0
020A:158E  00					db	0
020A:158F  00					db	0
020A:1590  00					db	0
020A:1591  00					db	0
020A:1592  00					db	0
020A:1593  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 43

020A:1594  00					db	0
020A:1595  00					db	0
020A:1596  00					db	0
020A:1597  00					db	0
020A:1598  00					db	0
020A:1599  00					db	0
020A:159A  00					db	0
020A:159B  00					db	0
020A:159C  00					db	0
020A:159D  00					db	0
020A:159E  00					db	0
020A:159F  00					db	0
020A:15A0  00					db	0
020A:15A1  00					db	0
020A:15A2  00					db	0
020A:15A3  00					db	0
020A:15A4  00					db	0
020A:15A5  00					db	0
020A:15A6  00					db	0
020A:15A7  00					db	0
020A:15A8  00					db	0
020A:15A9  00					db	0
020A:15AA  00					db	0
020A:15AB  00					db	0
020A:15AC  00					db	0
020A:15AD  00					db	0
020A:15AE  00					db	0
020A:15AF  00					db	0
020A:15B0  00					db	0
020A:15B1  00					db	0
020A:15B2  00					db	0
020A:15B3  00					db	0
020A:15B4  00					db	0
020A:15B5  00					db	0
020A:15B6  00					db	0
020A:15B7  00					db	0
020A:15B8  00					db	0
020A:15B9  00					db	0
020A:15BA  00					db	0
020A:15BB  00					db	0
020A:15BC  00					db	0
020A:15BD  00					db	0
020A:15BE  00					db	0
020A:15BF  00					db	0
020A:15C0  00					db	0
020A:15C1  00					db	0
020A:15C2  00					db	0
020A:15C3  00					db	0
020A:15C4  00					db	0
020A:15C5  00					db	0
020A:15C6  00					db	0
020A:15C7  00					db	0
020A:15C8  00					db	0
020A:15C9  00					db	0
020A:15CA  00					db	0
020A:15CB  00					db	0
020A:15CC  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 44

020A:15CD  00					db	0
020A:15CE  00			data_157	db	0
020A:15CF  00			data_158	db	0
020A:15D0  00			data_159	db	0
020A:15D1  00					db	0
020A:15D2  00					db	0
020A:15D3  00					db	0
020A:15D4  00					db	0
020A:15D5  00					db	0
020A:15D6  00					db	0
020A:15D7  00					db	0
020A:15D8  00					db	0
020A:15D9  00					db	0
020A:15DA  00					db	0
020A:15DB  00					db	0
020A:15DC  00					db	0
020A:15DD  00					db	0
020A:15DE  00					db	0
020A:15DF  00					db	0
020A:15E0  00					db	0
020A:15E1  00					db	0
020A:15E2  00					db	0
020A:15E3  00					db	0
020A:15E4  00					db	0
020A:15E5  00					db	0
020A:15E6  00					db	0
020A:15E7  00					db	0
020A:15E8  00					db	0
020A:15E9  00					db	0
020A:15EA  00					db	0
020A:15EB  00					db	0
020A:15EC  00					db	0
020A:15ED  00					db	0
020A:15EE  00					db	0
020A:15EF  00					db	0
020A:15F0  00					db	0
020A:15F1  00					db	0
020A:15F2  00					db	0
020A:15F3  00					db	0
020A:15F4  00					db	0
020A:15F5  00					db	0
020A:15F6  00					db	0
020A:15F7  00					db	0
020A:15F8  00					db	0
020A:15F9  00					db	0
020A:15FA  00					db	0
020A:15FB  00					db	0
020A:15FC  00					db	0
020A:15FD  00					db	0
020A:15FE  00					db	0
020A:15FF  00					db	0
020A:1600  00					db	0
020A:1601  00					db	0
020A:1602  00					db	0
020A:1603  00					db	0
020A:1604  00					db	0
020A:1605  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 45

020A:1606  00					db	0
020A:1607  00					db	0
020A:1608  00					db	0
020A:1609  00					db	0
020A:160A  00					db	0
020A:160B  00					db	0
020A:160C  00					db	0
020A:160D  00					db	0
020A:160E  00					db	0
020A:160F  00					db	0
020A:1610  00					db	0
020A:1611  00					db	0
020A:1612  00					db	0
020A:1613  00					db	0
020A:1614  00					db	0
020A:1615  00					db	0
020A:1616  00					db	0
020A:1617  00					db	0
020A:1618  00					db	0
020A:1619  00					db	0
020A:161A  00					db	0
020A:161B  00					db	0
020A:161C  00					db	0
020A:161D  00					db	0
020A:161E  00					db	0
020A:161F  00					db	0
020A:1620  00					db	0
020A:1621  00					db	0
020A:1622  00					db	0
020A:1623  00					db	0
020A:1624  00					db	0
020A:1625  00					db	0
020A:1626  00					db	0
020A:1627  00					db	0
020A:1628  00					db	0
020A:1629  00					db	0
020A:162A  00					db	0
020A:162B  00					db	0
020A:162C  00					db	0
020A:162D  00					db	0
020A:162E  00					db	0
020A:162F  00					db	0
020A:1630  00					db	0
020A:1631  00					db	0
020A:1632  00					db	0
020A:1633  00					db	0
020A:1634  00					db	0
020A:1635  00					db	0
020A:1636  00					db	0
020A:1637  00					db	0
020A:1638  00					db	0
020A:1639  00					db	0
020A:163A  00					db	0
020A:163B  00					db	0
020A:163C  00					db	0
020A:163D  00					db	0
020A:163E  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 46

020A:163F  00					db	0
020A:1640  00					db	0
020A:1641  00					db	0
020A:1642  00					db	0
020A:1643  00					db	0
020A:1644  00					db	0
020A:1645  00					db	0
020A:1646  00					db	0
020A:1647  00					db	0
020A:1648  00					db	0
020A:1649  00					db	0
020A:164A  00					db	0
020A:164B  00					db	0
020A:164C  00					db	0
020A:164D  00					db	0
020A:164E  00					db	0
020A:164F  00					db	0
020A:1650  00					db	0
020A:1651  00					db	0
020A:1652  00					db	0
020A:1653  00					db	0
020A:1654  00					db	0
020A:1655  00					db	0
020A:1656  00					db	0
020A:1657  00					db	0
020A:1658  00					db	0
020A:1659  00					db	0
020A:165A  00					db	0
020A:165B  00					db	0
020A:165C  00					db	0
020A:165D  00					db	0
020A:165E  00					db	0
020A:165F  00					db	0
020A:1660  00					db	0
020A:1661  00					db	0
020A:1662  00					db	0
020A:1663  00					db	0
020A:1664  00					db	0
020A:1665  00					db	0
020A:1666  00					db	0
020A:1667  00 00				add	[bx+si],al
020A:1669  00 0C				add	[si],cl
020A:166B  00 82 5401				add	[bp+si+5401h],al
020A:166F  03 58 72				add	bx,[bx+si+72h]
020A:1672  03 09				add	cx,[bx+di]
020A:1674  00 19				add	[bx+di],bl
020A:1676  00 00				add	[bx+si],al
020A:1678  0C 00				or	al,0
020A:167A  82 01 52				add	byte ptr [bx+di],52h	; 'R'
020A:167D  03 00				add	ax,[bx+si]
020A:167F  00 FF				add	bh,bh
020A:1681  FF					db	0FFh
020A:1682  D9					db	0D9h
020A:1683  19 04				sbb	[si],ax
020A:1685  00 00				add	[bx+si],al
020A:1687  00 41 41				add	[bx+di+41h],al
020A:168A  41					db	41h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 47

020A:168B  41 41 41 41 41 41	data_161	db	'AAAAAAAAAAAAAA', 0
020A:1691  41 41 41 41 41 41
020A:1697  41 41 00
020A:169A  00 00				add	[bx+si],al
020A:169C  00 41 41				add	[bx+di+41h],al
020A:169F  0008[41]				db	8 dup (41h)
020A:16A7  00 00				add	[bx+si],al
020A:16A9  41 41				db	 41h, 41h
020A:16AB  41			data_164	db	41h
020A:16AC  41 41 41 41 41 41	data_165	db	'AAAAAAAAAAAAAA', 0
020A:16B2  41 41 41 41 41 41
020A:16B8  41 41 00
020A:16BB  00 00				add	[bx+si],al
020A:16BD  00 41 41				add	[bx+di+41h],al
020A:16C0  0008[41]				db	8 dup (41h)
020A:16C8  00 00				add	[bx+si],al
020A:16CA  0011[41]				db	17 dup (41h)
020A:16DB  00					db	0
020A:16DC  00 00				add	[bx+si],al
020A:16DE  00 41 41				add	[bx+di+41h],al
020A:16E1  0008[41]				db	8 dup (41h)
020A:16E9  00 00				add	[bx+si],al
020A:16EB  0011[41]				db	17 dup (41h)
020A:16FC  00					db	0
020A:16FD  00 00				add	[bx+si],al
020A:16FF  00 41 41				add	[bx+di+41h],al
020A:1702  0008[41]				db	8 dup (41h)
020A:170A  00					db	0
020A:170B  00 00				add	[bx+si],al
020A:170D  00 95 4C1C				add	data_477[di],dl		; (020A:4C1C=0B6h)
020A:1711  7C 03				jl	loc_136			; Jump if <
020A:1713  12 00				adc	al,[bx+si]
020A:1715  00			data_171	db	0
020A:1716			loc_136:
020A:1716  52					push	dx
020A:1717  03 00				add	ax,[bx+si]
020A:1719  00 00				add	[bx+si],al
020A:171B  00 C7				add	bh,al
020A:171D  1C 00				sbb	al,0
020A:171F  00 41 3A				add	[bx+di+3Ah],al
020A:1722  5C					pop	sp
020A:1723  0041[00]				db	65 dup (0)
020A:1764  58					pop	ax
020A:1765  02 00				add	al,[bx+si]
020A:1767  42					inc	dx
020A:1768  3A 5C 00		;*		cmp	bl,[si+0]
020A:1768  3A 5C 00				db	 3Ah, 5Ch, 00h
020A:176B  0040[00]				db	64 dup (0)
020A:17AB  58					pop	ax
020A:17AC  02 00				add	al,[bx+si]
020A:17AE  43					inc	bx
020A:17AF  3A 5C 00		;*		cmp	bl,[si+0]
020A:17AF  3A 5C 00				db	 3Ah, 5Ch, 00h
020A:17B2  0040[00]				db	64 dup (0)
020A:17F2  5C					pop	sp
020A:17F3  02 00				add	al,[bx+si]
020A:17F5  44					inc	sp
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 48

020A:17F6  3A 5C 00		;*		cmp	bl,[si+0]
020A:17F6  3A 5C 00				db	 3Ah, 5Ch, 00h
020A:17F9  0040[00]				db	64 dup (0)
020A:1839  5C					pop	sp
020A:183A  02 00				add	al,[bx+si]
020A:183C  B5 01				mov	ch,1
020A:183E  00 00				add	[bx+si],al
020A:1840  53					push	bx
020A:1841  8F 03				pop	word ptr [bp+di]
020A:1843  7E 00				jle	$+2			; delay for I/O
020A:1845  00 0C				add	[si],cl
020A:1847  00 58 00		;*		add	[bx+si+0],bl
020A:1847  00 58 00				db	 00h, 58h, 00h
020A:184A  AA					stosb				; Store al to es:[di]
020A:184B  03 00				add	ax,[bx+si]
020A:184D  00					db	0
020A:184E  00					db	0
020A:184F  00 00				add	[bx+si],al
020A:1851  00 09				add	[bx+di],cl
020A:1853  00 48 00		;*		add	[bx+si+0],cl
020A:1853  00 48 00				db	 00h, 48h, 00h
020A:1856  80 00 00				add	byte ptr [bx+si],0
020A:1859  00 C0				add	al,al
020A:185B  03 00				add	ax,[bx+si]
020A:185D  00 40 00		;*		add	[bx+si+0],al
020A:185D  00 40 00				db	 00h, 40h, 00h
020A:1860  40					inc	ax
020A:1861  00 53 FF				add	[bp+di-1],dl
020A:1864  00 F0				add	al,dh
020A:1866  E8 01CE				call	sub_23			; (1A37)
020A:1869  12 00				adc	al,[bx+si]
020A:186B  46					inc	si
020A:186C  07					pop	es
020A:186D  0A 02				or	al,[bp+si]
020A:186F  E8 01C5				call	sub_23			; (1A37)
020A:1872  1B 00				sbb	ax,[bx+si]
020A:1874  0A 04				or	al,[si]
020A:1876  0A 02				or	al,[bp+si]
020A:1878  EB 02				jmp	short loc_137		; (187C)
020A:187A  90					nop
020A:187B  00 E8				add	al,ch
020A:187D  B8 2401				mov	ax,2401h
020A:1880  00 A4 0A0C				add	data_111[si],ah		; (020A:0A0C=1Ch)
020A:1884  02 E8				add	ch,al
020A:1886  AF					scasw				; Scan es:[di] for ax
020A:1887  01 31				add	[bx+di],si
020A:1889  00 EB				add	bl,ch
020A:188B  10 FF				adc	bh,bh
020A:188D  03 0A				add	cx,[bp+si]
020A:188F  02 4B 42				add	cl,[bp+di+42h]
020A:1892  00 EB				add	bl,ch
020A:1894  0C 00				or	al,0
020A:1896  00					db	0
020A:1897  00					db	0
020A:1898  00					db	0
020A:1899  00 00				add	[bx+si],al
020A:189B  00 E8				add	al,ch
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 49

020A:189D  98					cbw				; Convrt byte to word
020A:189E  01 3C				add	[si],di
020A:18A0  00 E9				add	cl,ch
020A:18A2  32 01				xor	al,[bx+di]
020A:18A4  EB 10				jmp	short loc_138		; (18B6)
020A:18A6  FF 03				inc	word ptr [bp+di]
020A:18A8  0A 02				or	al,[bp+si]
020A:18AA  4B					dec	bx
020A:18AB  42					inc	dx
020A:18AC  00 EB				add	bl,ch
020A:18AE  0C 00				or	al,0
020A:18B0  00					db	0
020A:18B1  00					db	0
020A:18B2  00					db	0
020A:18B3  00 00				add	[bx+si],al
020A:18B5  00 E8				add	al,ch
020A:18B7  7E 01				jle	loc_139			; Jump if < or =
020A:18B9  56					push	si
020A:18BA			loc_139:
020A:18BA  00 E9				add	cl,ch
020A:18BC  18 01				sbb	[bx+di],al
020A:18BE  EB 10				jmp	short loc_140		; (18D0)
020A:18C0  FF 03				inc	word ptr [bp+di]
020A:18C2  0A 02				or	al,[bp+si]
020A:18C4  4B					dec	bx
020A:18C5  42					inc	dx
020A:18C6  00 EB				add	bl,ch
020A:18C8  0C 00				or	al,0
020A:18CA  00					db	0
020A:18CB  00					db	0
020A:18CC  00					db	0
020A:18CD  00 00				add	[bx+si],al
020A:18CF  00 E8				add	al,ch
020A:18D1  64					db	64h
020A:18D2  01 70 00		;*		add	[bx+si+0],si
020A:18D2  01 70 00				db	 01h, 70h, 00h
020A:18D5  E9 00FE				jmp	loc_153			; (19D6)
020A:18D8  EB 10				jmp	short loc_141		; (18EA)
020A:18DA  FF 03				inc	word ptr [bp+di]
020A:18DC  0A 02				or	al,[bp+si]
020A:18DE  4B					dec	bx
020A:18DF  42					inc	dx
020A:18E0  00 EB				add	bl,ch
020A:18E2  0C 00				or	al,0
020A:18E4  00					db	0
020A:18E5  00					db	0
020A:18E6  00					db	0
020A:18E7  00 00				add	[bx+si],al
020A:18E9  00 E8				add	al,ch
020A:18EB  4A					dec	dx
020A:18EC  01 8A E900				add	[bp+si-1700h],cx
020A:18F0  E4 00				in	al,0			; port 0, DMA-1 bas&add ch 0
020A:18F2  EB 10				jmp	short loc_142		; (1904)
020A:18F4  B3 07				mov	bl,7
020A:18F6  0A 02				or	al,[bp+si]
020A:18F8  4B					dec	bx
020A:18F9  42					inc	dx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 50

020A:18FA  00 EB				add	bl,ch
020A:18FC  0C 00				or	al,0
020A:18FE  00					db	0
020A:18FF  00					db	0
020A:1900  00					db	0
020A:1901  00 00				add	[bx+si],al
020A:1903  00 E8				add	al,ch
020A:1905  30 01				xor	[bx+di],al
020A:1907  A4					movsb				; Mov [si] to es:[di]
020A:1908  00 E9				add	cl,ch
020A:190A  CA EB00				retf	0EB00h			; Return far
020A:190D  10 B4 0A06				adc	data_110[si],dh		; (020A:0A06=74h)
020A:1911  02 4B 42				add	cl,[bp+di+42h]
020A:1914  00 EB				add	bl,ch
020A:1916  0C 00				or	al,0
020A:1918  00					db	0
020A:1919  00					db	0
020A:191A  00					db	0
020A:191B  00 00				add	[bx+si],al
020A:191D  00 E8				add	al,ch
020A:191F  16					push	ss
020A:1920  01 BE E900				add	[bp-1700h],di
020A:1924  B0 00				mov	al,0
020A:1926  EB 10				jmp	short loc_143		; (1938)
020A:1928  B4 06				mov	ah,6
020A:192A  0A 02				or	al,[bp+si]
020A:192C  4B					dec	bx
020A:192D  42					inc	dx
020A:192E  00 EB				add	bl,ch
020A:1930  0C 00				or	al,0
020A:1932  00					db	0
020A:1933  00					db	0
020A:1934  00					db	0
020A:1935  00 00				add	[bx+si],al
020A:1937  00 E8				add	al,ch
020A:1939  FC					cld				; Clear direction
020A:193A  00 D8				add	al,bl
020A:193C  00 E9				add	cl,ch
020A:193E  96					xchg	si,ax
020A:193F  00 EB				add	bl,ch
020A:1941  10 B4 0A06				adc	data_110[si],dh		; (020A:0A06=74h)
020A:1945  02 4B 42				add	cl,[bp+di+42h]
020A:1948  00 EB				add	bl,ch
020A:194A  0C 00				or	al,0
020A:194C  00					db	0
020A:194D  00					db	0
020A:194E  00					db	0
020A:194F  00 00				add	[bx+si],al
020A:1951  00 E8				add	al,ch
020A:1953  E2 00				loop	locloop_144		; Loop if cx > 0


020A:1955			locloop_144:
020A:1955  F2					db	0F2h
020A:1956  00 EB				add	bl,ch
020A:1958  7D 90		;*		jge	loc_141			;*Jump if > or =
020A:1958  7D 90				db	 7Dh, 90h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 51

020A:195A  EB 10				jmp	short loc_145		; (196C)
020A:195C  B4 06				mov	ah,6
020A:195E  0A 02				or	al,[bp+si]
020A:1960  4B					dec	bx
020A:1961  42					inc	dx
020A:1962  00 EB				add	bl,ch
020A:1964  0C 00				or	al,0
020A:1966  00					db	0
020A:1967  00					db	0
020A:1968  00					db	0
020A:1969  00 00				add	[bx+si],al
020A:196B  00 E8				add	al,ch
020A:196D  C8					db	0C8h
020A:196E  00 0C				add	[si],cl
020A:1970  01 EB				add	bx,bp
020A:1972  63					db	63h
020A:1973  90					nop
020A:1974  EB 10				jmp	short loc_146		; (1986)
020A:1976  B4 06				mov	ah,6
020A:1978  0A 02				or	al,[bp+si]
020A:197A  4B					dec	bx
020A:197B  42					inc	dx
020A:197C  00 EB				add	bl,ch
020A:197E  0C 00				or	al,0
020A:1980  00					db	0
020A:1981  00					db	0
020A:1982  00					db	0
020A:1983  00 00				add	[bx+si],al
020A:1985  00 E8				add	al,ch
020A:1987  AE					scasb				; Scan es:[di] for al
020A:1988  00 26 EB01				add	byte ptr ds:[0EB01h],ah	; (020A:EB01=0EBh)
020A:198C  49					dec	cx
020A:198D  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_22		proc	near
020A:198E  1E					push	ds
020A:198F  50					push	ax
020A:1990  B8 0040				mov	ax,40h
020A:1993  8E D8				mov	ds,ax
020A:1995  9F					lahf				; Load ah from flags
020A:1996  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:199C  75 0C				jnz	loc_148			; Jump if not zero
020A:199E  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
020A:19A5			loc_147:
020A:19A5  9E					sahf				; Store ah into flags
020A:19A6  58					pop	ax
020A:19A7  1F					pop	ds
020A:19A8  03EB			data_176	dw	3EBh
020A:19AA			loc_148:
020A:19AA  EBFA			data_177	dw	0EBFAh
020A:19AC  F8					clc				; Clear carry flag
020A:19AD			loc_149:
020A:19AD  C3					retn
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 52

				sub_22		endp

							                        ;* No entry point to code
020A:19AE  1E					push	ds
020A:19AF  50					push	ax
020A:19B0  B8 0040				mov	ax,40h
020A:19B3  8E D8				mov	ds,ax
020A:19B5  9F					lahf				; Load ah from flags
020A:19B6  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:19BC  75 14				jnz	loc_151			; Jump if not zero
020A:19BE  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:19C4  75 0C				jnz	loc_151			; Jump if not zero
020A:19C6  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:19CD			loc_150:
020A:19CD  9E					sahf				; Store ah into flags
020A:19CE  58					pop	ax
020A:19CF  1F					pop	ds
020A:19D0  EB 03				jmp	short loc_152		; (19D5)
020A:19D2			loc_151:
020A:19D2  FB					sti				; Enable interrupts
020A:19D3  EB F8				jmp	short loc_150		; (19CD)
020A:19D5			loc_152:
020A:19D5  C3					retn
020A:19D6			loc_153:
020A:19D6  1E					push	ds
020A:19D7  50					push	ax
020A:19D8  B8 0040				mov	ax,40h
020A:19DB  8E D8				mov	ds,ax
020A:19DD  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
020A:19E3  75 4F				jnz	loc_161			; Jump if not zero
020A:19E5  55					push	bp
020A:19E6  8B EC				mov	bp,sp
020A:19E8  8B 46 0A				mov	ax,[bp+0Ah]
020A:19EB  5D					pop	bp
020A:19EC  A9 0100				test	ax,100h
020A:19EF  75 43				jnz	loc_161			; Jump if not zero
020A:19F1  A9 0200				test	ax,200h
020A:19F4  74 22				jz	loc_157			; Jump if zero
020A:19F6  F0> 81 0E 0314 0200	                           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
020A:19FD  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
020A:1A03  75 2F				jnz	loc_161			; Jump if not zero
020A:1A05			loc_154:
020A:1A05  86 E0				xchg	ah,al
020A:1A07  FC					cld				; Clear direction
020A:1A08  A8 04				test	al,4
020A:1A0A  75 25				jnz	loc_160			; Jump if not zero
020A:1A0C			loc_155:
020A:1A0C  A8 08				test	al,8
020A:1A0E  75 11				jnz	loc_158			; Jump if not zero
020A:1A10  70 19				jo	loc_159			; Jump if overflow=1
020A:1A12			loc_156:
020A:1A12  9E					sahf				; Store ah into flags
020A:1A13  58					pop	ax
020A:1A14  1F					pop	ds
020A:1A15  CA 0002				retf	2			; Return far
020A:1A18			loc_157:
020A:1A18  F0> 81 26 0314 FDFF	                           lock	and	word ptr ds:[314h],0FDFFh	; (020A:0314=3231h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 53

020A:1A1F  EB E4				jmp	short loc_154		; (1A05)
020A:1A21			loc_158:
020A:1A21  70 EF				jo	loc_156			; Jump if overflow=1
020A:1A23  50					push	ax
020A:1A24  B0 7F				mov	al,7Fh
020A:1A26  04 02				add	al,2
020A:1A28  58					pop	ax
020A:1A29  EB E7				jmp	short loc_156		; (1A12)
020A:1A2B			loc_159:
020A:1A2B  50					push	ax
020A:1A2C  32 C0				xor	al,al			; Zero register
020A:1A2E  58					pop	ax
020A:1A2F  EB E1				jmp	short loc_156		; (1A12)
020A:1A31			loc_160:
020A:1A31  FD					std				; Set direction flag
020A:1A32  EB D8				jmp	short loc_155		; (1A0C)
020A:1A34			loc_161:
020A:1A34  58					pop	ax
020A:1A35  1F					pop	ds
020A:1A36  CF					iret				; Interrupt return

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_23		proc	near
020A:1A37  50					push	ax
020A:1A38  55					push	bp
020A:1A39  06					push	es
020A:1A3A  2E: 8E 06 000A			mov	es,word ptr cs:[0Ah]	; (020A:000A=272Dh)
020A:1A3F  2E: 8B 2E 0010			mov	bp,word ptr cs:[10h]	; (020A:0010=1FBFh)
020A:1A44  B0 01				mov	al,1
020A:1A46  26: 86 46 00				xchg	es:[bp],al
020A:1A4A  3C 00				cmp	al,0
020A:1A4C  75 51				jne	loc_163			; Jump if not equal
020A:1A4E  2E: 2E83		data_178	dw	2E83h
020A:1A51  0010			data_179	dw	10h
020A:1A53  08 26 6689				or	byte ptr ds:[6689h],ah	; (020A:6689=0)
020A:1A57  02 26 568C				add	ah,byte ptr ds:[568Ch]	; (020A:568C=1)
020A:1A5B  04 8B				add	al,8Bh
020A:1A5D  C5 26 6E8B				lds	sp,dword ptr ds:[6E8Bh]	; (020A:6E8B=0B479h) Load 32 bit ptr
020A:1A61  06					push	es
020A:1A62  26: 39 46 00				cmp	es:[bp],ax
020A:1A66  75 44				jne	loc_165			; Jump if not equal
020A:1A68  55					push	bp
020A:1A69  8B EC				mov	bp,sp
020A:1A6B  8B 46 08				mov	ax,[bp+8]
020A:1A6E  5D					pop	bp
020A:1A6F  06					push	es
020A:1A70  17					pop	ss
020A:1A71  8B E5				mov	sp,bp
020A:1A73  8B E8				mov	bp,ax
020A:1A75  2E: 8B 6E 00				mov	bp,cs:[bp]
020A:1A79  9C					pushf				; Push flags
020A:1A7A  2E: FF 5E 00				call	dword ptr cs:[bp]	;*
020A:1A7E  8B EC				mov	bp,sp
020A:1A80  26: 8B 6E 00				mov	bp,es:[bp]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 54

020A:1A84  26: 8E 56 04				mov	ss,es:[bp+4]
020A:1A88  26: 8B 66 02				mov	sp,es:[bp+2]
020A:1A8C  26: C6 46 00 00			mov	byte ptr es:[bp],0
020A:1A91  2E: 89 2E 0010			mov	word ptr cs:[10h],bp	; (020A:0010=1FBFh)
020A:1A96  07					pop	es
020A:1A97  5D					pop	bp
020A:1A98  58					pop	ax
020A:1A99  83 C4 02				add	sp,2
020A:1A9C  E9 FF37				jmp	loc_153			; (19D6)
020A:1A9F			loc_163:
020A:1A9F  3C 01				cmp	al,1
020A:1AA1  74 04				je	loc_164			; Jump if equal
020A:1AA3  26: 86 46 00				xchg	es:[bp],al
020A:1AA7			loc_164:
020A:1AA7  E8 0012				call	sub_24			; (1ABC)
020A:1AAA  EB A8		;*		jmp	short loc_162		;*(1A54)
020A:1AAA  EB A8				db	0EBh,0A8h
020A:1AAC			loc_165:
020A:1AAC  2E: 3B 2E 000C			cmp	bp,word ptr cs:[0Ch]	; (020A:000C=9028h)
020A:1AB1  72 F4				jb	loc_164			; Jump if below
020A:1AB3  8B E8				mov	bp,ax
020A:1AB5  26: C6 46 00 03			mov	byte ptr es:[bp],3
020A:1ABA  EB EB				jmp	short loc_164		; (1AA7)
				sub_23		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_24		proc	near
020A:1ABC  2E: 8B 2E 000E			mov	bp,word ptr cs:[0Eh]	; (020A:000E=0A02Bh)
020A:1AC1			loc_166:
020A:1AC1  26: 80 7E 00 00			cmp	byte ptr es:[bp],0
020A:1AC6  75 12				jne	loc_168			; Jump if not equal
020A:1AC8  B0 01				mov	al,1
020A:1ACA  26: 86 46 00				xchg	es:[bp],al
020A:1ACE  3C 00				cmp	al,0
020A:1AD0  74 14				je	loc_169			; Jump if equal
020A:1AD2  3C 01				cmp	al,1
020A:1AD4  74 04				je	loc_168			; Jump if equal
020A:1AD6  26: 88 46 00				mov	es:[bp],al
020A:1ADA			loc_168:
020A:1ADA  2E: 3B 2E 000C			cmp	bp,word ptr cs:[0Ch]	; (020A:000C=9028h)
020A:1ADF  74 06				je	loc_170			; Jump if equal
020A:1AE1  83 ED 08				sub	bp,8
020A:1AE4  EB DB				jmp	short loc_166		; (1AC1)
020A:1AE6			loc_169:
020A:1AE6  C3					retn
020A:1AE7			loc_170:
020A:1AE7  E8 FEA4				call	sub_22			; (198E)

020A:1AEA			locloop_171:
020A:1AEA  B0 FF				mov	al,0FFh
020A:1AEC  E6 21				out	21h,al			; port 21h, 8259-1 int comands
020A:1AEE  E6 A1				out	0A1h,al			; port 0A1h  al = 0FFh, inhibit interr
020A:1AF0  8C CE				mov	si,cs
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 55

020A:1AF2  8E DE				mov	ds,si
020A:1AF4  BE 02CB				mov	si,2CBh
020A:1AF7  50					push	ax
020A:1AF8  1E					push	ds
020A:1AF9  B8 0070				mov	ax,70h
020A:1AFC  8E D8				mov	ds,ax
020A:1AFE  F6 06 0337 01			test	byte ptr ds:[337h],1	; (0070:0337=0)
020A:1B03  1F					pop	ds
020A:1B04  58					pop	ax
020A:1B05  74 05				jz	loc_172			; Jump if zero
020A:1B07  9A 0070:0338		;*		call	far ptr sub_1		;*(0070:0338)
020A:1B07  9A					db	9Ah
020A:1B08  0338 0070				dw	338h, 70h
020A:1B0C			loc_172:
020A:1B0C  AC					lodsb				; String [si] to al
020A:1B0D  3C 24				cmp	al,24h			; '$'
020A:1B0F  74 08				je	loc_174			; Jump if equal
020A:1B11  B3 07				mov	bl,7
020A:1B13  B4 0E				mov	ah,0Eh
020A:1B15  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
020A:1B17  EB F3				jmp	short loc_172		; (1B0C)
020A:1B19			loc_174:
020A:1B19  EB FE				jmp	short loc_174		; (1B19)
				sub_24		endp

020A:1B1B  0D 070A				or	ax,70Ah
020A:1B1E  0D 8F0A				or	ax,8F0Ah
020A:1B21  A5					movsw				; Mov [si] to es:[di]
020A:1B22  E0 A5		;*		loopnz	locloop_167		;*Loop if zf=0, cx>0

020A:1B22  E0 A5				db	0E0h,0A5h
020A:1B24  AF					scasw				; Scan es:[di] for ax
020A:1B25  AE					scasb				; Scan es:[di] for al
020A:1B26  AB					stosw				; Store ax to es:[di]
020A:1B27  AD					lodsw				; String [si] to ax
020A:1B28  A5					movsw				; Mov [si] to es:[di]
020A:1B29  AD					lodsw				; String [si] to ax
020A:1B2A  A8 A5				test	al,0A5h
020A:1B2C  20 A2 E3AD				and	[bp+si-1C53h],ah
020A:1B30  E2 E0		;*		loop	locloop_173		;*Loop if cx > 0

020A:1B30  E2 E0				db	0E2h,0E0h
020A:1B32  A5					movsw				; Mov [si] to es:[di]
020A:1B33  AD					lodsw				; String [si] to ax
020A:1B34  AD					lodsw				; String [si] to ax
020A:1B35  A5					movsw				; Mov [si] to es:[di]
020A:1B36  A3 20AE				mov	data_202,ax		; (020A:20AE=2020h)
020A:1B39  E1 E2		;*		loopz	locloop_175		;*Loop if zf=1, cx>0

020A:1B39  E1 E2				db	0E1h,0E2h
020A:1B3B  A5					movsw				; Mov [si] to es:[di]
020A:1B3C  AA					stosb				; Store al to es:[di]
020A:1B3D  A0 0A0D				mov	al,data_112		; (020A:0A0D=0)
020A:1B40  91					xchg	cx,ax
020A:1B41  A8 E1				test	al,0E1h
020A:1B43  E2 A5				loop	locloop_171		; Loop if cx > 0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 56


020A:1B45  AC					lodsb				; String [si] to al
020A:1B46  A0 AE20				mov	al,data_677		; (020A:AE20=3)
020A:1B49  E1 E2		;*		loopz	locloop_176		;*Loop if zf=1, cx>0

020A:1B49  E1 E2				db	0E1h,0E2h
020A:1B4B  A0 AEAD				mov	al,data_680		; (020A:AEAD=0F6h)
020A:1B4E  A2 A5AB				mov	data_651,al		; (020A:A5AB=77h)
020A:1B51  AD					lodsw				; String [si] to ax
020A:1B52  A0 0A0D				mov	al,data_112		; (020A:0A0D=0)
020A:1B55  24 07				and	al,7
020A:1B57  00 09				add	[bx+di],cl
020A:1B59  69					db	69h
020A:1B5A  00 00				add	[bx+si],al
020A:1B5C  06					push	es
020A:1B5D  00 06 0000				add	byte ptr ds:[0],al	; (020A:0000=28h)
020A:1B61  00					db	0
020A:1B62  00					db	0
020A:1B63  00 00				add	[bx+si],al
020A:1B65  00 C6				add	dh,al
020A:1B67  0007[00]				db	7 dup (0)
020A:1B6E  46					inc	si
020A:1B6F  01 00				add	[bx+si],ax
020A:1B71  00					db	0
020A:1B72  00					db	0
020A:1B73  00 00				add	[bx+si],al
020A:1B75  00 C6				add	dh,al
020A:1B77  01 00				add	[bx+si],ax
020A:1B79  00					db	0
020A:1B7A  00					db	0
020A:1B7B  00 00				add	[bx+si],al
020A:1B7D  00 46 02				add	[bp+2],al
020A:1B80  00					db	0
020A:1B81  00					db	0
020A:1B82  00					db	0
020A:1B83  00 00				add	[bx+si],al
020A:1B85  00 C6				add	dh,al
020A:1B87  02 00				add	al,[bx+si]
020A:1B89  00					db	0
020A:1B8A  00					db	0
020A:1B8B  00 00				add	[bx+si],al
020A:1B8D  00 46 03				add	[bp+3],al
020A:1B90  00					db	0
020A:1B91  00					db	0
020A:1B92  00					db	0
020A:1B93  00 00				add	[bx+si],al
020A:1B95  00 C6				add	dh,al
020A:1B97  03 00				add	ax,[bx+si]
020A:1B99  00					db	0
020A:1B9A  00					db	0
020A:1B9B  00 00				add	[bx+si],al
020A:1B9D  00 46 04				add	[bp+4],al
020A:1BA0  00 00				add	[bx+si],al
020A:1BA2  06					push	es
020A:1BA3  06					push	es
020A:1BA4  FB					sti				; Enable interrupts
020A:1BA5  8D					db	8Dh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 57

020A:1BA6  C6 04 00				mov	byte ptr [si],0
020A:1BA9  00FD[00]				db	253 dup (0)
020A:1CA6  08 00				or	[bx+si],al
020A:1CA8  0078[00]				db	120 dup (0)
020A:1D20  00			data_183	db	0
020A:1D21  00					db	0
020A:1D22  00					db	0
020A:1D23  00 00				add	[bx+si],al
020A:1D25  00 10				add	[bx+si],dl
020A:1D27  00					db	0
020A:1D28  007E[00]				db	126 dup (0)
020A:1DA6  18 00				sbb	[bx+si],al
020A:1DA8  0030[00]				db	48 dup (0)
020A:1DD8  00			data_186	db	0
020A:1DD9  00					db	0
020A:1DDA  00					db	0
020A:1DDB  00					db	0
020A:1DDC  00					db	0
020A:1DDD  00					db	0
020A:1DDE  00					db	0
020A:1DDF  00					db	0
020A:1DE0  00					db	0
020A:1DE1  00					db	0
020A:1DE2  00					db	0
020A:1DE3  00					db	0
020A:1DE4  00					db	0
020A:1DE5  00					db	0
020A:1DE6  00					db	0
020A:1DE7  00					db	0
020A:1DE8  00					db	0
020A:1DE9  00					db	0
020A:1DEA  00					db	0
020A:1DEB  00					db	0
020A:1DEC  00					db	0
020A:1DED  00					db	0
020A:1DEE  00					db	0
020A:1DEF  00					db	0
020A:1DF0  00					db	0
020A:1DF1  00					db	0
020A:1DF2  00					db	0
020A:1DF3  00					db	0
020A:1DF4  00					db	0
020A:1DF5  00					db	0
020A:1DF6  00					db	0
020A:1DF7  00					db	0
020A:1DF8  00					db	0
020A:1DF9  00					db	0
020A:1DFA  00					db	0
020A:1DFB  00					db	0
020A:1DFC  00					db	0
020A:1DFD  00					db	0
020A:1DFE  00					db	0
020A:1DFF  00					db	0
020A:1E00  00					db	0
020A:1E01  00					db	0
020A:1E02  00					db	0
020A:1E03  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 58

020A:1E04  00					db	0
020A:1E05  00					db	0
020A:1E06  00					db	0
020A:1E07  00					db	0
020A:1E08  00					db	0
020A:1E09  00					db	0
020A:1E0A  00					db	0
020A:1E0B  00					db	0
020A:1E0C  00					db	0
020A:1E0D  00					db	0
020A:1E0E  00					db	0
020A:1E0F  00					db	0
020A:1E10  00					db	0
020A:1E11  00					db	0
020A:1E12  00					db	0
020A:1E13  00					db	0
020A:1E14  00					db	0
020A:1E15  00					db	0
020A:1E16  00					db	0
020A:1E17  00					db	0
020A:1E18  00					db	0
020A:1E19  00					db	0
020A:1E1A  00					db	0
020A:1E1B  00					db	0
020A:1E1C  00					db	0
020A:1E1D  00					db	0
020A:1E1E  00					db	0
020A:1E1F  00					db	0
020A:1E20  00					db	0
020A:1E21  00					db	0
020A:1E22  00					db	0
020A:1E23  00 00				add	[bx+si],al
020A:1E25  00 20				add	[bx+si],ah
020A:1E27  00					db	0
020A:1E28  0061[00]				db	97 dup (0)
020A:1E89  00			data_188	db	0
020A:1E8A  00					db	0
020A:1E8B  0000 0000		data_189	dd	00000h
020A:1E8F  00					db	0
020A:1E90  00					db	0
020A:1E91  00					db	0
020A:1E92  00					db	0
020A:1E93  00					db	0
020A:1E94  00					db	0
020A:1E95  00					db	0
020A:1E96  00					db	0
020A:1E97  00					db	0
020A:1E98  00					db	0
020A:1E99  00					db	0
020A:1E9A  00					db	0
020A:1E9B  00					db	0
020A:1E9C  00					db	0
020A:1E9D  00					db	0
020A:1E9E  00					db	0
020A:1E9F  00					db	0
020A:1EA0  00					db	0
020A:1EA1  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 59

020A:1EA2  00					db	0
020A:1EA3  00 00				add	[bx+si],al
020A:1EA5  00 28				add	[bx+si],ch
020A:1EA7  00					db	0
020A:1EA8  0046[00]				db	70 dup (0)
020A:1EEE  0000 0000		data_191	dd	00000h			; Data table (indexed access)
020A:1EF2  00					db	0
020A:1EF3  00					db	0
020A:1EF4  00					db	0
020A:1EF5  00					db	0
020A:1EF6  00					db	0
020A:1EF7  00					db	0
020A:1EF8  00					db	0
020A:1EF9  00					db	0
020A:1EFA  00					db	0
020A:1EFB  00					db	0
020A:1EFC  00					db	0
020A:1EFD  00					db	0
020A:1EFE  00					db	0
020A:1EFF  00					db	0
020A:1F00  00					db	0
020A:1F01  00					db	0
020A:1F02  00					db	0
020A:1F03  00					db	0
020A:1F04  00					db	0
020A:1F05  00					db	0
020A:1F06  00					db	0
020A:1F07  00					db	0
020A:1F08  00					db	0
020A:1F09  00					db	0
020A:1F0A  00					db	0
020A:1F0B  00					db	0
020A:1F0C  00					db	0
020A:1F0D  00					db	0
020A:1F0E  00					db	0
020A:1F0F  00					db	0
020A:1F10  00					db	0
020A:1F11  00					db	0
020A:1F12  00					db	0
020A:1F13  00					db	0
020A:1F14  00					db	0
020A:1F15  00					db	0
020A:1F16  00					db	0
020A:1F17  00					db	0
020A:1F18  00					db	0
020A:1F19  00					db	0
020A:1F1A  00					db	0
020A:1F1B  00					db	0
020A:1F1C  00					db	0
020A:1F1D  00					db	0
020A:1F1E  00					db	0
020A:1F1F  00					db	0
020A:1F20  00					db	0
020A:1F21  00					db	0
020A:1F22  00					db	0
020A:1F23  00 00				add	[bx+si],al
020A:1F25  00 30				add	[bx+si],dh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 60

020A:1F27  00					db	0
020A:1F28  007E[00]				db	126 dup (0)
020A:1FA6  38 00				cmp	[bx+si],al
020A:1FA8  006C[00]				db	108 dup (0)
020A:2014  01 91 9101				add	data_623[bx+di],dx	; (020A:9101=5652h)
020A:2018  FB					sti				; Enable interrupts
020A:2019  8D					db	8Dh
020A:201A  F3					db	0F3h
020A:201B  03 B7 FB00				add	si,word ptr ds:[0FB00h][bx]	; (020A:FB00=7501h)
020A:201F  8D 2E 8F02				lea	bp,cs:[8F02h]		; Load effective addr
020A:2023  03 46 30				add	ax,[bp+30h]
020A:2026  40					inc	ax
020A:2027  00 04				add	[si],al
020A:2029  00 C3				add	bl,al
020A:202B  3C 00				cmp	al,0
020A:202D  00 06 4D00				add	data_478,al		; (020A:4D00=0FCh)
020A:2031  0E					push	cs
020A:2032  04 B5				add	al,0B5h
020A:2034  00 00				add	[bx+si],al
020A:2036  06					push	es
020A:2037  00 43 4F				add	[bp+di+4Fh],al
020A:203A  4D					dec	bp
020A:203B  4D					dec	bp
020A:203C  41					inc	cx
020A:203D  4E					dec	si
020A:203E  44					inc	sp
020A:203F  00 CD				add	ch,cl
020A:2041  20 FF				and	bh,bh
020A:2043  9F					lahf				; Load ah from flags
020A:2044  00 9A FEF0				add	[bp+si-110h],bl
020A:2048  1D 7FF0				sbb	ax,7FF0h
020A:204B  01 0E 4B04				add	data_476,cx		; (020A:4B04=29E8h)
020A:204F  01 0E 5604				add	data_565,cx		; (020A:5604=7205h)
020A:2053  01 0E 0E04				add	data_134,cx		; (020A:0E04=0DFE8h)
020A:2057  04 01				add	al,1
020A:2059  01 01				add	[bx+di],ax
020A:205B  00 02				add	[bp+si],al
020A:205D  000F[FF]				db	15 dup (0FFh)
020A:206C  CC					int	3			; Debug breakpoint
020A:206D  04 FA				add	al,0FAh
020A:206F  05 040E				add	ax,40Eh
020A:2072  14 00				adc	al,0
020A:2074  18 00				sbb	[bx+si],al
020A:2076  0E					push	cs
020A:2077  04 FF				add	al,0FFh
020A:2079  FF					db	0FFh
020A:207A  FF					db	0FFh
020A:207B  FF 00				inc	word ptr [bx+si]
020A:207D  00 00				add	[bx+si],al
020A:207F  00 05				add	[di],al
020A:2081  000F[00]				db	15 dup (0)
020A:2090  CD 21				int	21h			; ??INT Non-standard interrupt
020A:2092  CB					retf				; Return far
020A:2093  000A[00]				db	10 dup (0)
020A:209D  20 20 20				db	 20h, 20h, 20h
020A:20A0  20			data_199	db	20h			; Data table (indexed access)
020A:20A1  20 20				and	[bx+si],ah
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 61

020A:20A3  20 20				and	[bx+si],ah
020A:20A5  2020			data_200	dw	2020h			; Data table (indexed access)
020A:20A7  20 00				and	[bx+si],al
020A:20A9  00					db	0
020A:20AA  00 00				add	[bx+si],al
020A:20AC  00 20				add	[bx+si],ah
020A:20AE  2020			data_202	dw	2020h
020A:20B0  0008[20]				db	8 dup (20h)
020A:20B8  0009[00]				db	9 dup (0)
020A:20C1  0D 2020				or	ax,2020h
020A:20C4  20 53 45				and	[bp+di+45h],dl
020A:20C7  54					push	sp
020A:20C8  20 42 4C				and	[bp+si+4Ch],al
020A:20CB  41					inc	cx
020A:20CC  53					push	bx
020A:20CD  54					push	sp
020A:20CE  45					inc	bp
020A:20CF  52					push	dx
020A:20D0  3D 3041				cmp	ax,3041h
020A:20D3  0D A8AD				or	ax,0A8ADh
020A:20D6  A5					movsw				; Mov [si] to es:[di]
020A:20D7  20 A4 EFAB				and	byte ptr ds:[0EFABh][si],ah	; (020A:EFAB=47h)
020A:20DB  20 A1 A7A2				and	data_655[bx+di],ah	; (020A:A7A2=26h)
020A:20DF  AE					scasb				; Scan es:[di] for al
020A:20E0  A2 A3AE				mov	data_643,al		; (020A:A3AE=6)
020A:20E3  AE					scasb				; Scan es:[di] for al
020A:20E4  20 AF E0AE				and	byte ptr ds:[0E0AEh][bx],ch	; (020A:E0AE=9Ah)
020A:20E8  E2 A0		;*		loop	locloop_177		;*Loop if cx > 0

020A:20E8  E2 A0				db	0E2h,0A0h
020A:20EA  20 A2 AEA2				and	[bp+si-515Eh],ah
020A:20EE  A4					movsb				; Mov [si] to es:[di]
020A:20EF  A0			data_205	db	0A0h
020A:20F0  2D EBA2				sub	ax,0EBA2h
020A:20F3  A2 A4AE				mov	byte ptr data_648,al	; (020A:A4AE=36h)
020A:20F6  A0 5320				mov	al,data_559		; (020A:5320=0BDh)
020A:20F9  42					inc	dx
020A:20FA  2C 20				sub	al,20h			; ' '
020A:20FC  AD					lodsw				; String [si] to ax
020A:20FD  A0 E0AF				mov	al,byte ptr ds:[0E0AFh]	; (020A:E0AF=0E4h)
020A:2100  A8 AC				test	al,0ACh
020A:2102  A5					movsw				; Mov [si] to es:[di]
020A:2103  E0 3A				loopnz	locloop_181		; Loop if zf=0, cx>0

020A:2105  0D 0DEC				or	ax,0DECh
020A:2108  E0 EB		;*		loopnz	locloop_180		;*Loop if zf=0, cx>0

020A:2108  E0 EB				db	0E0h,0EBh
020A:210A  A5					movsw				; Mov [si] to es:[di]
020A:210B  0D 0000				or	ax,0
020A:210E  0032[00]				db	50 dup (0)
020A:2140  E9 174D				jmp	loc_370			; (3890)
020A:2143  00 17				add	[bx],dl
020A:2145  64					db	64h
020A:2146  FF					db	0FFh
020A:2147  FF 37				push	word ptr [bx]
020A:2149  5E					pop	si
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 62

020A:214A  FF					db	0FFh
020A:214B  FF F5		;*		push	bp
020A:214B  FF F5				db	0FFh,0F5h
020A:214D  5C					pop	sp
020A:214E  FF					db	0FFh
020A:214F  FF 24				jmp	word ptr [si]		;*
020A:2151  61					db	61h
020A:2152  FF					db	0FFh
020A:2153  FF					db	0FFh
020A:2154  E9 FF5C		;*		jmp	loc_179			;*(20B3)
020A:2154  E9 5C FF				db	0E9h, 5Ch,0FFh
							                        ;* No entry point to code
020A:2157  FF 63 5F				jmp	word ptr [bp+di+5Fh]	;*
020A:215A  FF					db	0FFh
							                        ;* No entry point to code
020A:215B  FF 01				inc	word ptr [bx+di]
020A:215D  61					db	61h
020A:215E  FF					db	0FFh
020A:215F  FF 6E 5E				jmp	dword ptr [bp+5Eh]	;*
020A:2162  FF					db	0FFh
							                        ;* No entry point to code
020A:2163  FF 5A 64				call	dword ptr [bp+si+64h]	;*
020A:2166  FF					db	0FFh
020A:2167  FF 82 FF5F				inc	word ptr [bp+si-0A1h]
020A:216B  FF D3				call	bx			;*
020A:216D  64					db	64h
020A:216E  FF					db	0FFh
020A:216F  FF AF D900				jmp	dword ptr ds:[0D900h][bx]	;*(020A:D900=0BD43h)
							                        ;* No entry point to code
020A:2173  02 01				add	al,[bx+di]
020A:2175  FB					sti				; Enable interrupts
020A:2176  E8 0064				call	sub_25			; (21DD)
020A:2179  1E					push	ds
020A:217A  0E					push	cs
020A:217B  2E: FF 2E 0104			jmp	dword ptr cs:[104h]	; (020A:0104=908h)
							                        ;* No entry point to code
020A:2180  FB					sti				; Enable interrupts
020A:2181  E8 0059				call	sub_25			; (21DD)
020A:2184  1E					push	ds
020A:2185  0E					push	cs
020A:2186  2E: FF 2E 0108			jmp	dword ptr cs:[108h]	; (020A:0108=0A302h)
							                        ;* No entry point to code
020A:218B  FB					sti				; Enable interrupts
020A:218C  E8 004E				call	sub_25			; (21DD)
020A:218F  1E					push	ds
020A:2190  0E					push	cs
020A:2191  2E: FF 2E 010C			jmp	dword ptr cs:[10Ch]	; (020A:010C=9028h)
							                        ;* No entry point to code
020A:2196  FB					sti				; Enable interrupts
020A:2197  E8 0043				call	sub_25			; (21DD)
020A:219A  1E					push	ds
020A:219B  0E					push	cs
020A:219C  2E: FF 2E 0110			jmp	dword ptr cs:[110h]	; (020A:0110=1FBFh)
020A:21A1			loc_182:
020A:21A1  E8 0039				call	sub_25			; (21DD)
020A:21A4  1E					push	ds
020A:21A5  0E					push	cs
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 63

020A:21A6  2E: FF 2E 0114			jmp	dword ptr cs:[114h]	; (020A:0114=0C0Bh)
							                        ;* No entry point to code
020A:21AB  E8 002F				call	sub_25			; (21DD)
020A:21AE  1E					push	ds
020A:21AF  0E					push	cs
020A:21B0  2E: FF 2E 0118			jmp	dword ptr cs:[118h]	; (020A:0118=0)
							                        ;* No entry point to code
020A:21B5  E8 0025				call	sub_25			; (21DD)
020A:21B8  1E					push	ds
020A:21B9  0E					push	cs
020A:21BA  2E: FF 2E 011C			jmp	dword ptr cs:[11Ch]	; (020A:011C=145Dh)
020A:21BF			loc_183:
020A:21BF  E8 001B				call	sub_25			; (21DD)
020A:21C2  1E					push	ds
020A:21C3  0E					push	cs
020A:21C4  2E: FF 2E 0120			jmp	dword ptr cs:[120h]	; (020A:0120=0A3BAh)
							                        ;* No entry point to code
020A:21C9  E8 0011				call	sub_25			; (21DD)
020A:21CC  1E					push	ds
020A:21CD  0E					push	cs
020A:21CE  2E: FF 2E 0124			jmp	dword ptr cs:[124h]	; (020A:0124=201h)
							                        ;* No entry point to code
020A:21D3  E8 0007				call	sub_25			; (21DD)
020A:21D6  1E					push	ds
020A:21D7  0E					push	cs
020A:21D8  2E: FF 2E 0128			jmp	dword ptr cs:[128h]	; (020A:0128=1405h)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_25		proc	near
020A:21DD  9C					pushf				; Push flags
020A:21DE  50					push	ax
020A:21DF  2E: 80 3E 0134 00			cmp	byte ptr cs:[134h],0	; (020A:0134=0)
020A:21E5  74 08				je	loc_184			; Jump if equal
020A:21E7  E8 000D				call	sub_26			; (21F7)
020A:21EA  73 03				jnc	loc_184			; Jump if carry=0
020A:21EC  E8 001B				call	sub_27			; (220A)
020A:21EF			loc_184:
020A:21EF  58					pop	ax
020A:21F0  9D					popf				; Pop flags
020A:21F1  C3					retn
				sub_25		endp

020A:21F2  EA 040E:0135		;*		jmp	far ptr loc_1921	;*(040E:0135)
020A:21F2  EA					db	0EAh
020A:21F3  0135 040E				dw	135h, 40Eh

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_26		proc	near
020A:21F7  53					push	bx
020A:21F8  50					push	ax
020A:21F9  B4 07				mov	ah,7
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 64

020A:21FB  2E: FF 1E 0130			call	dword ptr cs:[130h]	; (020A:0130=3E3Dh)
020A:2200  0B C0				or	ax,ax			; Zero ?
020A:2202  58					pop	ax
020A:2203  5B					pop	bx
020A:2204  75 02				jnz	loc_185			; Jump if not zero
020A:2206  F9					stc				; Set carry flag
020A:2207  C3					retn
020A:2208			loc_185:
020A:2208  F8					clc				; Clear carry flag
020A:2209  C3					retn
				sub_26		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_27		proc	near
020A:220A  53					push	bx
020A:220B  50					push	ax
020A:220C  B4 05				mov	ah,5
020A:220E  2E: FF 1E 0130			call	dword ptr cs:[130h]	; (020A:0130=3E3Dh)
020A:2213  0B C0				or	ax,ax			; Zero ?
020A:2215  74 03				jz	loc_186			; Jump if zero
020A:2217  58					pop	ax
020A:2218  5B					pop	bx
020A:2219  C3					retn
020A:221A			loc_186:
020A:221A  EB FE				jmp	short loc_186		; (221A)
				sub_27		endp

							                        ;* No entry point to code
020A:221C  CD 21				int	21h			; DOS Services  ah=function 1Dh
										;  obsolete CP/M function
020A:221E  FA					cli				; Disable interrupts
020A:221F  0E					push	cs
020A:2220  17					pop	ss
020A:2221  BC 0612				mov	sp,612h
020A:2224  FB					sti				; Enable interrupts
020A:2225  0E					push	cs
020A:2226  1F					pop	ds
020A:2227  9C					pushf				; Push flags
020A:2228  50					push	ax
020A:2229  2E: A0 0614				mov	al,byte ptr cs:[614h]	; (020A:0614=2Eh)
020A:222D  A8 80				test	al,80h
020A:222F  74 07				jz	loc_187			; Jump if zero
020A:2231  24 7F				and	al,7Fh
020A:2233  2E: FF 1E 012C			call	dword ptr cs:[12Ch]	; (020A:012C=3A39h)
020A:2238			loc_187:
020A:2238  2E: 80 26 0614 7F			and	byte ptr cs:[614h],7Fh	; (020A:0614=2Eh)
020A:223E  58					pop	ax
020A:223F  9D					popf				; Pop flags
020A:2240  E9 FF5E				jmp	loc_182			; (21A1)
							                        ;* No entry point to code
020A:2243  02 00				add	al,[bx+si]
020A:2245  00 01				add	[bx+di],al
020A:2247  09 02				or	[bp+si],ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 65

020A:2249  41					inc	cx
020A:224A  02 00				add	al,[bx+si]
020A:224C  00 02				add	[bp+si],al
020A:224E  10 02				adc	[bp+si],al
020A:2250  0009[00]				db	9 dup (0)
020A:2259  02 22				add	ah,[bp+si]
020A:225B  02 03				add	al,[bp+di]
020A:225D  30 02				xor	[bp+si],al
020A:225F  03 2E 0002				add	bp,word ptr ds:[2]	; (020A:0002=10h)
020A:2263  0010[00]				db	16 dup (0)
020A:2273  01 09				add	[bx+di],cx
020A:2275  02 02				add	al,[bp+si]
020A:2277  5A					pop	dx
020A:2278  02 01				add	al,[bx+di]
020A:227A  3C 02				cmp	al,2
020A:227C  43					inc	bx
020A:227D  02 7C 04				add	bh,[si+4]
020A:2280  000A[00]				db	10 dup (0)
020A:228A  00			data_210	db	0
020A:228B  0E					push	cs
020A:228C  04 7F				add	al,7Fh
020A:228E  01 0E 0004				add	word ptr ds:[4],cx	; (020A:0004=808h)
020A:2292  00					db	0
020A:2293  00					db	0
020A:2294  00					db	0
020A:2295  00 00				add	[bx+si],al
020A:2297  00 43 3A				add	[bp+di+3Ah],al
020A:229A  5C					pop	sp
020A:229B  57					push	di
020A:229C  49					dec	cx
020A:229D  4E					dec	si
020A:229E  44					inc	sp
020A:229F  4F					dec	di
020A:22A0  57					push	di
020A:22A1  53					push	bx
020A:22A2  5C					pop	sp
020A:22A3  53					push	bx
020A:22A4  59					pop	cx
020A:22A5  53					push	bx
020A:22A6  54					push	sp
020A:22A7  45					inc	bp
020A:22A8  4D					dec	bp
020A:22A9  33 32				xor	si,[bp+si]
020A:22AB  5C					pop	sp
020A:22AC  43					inc	bx
020A:22AD  4D4F			data_211	dw	4D4Fh
020A:22AF  4D					dec	bp
020A:22B0  41					inc	cx
020A:22B1  444E			data_212	dw	444Eh
020A:22B3  432E			data_213	dw	432Eh
020A:22B5  4F					dec	di
020A:22B6  4D					dec	bp
020A:22B7  00 00 00 00 00 00			db	0, 0, 0, 0, 0, 0
020A:22BD  0000			data_215	dw	0
020A:22BF  00					db	0
020A:22C0  00					db	0
020A:22C1  00					db	0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 66

020A:22C2  00					db	0
020A:22C3  00					db	0
020A:22C4  00					db	0
020A:22C5  00					db	0
020A:22C6  00					db	0
020A:22C7  00					db	0
020A:22C8  00					db	0
020A:22C9  00					db	0
020A:22CA  00					db	0
020A:22CB  00					db	0
020A:22CC  00					db	0
020A:22CD  00					db	0
020A:22CE  00					db	0
020A:22CF  00					db	0
020A:22D0  00					db	0
020A:22D1  00					db	0
020A:22D2  00					db	0
020A:22D3  00					db	0
020A:22D4  00					db	0
020A:22D5  00 00				add	[bx+si],al
020A:22D7  00 77 02				add	[bx+2],dh
020A:22DA  2C 01				sub	al,1
020A:22DC			loc_188:
020A:22DC  B4 95				mov	ah,95h
020A:22DE  01 00				add	[bx+si],ax
020A:22E0  00 03				add	[bp+di],al
020A:22E2  FF 9F 1EEE				call	data_191[bx]		;*(020A:1EEE=0)
020A:22E6  01 00				add	[bx+si],ax
020A:22E8  03 00				add	ax,[bx+si]
020A:22EA  01 00				add	[bx+si],ax
020A:22EC  01 01				add	[bx+di],ax
020A:22EE  01 00				add	[bx+si],ax
020A:22F0  01 00				add	[bx+si],ax
020A:22F2  00 00				add	[bx+si],al
020A:22F4  FF					db	0FFh
020A:22F5  FF 00				inc	word ptr [bx+si]
020A:22F7  0009[00]				db	9 dup (0)
020A:2300  0000			data_217	dw	0
020A:2302  04 31				add	al,31h			; '1'
020A:2304  0B A7 0000				or	sp,word ptr ds:[0][bx]	; (020A:0000=1828h)
020A:2308  00 00				add	[bx+si],al
020A:230A  00 E7				add	bh,ah
020A:230C  0C A7				or	al,0A7h
020A:230E  0058[00]				db	88 dup (0)
020A:2366  01 00				add	[bx+si],ax
020A:2368  00 00				add	[bx+si],al
020A:236A  01 00				add	[bx+si],ax
020A:236C  0007[00]				db	7 dup (0)
020A:2373  1E					push	ds
020A:2374  06					push	es
020A:2375  0E					push	cs
020A:2376  1F					pop	ds
020A:2377  8B 16 22BD				mov	dx,data_215		; (020A:22BD=0)
020A:237B  A1 22B1				mov	ax,data_212		; (020A:22B1=444Eh)
020A:237E  8B 1E 22AD				mov	bx,data_211		; (020A:22AD=4D4Fh)
020A:2382  8B 0E 22B3				mov	cx,data_213		; (020A:22B3=432Eh)
020A:2386  50					push	ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 67

020A:2387  53					push	bx
020A:2388  51					push	cx
020A:2389  8C DB				mov	bx,ds
020A:238B  8E C3				mov	es,bx
020A:238D  8B 1E 0593				mov	bx,word ptr ds:[593h]	; (020A:0593=3)
020A:2391  B4 4A				mov	ah,4Ah
020A:2393  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change memory allocation
										;   bx=bytes/16, es=mem segment
020A:2395  80 3E 02B0 01			cmp	byte ptr ds:[2B0h],1	; (020A:02B0=1Dh)
020A:239A  75 33				jne	loc_189			; Jump if not equal
020A:239C  83 3E 0256 00			cmp	word ptr ds:[256h],0	; (020A:0256=0)
020A:23A1  74 2C				je	loc_189			; Jump if equal
020A:23A3  BB 0007				mov	bx,7
020A:23A6  B4 48				mov	ah,48h
020A:23A8  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:23AA  72 23				jc	loc_189			; Jump if carry Set
020A:23AC  8E C0				mov	es,ax
020A:23AE  33 FF				xor	di,di			; Zero register
020A:23B0  33 F6				xor	si,si			; Zero register
020A:23B2  1E					push	ds
020A:23B3  8E 1E 0256				mov	ds,word ptr ds:[256h]	; (020A:0256=0)
020A:23B7  B9 0021				mov	cx,21h
020A:23BA  83 C1 40				add	cx,40h
020A:23BD  FC					cld				; Clear direction
020A:23BE  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:23C0  1F					pop	ds
020A:23C1  8C C1				mov	cx,es
020A:23C3  8E 06 0256				mov	es,word ptr ds:[256h]	; (020A:0256=0)
020A:23C7  B4 49				mov	ah,49h
020A:23C9  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:23CB  89 0E 0256				mov	word ptr ds:[256h],cx	; (020A:0256=0)
020A:23CF			loc_189:
020A:23CF  59					pop	cx
020A:23D0  5B					pop	bx
020A:23D1  5D					pop	bp
020A:23D2  B4 48				mov	ah,48h
020A:23D4  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:23D6  72 41				jc	loc_190			; Jump if carry Set
020A:23D8  A3 0458				mov	word ptr ds:[458h],ax	; (020A:0458=0C40Eh)
020A:23DB  A3 002C				mov	word ptr ds:[2Ch],ax	; (020A:002C=3A39h)
020A:23DE  8E C0				mov	es,ax
020A:23E0  80 3E 02B0 01			cmp	byte ptr ds:[2B0h],1	; (020A:02B0=1Dh)
020A:23E5  75 34				jne	loc_191			; Jump if not equal
020A:23E7  53					push	bx
020A:23E8  BB 0000				mov	bx,0
020A:23EB  C4					db	0C4h
020A:23EC  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load 32 bit ptr
020A:23EF  8B C3				mov	ax,bx
020A:23F1  5B					pop	bx
020A:23F2  3D 0000				cmp	ax,0
020A:23F5  74 24				je	loc_191			; Jump if equal
020A:23F7  03 D8				add	bx,ax
020A:23F9  B4 49				mov	ah,49h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 68

020A:23FB  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:23FD  B4 48				mov	ah,48h
020A:23FF  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:2401  72 75				jc	loc_194			; Jump if carry Set
020A:2403  A3 0458				mov	word ptr ds:[458h],ax	; (020A:0458=0C40Eh)
020A:2406  A3 002C				mov	word ptr ds:[2Ch],ax	; (020A:002C=3A39h)
020A:2409  8E C0				mov	es,ax
020A:240B  89 1E 22AD				mov	data_211,bx		; (020A:22AD=4D4Fh)
020A:240F  53					push	bx
020A:2410  C4					db	0C4h
020A:2411  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load 32 bit ptr
020A:2414  58					pop	ax
020A:2415  3B D8				cmp	bx,ax
020A:2417  76 0D				jbe	loc_192			; Jump if below or =
020A:2419			loc_190:
020A:2419  EB 5D				jmp	short loc_194		; (2478)
020A:241B			loc_191:
020A:241B  1E					push	ds
020A:241C  8E DD				mov	ds,bp
020A:241E  33 F6				xor	si,si			; Zero register
020A:2420  8B FE				mov	di,si
020A:2422  FC					cld				; Clear direction
020A:2423  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:2425  1F					pop	ds
020A:2426			loc_192:
020A:2426  80 3E 228A 00			cmp	data_210,0		; (020A:228A=0)
020A:242B  75 06				jne	loc_193			; Jump if not equal
020A:242D  8E C5				mov	es,bp
020A:242F  B4 49				mov	ah,49h
020A:2431  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:2433			loc_193:
020A:2433  C6 06 029E 01			mov	byte ptr ds:[29Eh],1	; (020A:029E=0)
020A:2438  06					push	es
020A:2439  BE 2760				mov	si,2760h
020A:243C  BF 0000				mov	di,0
020A:243F  B9 A4AD				mov	cx,0A4ADh
020A:2442  BB FFFF				mov	bx,0FFFFh
020A:2445  B4 48				mov	ah,48h
020A:2447  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:2449  3B DA				cmp	bx,dx
020A:244B  72 2B				jb	loc_194			; Jump if below
020A:244D  B4 48				mov	ah,48h
020A:244F  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
020A:2451  72 25				jc	loc_194			; Jump if carry Set
020A:2453  50					push	ax
020A:2454  03 C3				add	ax,bx
020A:2456  2B C2				sub	ax,dx
020A:2458  A3 029C				mov	word ptr ds:[29Ch],ax	; (020A:029C=0)
020A:245B  8E C0				mov	es,ax
020A:245D  58					pop	ax
020A:245E  03 F1				add	si,cx
020A:2460  4E					dec	si
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 69

020A:2461  03 F9				add	di,cx
020A:2463  4F					dec	di
020A:2464  FD					std				; Set direction flag
020A:2465  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:2467  FC					cld				; Clear direction
020A:2468  8E C0				mov	es,ax
020A:246A  B4 49				mov	ah,49h
020A:246C  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
020A:246E  C6 06 0330 00			mov	byte ptr ds:[330h],0	; (020A:0330=61h)
020A:2473  07					pop	es
020A:2474  1F					pop	ds
020A:2475  E9 FD47				jmp	loc_183			; (21BF)
020A:2478			loc_194:
020A:2478  E9 1DC0				jmp	loc_474			; (423B)
020A:247B  0019[00]				db	25 dup (0)
020A:2494  33 03				xor	ax,[bp+di]
020A:2496  82 03 CC				add	byte ptr [bp+di],0CCh
020A:2499  04 80				add	al,80h
020A:249B  00 0E 5C04				add	data_584,cl		; (020A:5C04=12h)
020A:249F  00 0E 6C04				add	data_594,cl		; (020A:6C04=6)
020A:24A3  00 0E 9304				add	data_624,cl		; (020A:9304=3Bh)
020A:24A7  01 0E 0004				add	word ptr ds:[4],cx	; (020A:0004=808h)
020A:24AB  10 2F				adc	[bx],ch
020A:24AD  5C					pop	sp
020A:24AE  DC					db	0DCh
020A:24AF  01 0E 6B04				add	data_593,cx		; (020A:6B04=9AECh)
020A:24B3  01 0E 0004				add	word ptr ds:[4],cx	; (020A:0004=808h)
020A:24B7  00 10				add	[bx+si],dl
020A:24B9  05 0000				add	ax,0
020A:24BC  5A					pop	dx
020A:24BD  3A 5C 53				cmp	bl,[si+53h]
020A:24C0  52					push	dx
020A:24C1  2E					db	2Eh
020A:24C2  45					inc	bp
020A:24C3  58					pop	ax
020A:24C4  45					inc	bp
020A:24C5  00 5C 73				add	[si+73h],bl
020A:24C8  79 73				jns	loc_196			; Jump if not sign
020A:24CA  74 65				jz	loc_195			; Jump if zero
020A:24CC  6D					db	6Dh
020A:24CD  33 32				xor	si,[bp+si]
020A:24CF  5C					pop	sp
020A:24D0  44					inc	sp
020A:24D1  4F					dec	di
020A:24D2  53					push	bx
020A:24D3  58					pop	ax
020A:24D4  2E					db	2Eh
020A:24D5  45					inc	bp
020A:24D6  58					pop	ax
020A:24D7  45					inc	bp
020A:24D8  00 00				add	[bx+si],al
020A:24DA  58					pop	ax
020A:24DB  45					inc	bp
020A:24DC  00F1[00]				db	241 dup (0)
020A:25CD  66					db	66h
020A:25CE  00 D9				add	cl,bl
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 70

020A:25D0  02 46 0B				add	al,[bp+0Bh]
020A:25D3  B5 00				mov	ch,0
020A:25D5  0042[00]				db	66 dup (0)
020A:2617  63					db	63h
020A:2618  0D 0094				or	ax,94h
020A:261B  00 00				add	[bx+si],al
020A:261D  00 E7				add	bh,ah
020A:261F  0C C5				or	al,0C5h
020A:2621  22 0C				and	cl,[si]
020A:2623  94					xchg	sp,ax
020A:2624  EA 0F22:EA22		;*		jmp	far ptr loc_1922	;*(0F22:EA22)
020A:2624  EA					db	0EAh
020A:2625  EA22 0F22				dw	0EA22h, 0F22h
							                        ;* No entry point to code
020A:2629  07					pop	es
020A:262A  00 07				add	[bx],al
020A:262C  D9					db	0D9h
020A:262D  02 01				add	al,[bx+di]
020A:262F  00 D9				add	cl,bl
020A:2631  02 47 01				add	al,[bx+1]
020A:2634  D9					db	0D9h

020A:2635			locloop_198:
020A:2635  02 24				add	ah,[si]
020A:2637  25 95B4				and	ax,95B4h
020A:263A  00 3E 9AB9				add	data_628,bh		; (020A:9AB9=0C6h)
020A:263E  0E					push	cs
020A:263F  04 00				add	al,0
020A:2641  00 00				add	[bx+si],al
020A:2643  01 00				add	[bx+si],ax
020A:2645  01 81 0E00				add	data_132[bx+di],ax	; (020A:0E00=5057h)
020A:2649  04 0E				add	al,0Eh
020A:264B  04 DE				add	al,0DEh
020A:264D  01 0E 4604				add	data_466,cx		; (020A:4604=3A32h)
020A:2651  32 00				xor	al,[bx+si]
020A:2653  00 00				add	[bx+si],al
020A:2655  41					inc	cx
020A:2656  52					push	dx
020A:2657  49					dec	cx
020A:2658  46					inc	si
020A:2659  59					pop	cx
020A:265A  4E					dec	si
020A:265B  0C 41				or	al,41h			; 'A'
020A:265D  62					db	62h
020A:265E  6F					db	6Fh
020A:265F  72 74				jc	loc_210			; Jump if carry Set
020A:2661  20 28				and	[bx+si],ch
020A:2663  E1 E2		;*		loopz	locloop_200		;*Loop if zf=1, cx>0

020A:2663  E1 E2				db	0E1h,0E2h
020A:2665  AE					scasb				; Scan es:[di] for al
020A:2666  AF					scasw				; Scan es:[di] for ax
020A:2667  29 10				sub	[bx+si],dx
020A:2669  2C 20				sub	al,20h			; ' '
020A:266B			loc_201:
020A:266B  52					push	dx
020A:266C  65					db	65h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 71

020A:266D  74 72				jz	loc_211			; Jump if zero
020A:266F  79 20				jns	loc_204			; Jump if not sign
020A:2671  28 AF A2AE				sub	data_641[bx],ch		; (020A:A2AE=0E9h)
020A:2675  E2 AE		;*		loop	locloop_197		;*Loop if cx > 0

020A:2675  E2 AE				db	0E2h,0AEh
020A:2677  E0 29				loopnz	locloop_206		; Loop if zf=0, cx>0

020A:2679  12 2C				adc	ch,[si]
020A:267B  20 49 67				and	[bx+di+67h],cl
020A:267E  6E					db	6Eh
020A:267F  6F					db	6Fh
020A:2680  6572 2820		data_223	dw	6572h, 2820h
020A:2684  AF					scasw				; Scan es:[di] for ax
020A:2685  E0 AE				loopnz	locloop_198		; Loop if zf=0, cx>0

020A:2687  AF					scasw				; Scan es:[di] for ax
020A:2688  E3 E1				jcxz	loc_201			; Jump if cx=0
020A:268A  AA					stosb				; Store al to es:[di]
020A:268B  29 0E 202C				sub	word ptr ds:[202Ch],cx	; (020A:202C=0)
020A:268F  46					inc	si
020A:2690  61					db	61h
020A:2691			loc_204:
020A:2691  69					db	69h
020A:2692  6C					db	6Ch
020A:2693  20 28				and	[bx+si],ch
020A:2695  E1 A1		;*		loopz	locloop_199		;*Loop if zf=1, cx>0

020A:2695  E1 A1				db	0E1h,0A1h
020A:2697  E0 AE		;*		loopnz	locloop_200		;*Loop if zf=0, cx>0

020A:2697  E0 AE				db	0E0h,0AEh
020A:2699  E1 29				loopz	locloop_209		; Loop if zf=1, cx>0

020A:269B  01 3F				add	[bx],di
020A:269D  07					pop	es
020A:269E  E7 E2				out	0E2h,ax			; port 0E2h ??I/O Non-standard
020A:26A0  A5					movsw				; Mov [si] to es:[di]
020A:26A1  AD					lodsw				; String [si] to ax

020A:26A2			locloop_206:
020A:26A2  A8 A5				test	al,0A5h

020A:26A4			locloop_208:
020A:26A4  00 07				add	[bx],al
020A:26A6  A7					cmpsw				; Cmp [si] to es:[di]
020A:26A7  A0 A8AF				mov	al,data_661		; (020A:A8AF=5)
020A:26AA  E1 EC		;*		loopz	locloop_205		;*Loop if zf=1, cx>0

020A:26AA  E1 EC				db	0E1h,0ECh
020A:26AC  00 0D				add	[di],cl
020A:26AE  20 25				and	[di],ah
020A:26B0  31 20				xor	[bx+si],sp
020A:26B2  A4					movsb				; Mov [si] to es:[di]
020A:26B3  A8 E1				test	al,0E1h
020A:26B5  AA					stosb				; Store al to es:[di]
020A:26B6  20 25				and	[di],ah
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 72

020A:26B8  32 0D				xor	cl,[di]
020A:26BA  0A 13				or	dl,[bp+di]
020A:26BC  20 25				and	[di],ah
020A:26BE  31 20				xor	[bx+si],sp
020A:26C0  E3 E1		;*		jcxz	loc_207			;*Jump if cx=0
020A:26C0  E3 E1				db	0E3h,0E1h
020A:26C2  E2 E0				loop	locloop_208		; Loop if cx > 0


020A:26C4			locloop_209:
020A:26C4  AE					scasb				; Scan es:[di] for al
020A:26C5  A9 E2E1				test	ax,0E2E1h
020A:26C8  A2 20AE				mov	byte ptr data_202,al	; (020A:20AE=20h)
020A:26CB  25 0D32				and	ax,0D32h
020A:26CE  0A 27				or	ah,[bx]
020A:26D0  82 E1 E2				and	cl,0E2h
020A:26D3  A0 ECA2				mov	al,byte ptr ds:[0ECA2h]	; (020A:ECA2=20h)
020A:26D6  E2 A5		;*		loop	locloop_202		;*Loop if cx > 0

020A:26D6  E2 A5				db	0E2h,0A5h
020A:26D8  20 E2				and	dl,ah
020A:26DA  AE					scasb				; Scan es:[di] for al
020A:26DB  AC					lodsb				; String [si] to al
020A:26DC  20 25				and	[di],ah
020A:26DE  31 2C				xor	[si],bp
020A:26E0  20 E1				and	cl,ah
020A:26E2  A5					movsw				; Mov [si] to es:[di]
020A:26E3  E0 A8		;*		loopnz	locloop_203		;*Loop if zf=0, cx>0

020A:26E3  E0 A8				db	0E0h,0A8h

020A:26E5			locloop_212:
020A:26E5  A9 EBAD				test	ax,0EBADh
020A:26E8  A9 AD20				test	ax,0AD20h
020A:26EB  AE					scasb				; Scan es:[di] for al
020A:26EC  AC					lodsb				; String [si] to al
020A:26ED  A5					movsw				; Mov [si] to es:[di]
020A:26EE  E0 20				loopnz	locloop_214		; Loop if zf=0, cx>0

020A:26F0  25 2D32				and	ax,2D32h
020A:26F3  25 0D33				and	ax,0D33h
020A:26F6  0A 37				or	dh,[bx]

020A:26F8			locloop_213:
020A:26F8  88 E1				mov	cl,ah
020A:26FA  AF					scasw				; Scan es:[di] for ax
020A:26FB  AE					scasb				; Scan es:[di] for al
020A:26FC  E0 E7				loopnz	locloop_212		; Loop if zf=0, cx>0

020A:26FE  A5					movsw				; Mov [si] to es:[di]
020A:26FF  AD					lodsw				; String [si] to ax
020A:2700  A0 E220				mov	al,byte ptr ds:[0E220h]	; (020A:E220=38h)
020A:2703  A0 ABA1				mov	al,data_668		; (020A:ABA1=0B3h)
020A:2706  A8 E6				test	al,0E6h
020A:2708  A0 E020				mov	al,byte ptr ds:[0E020h]	; (020A:E020=0C5h)
020A:270B  A0 ACA7				mov	al,data_672		; (020A:ACA7=0Ah)
020A:270E  A5					movsw				; Mov [si] to es:[di]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 73

020A:270F  E9 ADA5				jmp	$-5258h
							                        ;* No entry point to code
020A:2712  A8 EF				test	al,0EFh
020A:2714  20 E4				and	ah,ah
020A:2716  A0 ABA9				mov	al,data_670		; (020A:ABA9=80h)
020A:2719  AE					scasb				; Scan es:[di] for al
020A:271A  A2 2820				mov	data_224,al		; (020A:2820=0ADh)
020A:271D  46					inc	si
020A:271E  41					inc	cx
020A:271F  54					push	sp
020A:2720  29 20				sub	[bx+si],sp
020A:2722  AD					lodsw				; String [si] to ax
020A:2723  A0 A420				mov	al,data_645		; (020A:A420=74h)
020A:2726  A8 E1				test	al,0E1h
020A:2728  AA					stosb				; Store al to es:[di]
020A:2729  A5					movsw				; Mov [si] to es:[di]
020A:272A  20 25				and	[di],ah
020A:272C  31 0D				xor	[di],cx
020A:272E  0A 1A				or	bl,[bp+si]
020A:2730  8D A5 E0AF				lea	sp,cs:[0E0AFh][di]	; Load effective addr
020A:2734  A0 A8A2				mov	al,data_657		; (020A:A8A2=0C8h)
020A:2737  AB					stosw				; Store ax to es:[di]
020A:2738  EC					in	al,dx			; port 2203h ??I/O Non-standard
020A:2739  AD					lodsw				; String [si] to ax
020A:273A  EB A9				jmp	short locloop_212	; (26E5)
020A:273C  20 43 4F				and	[bp+di+4Fh],al
020A:273F  4D					dec	bp
020A:2740  4D					dec	bp
020A:2741  41					inc	cx
020A:2742  4E					dec	si
020A:2743  44					inc	sp
020A:2744  2E					db	2Eh
020A:2745  43					inc	bx
020A:2746  4F					dec	di
020A:2747  4D					dec	bp
020A:2748  0D 220A				or	ax,220Ah
020A:274B  82 E1 E2				and	cl,0E2h
020A:274E  A0 ECA2				mov	al,byte ptr ds:[0ECA2h]	; (020A:ECA2=20h)
020A:2751  E2 A5				loop	locloop_213		; Loop if cx > 0

020A:2753  20 A4 E1A8				and	byte ptr ds:[0E1A8h][si],ah	; (020A:E1A8=52h)
020A:2757  AA					stosb				; Store al to es:[di]
020A:2758  20 E1				and	cl,ah
020A:275A  20 25				and	[di],ah
020A:275C  31 20				xor	[bx+si],sp
020A:275E  A2 A420				mov	data_645,al		; (020A:A420=74h)
020A:2761  A8 E1				test	al,0E1h
020A:2763  AA					stosb				; Store al to es:[di]
020A:2764  AE					scasb				; Scan es:[di] for al
020A:2765  A2 A4AE				mov	byte ptr data_648,al	; (020A:A4AE=36h)
020A:2768  20 25				and	[di],ah
020A:276A  32 0D				xor	cl,[di]
020A:276C			loc_220:
020A:276C  0A 1A				or	bl,[bp+si]
020A:276E  8D A0 ACA6				lea	sp,cs:[0ACA6h][bx+si]	; Load effective addr
020A:2772  A8 E2				test	al,0E2h
020A:2774  A5					movsw				; Mov [si] to es:[di]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 74

020A:2775  20 AB A1EE				and	[bp+di-5E12h],ch
020A:2779  E3 EE		;*		jcxz	loc_219			;*Jump if cx=0
020A:2779  E3 EE				db	0E3h,0EEh
020A:277B  20 AA A0AB				and	[bp+si-5F55h],ch
020A:277F  A2 E8A8				mov	byte ptr ds:[0E8A8h],al	; (020A:E8A8=0BEh)
020A:2782  E3 2E				jcxz	loc_223			; Jump if cx=0
020A:2784  2E					db	2Eh
020A:2785  2E					db	2Eh
020A:2786  0D 390A				or	ax,390Ah
020A:2789  0D 8F0A				or	ax,8F0Ah
020A:278C  E0 A5		;*		loopnz	locloop_216		;*Loop if zf=0, cx>0

020A:278C  E0 A5				db	0E0h,0A5h
020A:278E  AA					stosb				; Store al to es:[di]
020A:278F  E0 A0		;*		loopnz	locloop_215		;*Loop if zf=0, cx>0

020A:278F  E0 A0				db	0E0h,0A0h
020A:2791  E2 A8		;*		loop	locloop_217		;*Loop if cx > 0

020A:2791  E2 A8				db	0E2h,0A8h
020A:2793  E2 EC		;*		loop	locloop_221		;*Loop if cx > 0

020A:2793  E2 EC				db	0E2h,0ECh
020A:2795  20 A2 AFEB				and	[bp+si-5015h],ah
020A:2799  AE					scasb				; Scan es:[di] for al
020A:279A  AB					stosw				; Store ax to es:[di]
020A:279B  AD					lodsw				; String [si] to ax
020A:279C  A5					movsw				; Mov [si] to es:[di]
020A:279D  AD					lodsw				; String [si] to ax
020A:279E  A8 A5				test	al,0A5h
020A:27A0  20 AF AAA0				and	data_666[bx],ch		; (020A:AAA0=26h)
020A:27A4  A5					movsw				; Mov [si] to es:[di]
020A:27A5  E2 AD		;*		loop	locloop_218		;*Loop if cx > 0

020A:27A5  E2 AD				db	0E2h,0ADh
020A:27A7  AE					scasb				; Scan es:[di] for al
020A:27A8  A3 20AE				mov	data_202,ax		; (020A:20AE=2020h)
020A:27AB  A7					cmpsw				; Cmp [si] to es:[di]
020A:27AC  A0 A0A4				mov	al,data_632		; (020A:A0A4=46h)
020A:27AF  AD					lodsw				; String [si] to ax
020A:27B0  A8 EF				test	al,0EFh
020A:27B2			loc_223:
020A:27B2  20 5B 59				and	[bp+di+59h],bl
020A:27B5  28 A4 29A0				sub	data_225[si],ah		; (020A:29A0=0AAh)

020A:27B9			locloop_224:
020A:27B9  2F					das				; Decimal adjust
020A:27BA  4E					dec	si
020A:27BB  28 AD E2A5				sub	byte ptr ds:[0E2A5h][di],ch	; (020A:E2A5=0FDh)
020A:27BF  29 5D 3F				sub	[di+3Fh],bx
020A:27C2  19 8D 20A5				sbb	data_200[di],cx		; (020A:20A5=2020h)
020A:27C6  E3 A4				jcxz	loc_220			; Jump if cx=0
020A:27C8  A0 E2A5				mov	al,byte ptr ds:[0E2A5h]	; (020A:E2A5=0FDh)
020A:27CB  E1 EF		;*		loopz	locloop_225		;*Loop if zf=1, cx>0

020A:27CB  E1 EF				db	0E1h,0EFh
020A:27CD  20 A2 AFEB				and	[bp+si-5015h],ah
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 75

020A:27D1  AE					scasb				; Scan es:[di] for al

020A:27D2			locloop_227:
020A:27D2  AB					stosw				; Store ax to es:[di]
020A:27D3  AD					lodsw				; String [si] to ax
020A:27D4  A8 E2				test	al,0E2h
020A:27D6  EC					in	al,dx			; port 2203h ??I/O Non-standard
020A:27D7  20 25				and	[di],ah
020A:27D9  31 0D				xor	[di],cx

020A:27DB			locloop_228:
020A:27DB  0A 14				or	dl,[si]

020A:27DD			locloop_229:
020A:27DD  8E					db	8Eh
020A:27DE  E8 A1A8				call	$-5E55h
020A:27E1  AA					stosb				; Store al to es:[di]
020A:27E2  A0 A220				mov	al,data_637		; (020A:A220=1Fh)
020A:27E5  20 45 58				and	[di+58h],al

020A:27E8			locloop_230:
020A:27E8  45					inc	bp
020A:27E9  2D A0E4				sub	ax,0A0E4h
020A:27EC  A9 A5AB				test	ax,0A5ABh
020A:27EF  0D 210A				or	ax,210Ah
020A:27F2  8F					db	8Fh
020A:27F3  E0 AE		;*		loopnz	locloop_222		;*Loop if zf=0, cx>0

020A:27F3  E0 AE				db	0E0h,0AEh
020A:27F5  A3 A0E0				mov	data_634,ax		; (020A:A0E0=9A04h)
020A:27F8  AC					lodsb				; String [si] to al
020A:27F9  AC					lodsb				; String [si] to al
020A:27FA  A0 AD20				mov	al,data_674		; (020A:AD20=1Eh)
020A:27FD  A5					movsw				; Mov [si] to es:[di]
020A:27FE  20 E3				and	bl,ah
020A:2800  AC					lodsb				; String [si] to al
020A:2801  A5					movsw				; Mov [si] to es:[di]
020A:2802  E9 A5A0				jmp	$-5A5Dh
020A:2805  E2 E1				loop	locloop_230		; Loop if cx > 0

020A:2807  EF					out	dx,ax			; port 223Fh ??I/O Non-standard
020A:2808			loc_231:
020A:2808  20 A2 AF20				and	[bp+si-50E0h],ah
020A:280C  A0 EFAC				mov	al,byte ptr ds:[0EFACh]	; (020A:EFAC=0E2h)
020A:280F  E2 A8				loop	locloop_224		; Loop if cx > 0

020A:2811  0D 230A				or	ax,230Ah
020A:2814  0D 8D0A				or	ax,8D0Ah
020A:2817  A5					movsw				; Mov [si] to es:[di]
020A:2818  E2 20				loop	locloop_236		; Loop if cx > 0

020A:281A  E1 A2		;*		loopz	locloop_226		;*Loop if zf=1, cx>0

020A:281A  E1 A2				db	0E1h,0A2h
020A:281C  AE					scasb				; Scan es:[di] for al
020A:281D  A1 A4AE				mov	ax,data_648		; (020A:A4AE=0A336h)
020A:2820  AD			data_224	db	0ADh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 76

020A:2821  EB E5				jmp	short loc_231		; (2808)
							                        ;* No entry point to code
020A:2823  20 A4 E1A5				and	byte ptr ds:[0E1A5h][si],ah	; (020A:E1A5=74h)
020A:2827  AA					stosb				; Store al to es:[di]
020A:2828  E0 A8				loopnz	locloop_227		; Loop if zf=0, cx>0

020A:282A  AF					scasw				; Scan es:[di] for ax
020A:282B  E2 AE				loop	locloop_228		; Loop if cx > 0

020A:282D  E0 AE				loopnz	locloop_229		; Loop if zf=0, cx>0


020A:282F			locloop_234:
020A:282F  A2 E420				mov	byte ptr ds:[0E420h],al	; (020A:E420=6)
020A:2832  A0 ABA9				mov	al,data_670		; (020A:ABA9=80h)
020A:2835  AE					scasb				; Scan es:[di] for al
020A:2836  A2 AD24				mov	data_675,al		; (020A:AD24=0C9h)
020A:2839  A5					movsw				; Mov [si] to es:[di]

020A:283A			locloop_236:
020A:283A  AF					scasw				; Scan es:[di] for ax
020A:283B  E0 A0				loopnz	locloop_229		; Loop if zf=0, cx>0

020A:283D  A2 ABA8				mov	data_669,al		; (020A:ABA8=41h)
020A:2840  EC					in	al,dx			; port 223Fh ??I/O Non-standard
020A:2841  AD					lodsw				; String [si] to ax
020A:2842  A0 20EF				mov	al,data_205		; (020A:20EF=0A0h)
020A:2845  AA					stosb				; Store al to es:[di]
020A:2846  AE					scasb				; Scan es:[di] for al

020A:2847			locloop_237:
020A:2847  AC					lodsb				; String [si] to al
020A:2848  A0 A4AD				mov	al,data_647		; (020A:A4AD=0FFh)
020A:284B  A0 A820				mov	al,data_656		; (020A:A820=3)
020A:284E  AB					stosw				; Store ax to es:[di]
020A:284F  A8 20				test	al,20h			; ' '
020A:2851  A8 AC				test	al,0ACh
020A:2853  EF					out	dx,ax			; port 223Fh ??I/O Non-standard
020A:2854  20 E4				and	ah,ah

020A:2856			locloop_238:
020A:2856  A0 ABA9				mov	al,data_670		; (020A:ABA9=80h)
020A:2859  A0 0A0D				mov	al,data_112		; (020A:0A0D=0)
020A:285C  0C 8D				or	al,8Dh
020A:285E  A5					movsw				; Mov [si] to es:[di]
020A:285F  E2 20				loop	locloop_241		; Loop if cx > 0

020A:2861  A4					movsb				; Mov [si] to es:[di]
020A:2862  AE					scasb				; Scan es:[di] for al
020A:2863  E1 E2				loopz	locloop_237		; Loop if zf=1, cx>0

020A:2865  E3 AF		;*		jcxz	loc_232			;*Jump if cx=0
020A:2865  E3 AF				db	0E3h,0AFh
020A:2867  A0 1D20				mov	al,data_183		; (020A:1D20=0)
020A:286A  0D 8E0A				or	ax,8E0Ah
020A:286D  E8 A1A8				call	$-5E55h
020A:2870  AA					stosb				; Store al to es:[di]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 77

020A:2871  A0 AF20				mov	al,data_682		; (020A:AF20=89h)
020A:2874  E0 A8		;*		loopnz	locloop_233		;*Loop if zf=0, cx>0

020A:2874  E0 A8				db	0E0h,0A8h
020A:2876  20 A2 A4EB				and	[bp+si-5B15h],ah
020A:287A  A5					movsw				; Mov [si] to es:[di]
020A:287B  AB					stosw				; Store ax to es:[di]
020A:287C  A5					movsw				; Mov [si] to es:[di]

020A:287D			locloop_239:
020A:287D  AD					lodsw				; String [si] to ax

020A:287E			locloop_240:
020A:287E  A8 A8				test	al,0A8h
020A:2880  20 AF ACA0				and	data_671[bx],ch		; (020A:ACA0=2Eh)
020A:2884  EF					out	dx,ax			; port 223Fh ??I/O Non-standard
020A:2885  E2 A8				loop	locloop_234		; Loop if cx > 0

020A:2887  39 0D				cmp	[di],cx
020A:2889  0A 8D 20A5				or	cl,byte ptr data_200[di]	; (020A:20A5=20h)
020A:288D  E3 A4		;*		jcxz	loc_235			;*Jump if cx=0
020A:288D  E3 A4				db	0E3h,0A4h
020A:288F  A0 E2A5				mov	al,byte ptr ds:[0E2A5h]	; (020A:E2A5=0FDh)

020A:2892			locloop_243:
020A:2892  E1 EF		;*		loopz	locloop_242		;*Loop if zf=1, cx>0

020A:2892  E1 EF				db	0E1h,0EFh
020A:2894  20 A7 A3A0				and	data_642[bx],ah		; (020A:A3A0=0)
020A:2898  E0 E3				loopnz	locloop_239		; Loop if zf=0, cx>0

020A:289A  A7					cmpsw				; Cmp [si] to es:[di]
020A:289B  A8 E2				test	al,0E2h
020A:289D  EC					in	al,dx			; port 223Fh ??I/O Non-standard
020A:289E  20 43 4F				and	[bp+di+4Fh],al
020A:28A1  4D					dec	bp
020A:28A2  4D					dec	bp

020A:28A3			locloop_245:
020A:28A3  41					inc	cx

020A:28A4			locloop_246:
020A:28A4  4E					dec	si
020A:28A5  44					inc	sp
020A:28A6  2E					db	2Eh
020A:28A7  43					inc	bx
020A:28A8  4F					dec	di
020A:28A9  4D					dec	bp
020A:28AA  2C 20				sub	al,20h			; ' '
020A:28AC  E1 A8				loopz	locloop_238		; Loop if zf=1, cx>0

020A:28AE  E1 E2				loopz	locloop_243		; Loop if zf=1, cx>0


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 78


				sub_28		proc	near
020A:28B0  A5					movsw				; Mov [si] to es:[di]
020A:28B1  AC					lodsb				; String [si] to al
020A:28B2  A0 AE20				mov	al,data_677		; (020A:AE20=3)

020A:28B5			locloop_247:
020A:28B5  E1 E2		;*		loopz	locloop_244		;*Loop if zf=1, cx>0

020A:28B5  E1 E2				db	0E1h,0E2h
020A:28B7  A0 AEAD				mov	al,data_680		; (020A:AEAD=0F6h)
020A:28BA  A2 A5AB				mov	data_651,al		; (020A:A5AB=77h)

020A:28BD			locloop_248:
020A:28BD  AD					lodsw				; String [si] to ax
020A:28BE  A0 0A0D				mov	al,data_112		; (020A:0A0D=0)
020A:28C1  37					aaa				; Ascii adjust
020A:28C2  0D 8D0A				or	ax,8D0Ah
020A:28C5  A5					movsw				; Mov [si] to es:[di]
020A:28C6  20 E3				and	bl,ah
020A:28C8  A4					movsb				; Mov [si] to es:[di]
020A:28C9  A0 E2A5				mov	al,byte ptr ds:[0E2A5h]	; (020A:E2A5=0FDh)
020A:28CC  E1 EF				loopz	locloop_248		; Loop if zf=1, cx>0


020A:28CE			locloop_250:
020A:28CE  20 A7 AFA0				and	data_683[bx],ah		; (020A:AFA0=0C7h)
020A:28D2  E3 E1				jcxz	locloop_247		; Jump if cx=0

020A:28D4			locloop_251:
020A:28D4  E2 A8				loop	locloop_240		; Loop if cx > 0

020A:28D6  E2 EC		;*		loop	locloop_249		;*Loop if cx > 0

020A:28D6  E2 EC				db	0E2h,0ECh
020A:28D8  20 43 4F				and	[bp+di+4Fh],al
020A:28DB  4D					dec	bp
020A:28DC  4D					dec	bp
020A:28DD  41					inc	cx
020A:28DE  4E					dec	si
020A:28DF  44					inc	sp
020A:28E0  2E					db	2Eh
020A:28E1  43					inc	bx

020A:28E2			locloop_252:
020A:28E2  4F					dec	di
020A:28E3  4D					dec	bp
020A:28E4  2C 20				sub	al,20h			; ' '
020A:28E6  A7					cmpsw				; Cmp [si] to es:[di]
020A:28E7  A0 A5A2				mov	al,data_650		; (020A:A5A2=77h)
020A:28EA  E0 E8				loopnz	locloop_251		; Loop if zf=0, cx>0


020A:28EC			locloop_253:
020A:28EC  A5					movsw				; Mov [si] to es:[di]
020A:28ED  AD					lodsw				; String [si] to ax
020A:28EE  A8 A5				test	al,0A5h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 79

020A:28F0  20 E0				and	al,ah
020A:28F2  A0 AEA1				mov	al,data_678		; (020A:AEA1=8Ah)
020A:28F5  E2 EB				loop	locloop_252		; Loop if cx > 0

020A:28F7			loc_254:
020A:28F7  0D 3B0A				or	ax,3B0Ah
020A:28FA  0D 8F0A				or	ax,8F0Ah
020A:28FD  E0 A5				loopnz	locloop_246		; Loop if zf=0, cx>0

020A:28FF  E0 A2				loopnz	locloop_245		; Loop if zf=0, cx>0

020A:2901  A0 20AD				mov	al,byte ptr ds:[20ADh]	; (020A:20AD=20h)
020A:2904  AF					scasw				; Scan es:[di] for ax
020A:2905  E0 AE				loopnz	locloop_247		; Loop if zf=0, cx>0

020A:2907  E6 A5				out	0A5h,al			; port 0A5h ??I/O Non-standard
020A:2909  E1 E1				loopz	locloop_253		; Loop if zf=1, cx>0

020A:290B  20 A2 E0A5				and	[bp+si-1F5Bh],ah
020A:290F  E5 AD				in	ax,0ADh			; port 0ADh ??I/O Non-standard
020A:2911  A5					movsw				; Mov [si] to es:[di]
020A:2912  A3 20AE				mov	data_202,ax		; (020A:20AE=2020h)
020A:2915  E3 E0				jcxz	loc_254			; Jump if cx=0
020A:2917  AE					scasb				; Scan es:[di] for al
020A:2918  A2 EFAD				mov	byte ptr ds:[0EFADh],al	; (020A:EFAD=0BEh)
020A:291B  2C 20				sub	al,20h			; ' '
020A:291D  AF					scasw				; Scan es:[di] for ax
020A:291E  E0 AE				loopnz	locloop_250		; Loop if zf=0, cx>0

020A:2920  A4					movsb				; Mov [si] to es:[di]
020A:2921  AE					scasb				; Scan es:[di] for al
020A:2922  AB					stosw				; Store ax to es:[di]
020A:2923  A6					cmpsb				; Cmp [si] to es:[di]
020A:2924  A5					movsw				; Mov [si] to es:[di]

020A:2925			locloop_256:
020A:2925  AD					lodsw				; String [si] to ax
020A:2926  A8 A5				test	al,0A5h
020A:2928  20 AD A2A5				and	data_640[di],ch		; (020A:A2A5=0F6h)
020A:292C  AE					scasb				; Scan es:[di] for al
020A:292D  A7					cmpsw				; Cmp [si] to es:[di]
020A:292E  AC					lodsb				; String [si] to al
020A:292F  AE					scasb				; Scan es:[di] for al
020A:2930  A6					cmpsb				; Cmp [si] to es:[di]
020A:2931  AD					lodsw				; String [si] to ax
020A:2932  AE					scasb				; Scan es:[di] for al
020A:2933  0D 020A				or	ax,20Ah
020A:2936  0D 580A				or	ax,580Ah
020A:2939  0F			;*		pop	cs			; Dangerous-8088 only
020A:2939  0F					db	0Fh
020A:293A  01 00				add	[bx+si],ax
020A:293C  87 0C				xchg	[si],cx
020A:293E  01 00				add	[bx+si],ax
020A:2940  58					pop	ax
020A:2941			loc_257:
020A:2941  0F			;*		pop	cs			; Dangerous-8088 only
020A:2941  0F					db	0Fh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 80

020A:2942  01 00				add	[bx+si],ax
020A:2944  00					db	0

020A:2945			locloop_258:
020A:2945  00 00				add	[bx+si],al
020A:2947  00 89 0E01				add	byte ptr data_132+1[bx+di],cl	; (020A:0E01=50h)
020A:294B  04 17				add	al,17h
020A:294D  8E					db	8Eh
020A:294E  E8 A1A8				call	$-5E55h
020A:2951  AA					stosb				; Store al to es:[di]
020A:2952  A0 A720				mov	al,data_654		; (020A:A720=0E8h)

020A:2955			locloop_260:
020A:2955  A0 A8E9				mov	al,byte ptr data_663	; (020A:A8E9=74h)
020A:2958  E2 EB				loop	locloop_258		; Loop if cx > 0

020A:295A  20 AE 20E2				and	[bp+20E2h],ch
020A:295E  A7					cmpsw				; Cmp [si] to es:[di]
020A:295F  A0 A8AF				mov	al,data_661		; (020A:A8AF=5)

020A:2962			locloop_262:
020A:2962  E1 A8		;*		loopz	locloop_255		;*Loop if zf=1, cx>0

020A:2962  E1 A8				db	0E1h,0A8h
020A:2964  17					pop	ss
020A:2965  8D A5 E0AF				lea	sp,cs:[0E0AFh][di]	; Load effective addr
020A:2969  A0 A8A2				mov	al,data_657		; (020A:A8A2=0C8h)

020A:296C			locloop_263:
020A:296C  AB					stosw				; Store ax to es:[di]
020A:296D  EC					in	al,dx			; port 1405h ??I/O Non-standard
020A:296E			loc_264:
020A:296E  AD					lodsw				; String [si] to ax
020A:296F  AE					scasb				; Scan es:[di] for al
020A:2970  A5					movsw				; Mov [si] to es:[di]
020A:2971  20 E3				and	bl,ah
020A:2973  E1 E2		;*		loopz	locloop_261		;*Loop if zf=1, cx>0

020A:2973  E1 E2				db	0E1h,0E2h
020A:2975  E0 AE				loopnz	locloop_256		; Loop if zf=0, cx>0

020A:2977  A9 E2E1				test	ax,0E2E1h
020A:297A  A2 0EAE				mov	byte ptr ds:[0EAEh],al	; (020A:0EAE=1)
020A:297D  8D A5 20E2				lea	sp,cs:[20E2h][di]	; Load effective addr
020A:2981  A3 E2AE				mov	word ptr ds:[0E2AEh],ax	; (020A:E2AE=574h)
020A:2984  AE					scasb				; Scan es:[di] for al
020A:2985  A2 AEAD				mov	data_680,al		; (020A:AEAD=0F6h)
020A:2988  E1 E2				loopz	locloop_263		; Loop if zf=1, cx>0

020A:298A  A8 20				test	al,20h			; ' '
020A:298C  8D A5 E0AF				lea	sp,cs:[0E0AFh][di]	; Load effective addr
020A:2990  A0 A8A2				mov	al,data_657		; (020A:A8A2=0C8h)
020A:2993  AB					stosw				; Store ax to es:[di]
020A:2994  EC					in	al,dx			; port 1405h ??I/O Non-standard
020A:2995  AD					lodsw				; String [si] to ax
020A:2996  EB A9				jmp	short loc_257		; (2941)
				sub_28		endp
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 81


020A:2998  20 A7 AFA0				and	data_683[bx],ah		; (020A:AFA0=0C7h)

020A:299C			locloop_268:
020A:299C  E0 AE		;*		loopnz	locloop_259		;*Loop if zf=0, cx>0

020A:299C  E0 AE				db	0E0h,0AEh
020A:299E  E1 20				loopz	locloop_272		; Loop if zf=1, cx>0

020A:29A0  AA			data_225	db	0AAh			; Data table (indexed access)
020A:29A1			loc_269:
020A:29A1  20 E3				and	bl,ah
020A:29A3  E1 E2		;*		loopz	locloop_266		;*Loop if zf=1, cx>0

020A:29A3  E1 E2				db	0E1h,0E2h
020A:29A5  E0 AE				loopnz	locloop_260		; Loop if zf=0, cx>0

020A:29A7  A9 E2E1				test	ax,0E2E1h
020A:29AA  A2 0FE3				mov	data_136,al		; (020A:0FE3=33h)
020A:29AD  8E					db	8Eh
020A:29AE  E8 A1A8				call	$-5E55h
020A:29B1  AA					stosb				; Store al to es:[di]
020A:29B2  A0 A220				mov	al,data_637		; (020A:A220=1Fh)
020A:29B5  20 A4 ADA0				and	data_676[si],ah		; (020A:ADA0=44h)
020A:29B9  AD					lodsw				; String [si] to ax
020A:29BA  EB E5				jmp	short loc_269		; (29A1)
020A:29BC  2B 8D AFA5				sub	cx,data_684[di]		; (020A:AFA5=0C6FFh)

020A:29C0			locloop_272:
020A:29C0  E0 A0				loopnz	locloop_262		; Loop if zf=0, cx>0

020A:29C2  A2 ABA8				mov	data_669,al		; (020A:ABA8=41h)
020A:29C5  EC					in	al,dx			; port 1405h ??I/O Non-standard
020A:29C6  AD					lodsw				; String [si] to ax
020A:29C7  EB A5				jmp	short loc_264		; (296E)
							                        ;* No entry point to code
020A:29C9  20 A0 A3E0				and	data_644[bx+si],ah	; (020A:A3E0=21h)
020A:29CD  E3 AC		;*		jcxz	locloop_265		;*Jump if cx=0
020A:29CD  E3 AC				db	0E3h,0ACh

020A:29CF			locloop_275:
020A:29CF  A5					movsw				; Mov [si] to es:[di]
020A:29D0  AD					lodsw				; String [si] to ax

020A:29D1			locloop_276:
020A:29D1  E2 EB		;*		loop	locloop_271		;*Loop if cx > 0

020A:29D1  E2 EB				db	0E2h,0EBh
020A:29D3  20 A7 AFA0				and	data_683[bx],ah		; (020A:AFA0=0C7h)
020A:29D7  E0 AE		;*		loopnz	locloop_266		;*Loop if zf=0, cx>0

020A:29D7  E0 AE				db	0E0h,0AEh
020A:29D9  E1 A0		;*		loopz	locloop_265		;*Loop if zf=1, cx>0

020A:29D9  E1 A0				db	0E1h,0A0h
020A:29DB  20 AA E320				and	[bp+si-1CE0h],ch
020A:29DF  E1 E2		;*		loopz	locloop_273		;*Loop if zf=1, cx>0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 82


020A:29DF  E1 E2				db	0E1h,0E2h
020A:29E1  E0 AE		;*		loopnz	locloop_267		;*Loop if zf=0, cx>0

020A:29E1  E0 AE				db	0E0h,0AEh
020A:29E3  A9 E2E1				test	ax,0E2E1h
020A:29E6  A2 0DE3				mov	data_131,al		; (020A:0DE3=0EBh)
020A:29E9  8E					db	8Eh
020A:29EA  E8 A1A8				call	$-5E55h
020A:29ED  AA					stosb				; Store al to es:[di]
020A:29EE  A0 AF20				mov	al,data_682		; (020A:AF20=89h)
020A:29F1  AE					scasb				; Scan es:[di] for al
020A:29F2  A8 E1				test	al,0E1h
020A:29F4  AA					stosb				; Store al to es:[di]
020A:29F5  A0 8D19				mov	al,data_619		; (020A:8D19=0)
020A:29F8  A5					movsw				; Mov [si] to es:[di]
020A:29F9  AF					scasw				; Scan es:[di] for ax
020A:29FA  E0 A0				loopnz	locloop_268		; Loop if zf=0, cx>0


020A:29FC			locloop_277:
020A:29FC  A2 ABA8				mov	data_669,al		; (020A:ABA8=41h)
020A:29FF  EC					in	al,dx			; port 1405h ??I/O Non-standard
020A:2A00  AD					lodsw				; String [si] to ax
020A:2A01  EB A9		;*		jmp	short loc_270		;*(29AC)
020A:2A01  EB A9				db	0EBh,0A9h
							                        ;* No entry point to code
020A:2A03  20 E2				and	dl,ah
020A:2A05  A8 AF				test	al,0AFh
020A:2A07  20 AD E1AE				and	byte ptr ds:[0E1AEh][di],ch	; (020A:E1AE=0)
020A:2A0B  A8 E2				test	al,0E2h
020A:2A0D  A5					movsw				; Mov [si] to es:[di]
020A:2A0E  AB					stosw				; Store ax to es:[di]
020A:2A0F  EF					out	dx,ax			; port 1405h ??I/O Non-standard
020A:2A10  10 91 AAA5				adc	data_667[bx+di],dl	; (020A:AAA5=5Dh)
020A:2A14  E2 AE		;*		loop	locloop_274		;*Loop if cx > 0

020A:2A14  E2 AE				db	0E2h,0AEh
020A:2A16  E0 20				loopnz	locloop_280		; Loop if zf=0, cx>0

020A:2A18  AD					lodsw				; String [si] to ax
020A:2A19  A5					movsw				; Mov [si] to es:[di]
020A:2A1A  20 AD A9A0				and	data_664[di],ch		; (020A:A9A0=0FEh)
020A:2A1E  A4					movsb				; Mov [si] to es:[di]
020A:2A1F  A5					movsw				; Mov [si] to es:[di]
020A:2A20  AD					lodsw				; String [si] to ax
020A:2A21  15 2082				adc	ax,2082h
020A:2A24  AF					scasw				; Scan es:[di] for ax
020A:2A25  E0 A8				loopnz	locloop_275		; Loop if zf=0, cx>0

020A:2A27  AD					lodsw				; String [si] to ax
020A:2A28  E2 A5				loop	locloop_275		; Loop if cx > 0

020A:2A2A  E0 A5				loopnz	locloop_276		; Loop if zf=0, cx>0

020A:2A2C  20 AD E2A5				and	byte ptr ds:[0E2A5h][di],ch	; (020A:E2A5=0FDh)
020A:2A30  20 A1 ACE3				and	data_673[bx+di],ah	; (020A:ACE3=3)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 83

020A:2A34  A0 A8A3				mov	al,data_658		; (020A:A8A3=26h)
020A:2A37  11 8E A8E8				adc	[bp-5718h],cx
020A:2A3B  A1 A0AA				mov	ax,data_633		; (020A:A0AA=0A315h)
020A:2A3E  20 AF A8E0				and	data_662[bx],ch		; (020A:A8E0=80h)
020A:2A42  20 A7 AFA0				and	data_683[bx],ah		; (020A:AFA0=0C7h)
020A:2A46  A8 E1				test	al,0E1h
020A:2A48  A8 11				test	al,11h
020A:2A4A  8E					db	8Eh
020A:2A4B  E8 A1A8				call	$-5E55h

020A:2A4E			locloop_282:
020A:2A4E  AA					stosb				; Store al to es:[di]
020A:2A4F  A0 AF20				mov	al,data_682		; (020A:AF20=89h)
020A:2A52  E0 A8				loopnz	locloop_277		; Loop if zf=0, cx>0

020A:2A54  20 E7				and	bh,ah
020A:2A56  E2 A5		;*		loop	locloop_278		;*Loop if cx > 0

020A:2A56  E2 A5				db	0E2h,0A5h
020A:2A58  AD					lodsw				; String [si] to ax
020A:2A59  A8 A8				test	al,0A8h
020A:2A5B  12 8E E9A1				adc	cl,[bp-165Fh]
020A:2A5F  A8 A9				test	al,0A9h
020A:2A61  20 E1				and	cl,ah
020A:2A63  A1 A9AE				mov	ax,data_665		; (020A:A9AE=571Bh)
020A:2A66  20 E1				and	cl,ah
020A:2A68  A8 E1				test	al,0E1h
020A:2A6A  E2 A5		;*		loop	locloop_279		;*Loop if cx > 0

020A:2A6A  E2 A5				db	0E2h,0A5h
020A:2A6C  AC					lodsb				; String [si] to al
020A:2A6D  EB 24				jmp	short loc_288		; (2A93)
020A:2A6F  8D A0 E3E0				lea	sp,cs:[0E3E0h][bx+si]	; Load effective addr
020A:2A73  E8 ADA5				call	$-5258h
020A:2A76  A8 A5				test	al,0A5h
020A:2A78  20 E0				and	al,ah
020A:2A7A  A5					movsw				; Mov [si] to es:[di]

020A:2A7B			locloop_287:
020A:2A7B  A6					cmpsb				; Cmp [si] to es:[di]
020A:2A7C  A8 AC				test	al,0ACh
020A:2A7E  A0 E120				mov	al,byte ptr ds:[0E120h]	; (020A:E120=0)
020A:2A81  AE					scasb				; Scan es:[di] for al
020A:2A82  A2 A5AC				mov	data_652,al		; (020A:A5AC=9)
020A:2A85  E1 E2		;*		loopz	locloop_284		;*Loop if zf=1, cx>0

020A:2A85  E1 E2				db	0E1h,0E2h
020A:2A87  AD					lodsw				; String [si] to ax
020A:2A88  AE					scasb				; Scan es:[di] for al
020A:2A89  A3 20AE				mov	data_202,ax		; (020A:20AE=2020h)
020A:2A8C  A4					movsb				; Mov [si] to es:[di]
020A:2A8D  AE					scasb				; Scan es:[di] for al
020A:2A8E  E1 E2		;*		loopz	locloop_285		;*Loop if zf=1, cx>0

020A:2A8E  E1 E2				db	0E1h,0E2h
020A:2A90  E3 AF		;*		jcxz	loc_281			;*Jump if cx=0
020A:2A90  E3 AF				db	0E3h,0AFh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 84

020A:2A92  A0 8D14				mov	al,data_618		; (020A:8D14=4)
020A:2A95  A0 E3E0				mov	al,byte ptr ds:[0E3E0h]	; (020A:E3E0=15h)
020A:2A98  E8 ADA5				call	$-5258h
020A:2A9B  A8 A5				test	al,0A5h
020A:2A9D  20 A1 AEAB				and	byte ptr data_679[bx+di],ah	; (020A:AEAB=0Ch)
020A:2AA1  AA					stosb				; Store al to es:[di]
020A:2AA2  A8 E0				test	al,0E0h
020A:2AA4  AE					scasb				; Scan es:[di] for al
020A:2AA5  A2 A8AA				mov	data_659,al		; (020A:A8AA=8)
020A:2AA8  18 8D AFA5				sbb	byte ptr data_684[di],cl	; (020A:AFA5=0FFh)
020A:2AAC  E0 A0				loopnz	locloop_282		; Loop if zf=0, cx>0

020A:2AAE  A2 ABA8				mov	data_669,al		; (020A:ABA8=41h)
020A:2AB1  EC					in	al,dx			; port 1405h ??I/O Non-standard

020A:2AB2			locloop_293:
020A:2AB2  AD					lodsw				; String [si] to ax
020A:2AB3  A0 20EF				mov	al,data_205		; (020A:20EF=0A0h)

020A:2AB6			locloop_294:
020A:2AB6  E1 AC		;*		loopz	locloop_283		;*Loop if zf=1, cx>0

020A:2AB6  E1 AC				db	0E1h,0ACh
020A:2AB8  A5					movsw				; Mov [si] to es:[di]
020A:2AB9  AD					lodsw				; String [si] to ax
020A:2ABA  A0 A420				mov	al,data_645		; (020A:A420=74h)
020A:2ABD  A8 E1				test	al,0E1h
020A:2ABF  AA					stosb				; Store al to es:[di]
020A:2AC0  A0 8D27				mov	al,data_620		; (020A:8D27=7)
020A:2AC3  A5					movsw				; Mov [si] to es:[di]
020A:2AC4  A4					movsb				; Mov [si] to es:[di]
020A:2AC5  AE					scasb				; Scan es:[di] for al
020A:2AC6  E1 E2		;*		loopz	locloop_290		;*Loop if zf=1, cx>0

020A:2AC6  E1 E2				db	0E1h,0E2h
020A:2AC8  E3 AF		;*		jcxz	loc_286			;*Jump if cx=0
020A:2AC8  E3 AF				db	0E3h,0AFh
020A:2ACA  A5					movsw				; Mov [si] to es:[di]
020A:2ACB  AD					lodsw				; String [si] to ax
020A:2ACC  20 46 43				and	[bp+43h],al
020A:2ACF  42					inc	dx
020A:2AD0  20 28				and	[bx+si],ch
020A:2AD2  A1 AEAB				mov	ax,data_679		; (020A:AEAB=10Ch)
020A:2AD5  AA					stosb				; Store al to es:[di]
020A:2AD6  20 E3				and	bl,ah

020A:2AD8			locloop_296:
020A:2AD8  AF					scasw				; Scan es:[di] for ax
020A:2AD9  E0 A0				loopnz	locloop_287		; Loop if zf=0, cx>0

020A:2ADB  A2 A5AB				mov	data_651,al		; (020A:A5AB=77h)
020A:2ADE  AD					lodsw				; String [si] to ax
020A:2ADF  A8 EF				test	al,0EFh
020A:2AE1  20 E4				and	ah,ah
020A:2AE3  A0 ABA9				mov	al,data_670		; (020A:ABA9=80h)
020A:2AE6  AE					scasb				; Scan es:[di] for al
020A:2AE7  AC					lodsb				; String [si] to al
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 85

020A:2AE8  29 19				sub	[bx+di],bx
020A:2AEA  90					nop
020A:2AEB  A5					movsw				; Mov [si] to es:[di]
020A:2AEC  E1 E3		;*		loopz	locloop_295		;*Loop if zf=1, cx>0

020A:2AEC  E1 E3				db	0E1h,0E3h
020A:2AEE  E0 E1		;*		loopnz	locloop_295		;*Loop if zf=0, cx>0

020A:2AEE  E0 E1				db	0E0h,0E1h
020A:2AF0  EB 20				jmp	short loc_301		; (2B12)
020A:2AF2  E1 A8		;*		loopz	locloop_289		;*Loop if zf=1, cx>0

020A:2AF2  E1 A8				db	0E1h,0A8h
020A:2AF4  E1 E2				loopz	locloop_296		; Loop if zf=1, cx>0

020A:2AF6  A5					movsw				; Mov [si] to es:[di]
020A:2AF7  AC					lodsb				; String [si] to al
020A:2AF8  EB 20				jmp	short loc_302		; (2B1A)
020A:2AFA  A8 E1				test	al,0E1h
020A:2AFC  E7 A5				out	0A5h,ax			; port 0A5h ??I/O Non-standard

020A:2AFE			locloop_299:
020A:2AFE  E0 AF		;*		loopnz	locloop_292		;*Loop if zf=0, cx>0

020A:2AFE  E0 AF				db	0E0h,0AFh
020A:2B00  A0 EBAD				mov	al,byte ptr ds:[0EBADh]	; (020A:EBAD=0)
020A:2B03  8D1E			data_226	dw	8D1Eh			; Data table (indexed access)
020A:2B05  A5					movsw				; Mov [si] to es:[di]
020A:2B06  E1 AE				loopz	locloop_294		; Loop if zf=1, cx>0

020A:2B08  AE					scasb				; Scan es:[di] for al
020A:2B09  E2 A2		;*		loop	locloop_291		;*Loop if cx > 0

020A:2B09  E2 A2				db	0E2h,0A2h

020A:2B0B			locloop_300:
020A:2B0B  A5					movsw				; Mov [si] to es:[di]
020A:2B0C  E2 E1		;*		loop	locloop_297		;*Loop if cx > 0

020A:2B0C  E2 E1				db	0E2h,0E1h
020A:2B0E  E2 A2				loop	locloop_293		; Loop if cx > 0

020A:2B10  A8 A5				test	al,0A5h
020A:2B12			loc_301:
020A:2B12  20 AA A4AE				and	[bp+si-5B52h],ch
020A:2B16  AE					scasb				; Scan es:[di] for al
020A:2B17  A2 E5EB				mov	byte ptr ds:[0E5EBh],al	; (020A:E5EB=8Ah)
020A:2B1A			loc_302:
020A:2B1A  20 E1				and	cl,ah
020A:2B1C  E2 E0				loop	locloop_299		; Loop if cx > 0

020A:2B1E			loc_303:
020A:2B1E  A0 A8AD				mov	al,data_660		; (020A:A8AD=8Ah)
020A:2B21  E6 1D				out	1Dh,al			; port 1Dh ??I/O Non-standard
020A:2B23  8D A5 AEA4				lea	sp,cs:[0AEA4h][di]	; Load effective addr
020A:2B27  E1 E2				loopz	locloop_300		; Loop if zf=1, cx>0

           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 86


020A:2B29			locloop_305:
020A:2B29  A0 AEE2				mov	al,data_681		; (020A:AEE2=1)
020A:2B2C  E7 AD				out	0ADh,ax			; port 0ADh ??I/O Non-standard
020A:2B2E  AE					scasb				; Scan es:[di] for al
020A:2B2F  20 A2 A5A2				and	[bp+si-5A5Eh],ah
020A:2B33  A4					movsb				; Mov [si] to es:[di]
020A:2B34  A5					movsw				; Mov [si] to es:[di]
020A:2B35  AD					lodsw				; String [si] to ax
020A:2B36  AD			data_227	db	0ADh
020A:2B37  EB			data_228	db	0EBh
020A:2B38  E5			data_229	db	0E5h
020A:2B39  A420			data_230	dw	0A420h
020A:2B3B  A0			data_231	db	0A0h
020A:2B3C  AD			data_232	db	0ADh
020A:2B3D  EBAD			data_233	dw	0EBADh
020A:2B3F  E5 1B				in	ax,1Bh			; port 1Bh ??I/O Non-standard
020A:2B41  8D			data_235	db	8Dh
020A:2B42  A4A5			data_236	dw	0A4A5h
020A:2B44  AE			data_237	db	0AEh
020A:2B45  E1			data_238	db	0E1h
020A:2B46  E2 A0				loop	$-5Eh			; Loop if cx > 0

020A:2B48  E2 AE				loop	$-50h			; Loop if cx > 0

020A:2B4A  E7 AD				out	0ADh,ax			; port 0ADh ??I/O Non-standard
020A:2B4C  AE					scasb				; Scan es:[di] for al
020A:2B4D  20 AC E1A5				and	byte ptr ds:[0E1A5h][si],ch	; (020A:E1A5=74h)
020A:2B51  E2 A0		;*		loop	locloop_298		;*Loop if cx > 0

020A:2B51  E2 A0				db	0E2h,0A0h
020A:2B53  20 AD 20A0				and	data_199[di],ch		; (020A:20A0=20h)
020A:2B57  A4					movsb				; Mov [si] to es:[di]
020A:2B58  A8 E1				test	al,0E1h
020A:2B5A  AA					stosb				; Store al to es:[di]
020A:2B5B  A5					movsw				; Mov [si] to es:[di]
020A:2B5C  0C 09				or	al,9
020A:2B5E  24 09				and	al,9
020A:2B60  3C 09				cmp	al,9
020A:2B62  4B					dec	bx
020A:2B63  09 6C 09				or	[si+9],bp
020A:2B66  7C 09				jl	loc_306			; Jump if <
020A:2B68  A8 09				test	al,9
020A:2B6A  B6 09				mov	dh,9
020A:2B6C  D0 09				ror	byte ptr [bx+di],1	; Rotate
020A:2B6E  E1 09				loopz	locloop_307		; Loop if zf=1, cx>0

020A:2B70  F7					db	0F7h
020A:2B71			loc_306:
020A:2B71  09 09				or	[bx+di],cx
020A:2B73  0A 1B				or	bl,[bp+di]
020A:2B75  0A 2E 530A				or	ch,data_558		; (020A:530A=0C6h)

020A:2B79			locloop_307:
020A:2B79  0A 68 0A				or	ch,[bx+si+0Ah]
020A:2B7C  81 0A 0AA9				or	word ptr [bp+si],0AA9h
020A:2B80  C3					retn
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 87

							                        ;* No entry point to code
020A:2B81  0A E2				or	ah,dl
020A:2B83  0A 00				or	al,[bx+si]
020A:2B85  0B 18				or	bx,[bx+si]
020A:2B87  91					xchg	cx,ax
020A:2B88  AB					stosw				; Store ax to es:[di]
020A:2B89  A8 E8				test	al,0E8h
020A:2B8B  AA					stosb				; Store al to es:[di]
020A:2B8C  AE					scasb				; Scan es:[di] for al
020A:2B8D  AC					lodsb				; String [si] to al
020A:2B8E  20 AC 004D				and	byte ptr ds:[4Dh][si],ch	; (020A:004D=82h)
020A:2B92  00 07				add	[bx],al
020A:2B94  00 AF E0A0				add	byte ptr ds:[0E0A0h][bx],ch	; (020A:E0A0=3Bh)
020A:2B98  A0 A5AC				mov	al,data_652		; (020A:A5AC=9)
020A:2B9B  E2 E0		;*		loop	locloop_308		;*Loop if cx > 0

020A:2B9B  E2 E0				db	0E2h,0E0h
020A:2B9D  AE					scasb				; Scan es:[di] for al
020A:2B9E  A2 0021				mov	byte ptr data_18+3,al	; (020A:0021=0A3h)
020A:2BA1  01 00				add	[bx+si],ax

020A:2BA3			locloop_309:
020A:2BA3  00					db	0
020A:2BA4  00					db	0
020A:2BA5  00 00				add	[bx+si],al
020A:2BA7  00 C4				add	ah,al
020A:2BA9  0C 00				or	al,0
020A:2BAB  00 FF				add	bh,bh
020A:2BAD  0013[FF]				db	19 dup (0FFh)
020A:2BC0  43					inc	bx
020A:2BC1  3A 5C 57				cmp	bl,[si+57h]
020A:2BC4  49					dec	cx
020A:2BC5  4E					dec	si
020A:2BC6  44					inc	sp
020A:2BC7  4F					dec	di
020A:2BC8  57					push	di
020A:2BC9  53					push	bx
020A:2BCA  5C					pop	sp
020A:2BCB  54					push	sp
020A:2BCC  45					inc	bp
020A:2BCD  4D					dec	bp
020A:2BCE  50					push	ax
020A:2BCF  5C					pop	sp
020A:2BD0  73 63				jnc	loc_313			; Jump if carry=0
020A:2BD2  73 41				jnc	loc_312			; Jump if carry=0
020A:2BD4  2E					db	2Eh
020A:2BD5  74 6D				jz	loc_315			; Jump if zero
020A:2BD7  70 00				jo	$+2			; delay for I/O
020A:2BD9  0008[00]				db	8 dup (0)
020A:2BE1  00			data_241	db	0
020A:2BE2  0000			data_242	dw	0
020A:2BE4  0000			data_243	dw	0
020A:2BE6  00			data_244	db	0

020A:2BE7			locloop_310:
020A:2BE7  0000			data_245	dw	0			; Data table (indexed access)
020A:2BE9  0000			data_246	dw	0			; Data table (indexed access)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 88

020A:2BEB  0000			data_247	dw	0			; Data table (indexed access)
020A:2BED  0000			data_248	dw	0			; Data table (indexed access)
020A:2BEF  00					db	0
020A:2BF0  00					db	0
020A:2BF1			loc_311:
020A:2BF1  00					db	0
020A:2BF2  00					db	0
020A:2BF3  00					db	0
020A:2BF4  00					db	0
020A:2BF5  00					db	0
020A:2BF6  00					db	0
020A:2BF7  00					db	0
020A:2BF8  00					db	0
020A:2BF9  00					db	0
020A:2BFA  00					db	0
020A:2BFB  00					db	0
020A:2BFC  00					db	0
020A:2BFD  00					db	0
020A:2BFE  00 00				add	[bx+si],al
020A:2C00  00 E0				add	al,ah
020A:2C02  A0 A5AC				mov	al,data_652		; (020A:A5AC=9)
020A:2C05  E2 E0				loop	locloop_310		; Loop if cx > 0

020A:2C07  A0 A220				mov	al,data_637		; (020A:A220=1Fh)
020A:2C0A  EB E5				jmp	short loc_311		; (2BF1)
020A:2C0C  AE					scasb				; Scan es:[di] for al
020A:2C0D  A4					movsb				; Mov [si] to es:[di]
020A:2C0E  A8 E2				test	al,0E2h
020A:2C10  4D					dec	bp
020A:2C11  040E			data_250	dw	40Eh
020A:2C13  43					inc	bx
020A:2C14  00 E0				add	al,ah
020A:2C16  A5					movsw				; Mov [si] to es:[di]
020A:2C17  A4					movsb				; Mov [si] to es:[di]
020A:2C18  A5					movsw				; Mov [si] to es:[di]
020A:2C19  AB					stosw				; Store ax to es:[di]
020A:2C1A  EB 20				jmp	short loc_314		; (2C3C)
020A:2C1C  A4					movsb				; Mov [si] to es:[di]
020A:2C1D  AE					scasb				; Scan es:[di] for al
020A:2C1E  AF					scasw				; Scan es:[di] for ax
020A:2C1F  E3 43				jcxz	loc_316			; Jump if cx=0
020A:2C21  4F 4D 53 50 45 43	data_251	db	'OMSPEC=C:\WINDOWS\SYSTEM32\COMMA'
020A:2C27  3D 43 3A 5C 57 49
020A:2C2D  4E 44 4F 57 53 5C
020A:2C33  53 59 53 54 45 4D
020A:2C39  33 32 5C 43 4F 4D
020A:2C3F  4D 41
020A:2C41  4E 44 2E 43 4F 4D			db	'ND.COM', 0
020A:2C47  00
020A:2C48  41 4C 4C 55 53 45			db	'ALLUSERSPROFILE=C:\DOCUME~'
020A:2C4E  52 53 50 52 4F 46
020A:2C54  49 4C 45 3D 43 3A
020A:2C5A  5C 44 4F 43 55 4D
020A:2C60  45 7E
020A:2C62  5C31			data_254	dw	5C31h
020A:2C64			loc_316:
020A:2C64  41					inc	cx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 89

020A:2C65  4C					dec	sp
020A:2C66  4C					dec	sp
020A:2C67  55					push	bp
020A:2C68  53					push	bx
020A:2C69  45					inc	bp
020A:2C6A  7E 31				jle	$+33h			; Jump if < or =
020A:2C6C  00 41 50				add	[bx+di+50h],al
020A:2C6F  50					push	ax
020A:2C70  44					inc	sp
020A:2C71  41					inc	cx
020A:2C72  54					push	sp
020A:2C73  41					inc	cx
020A:2C74  3D 3A43				cmp	ax,3A43h
020A:2C77  5C					pop	sp
020A:2C78  44					inc	sp
020A:2C79  4F					dec	di
020A:2C7A  43					inc	bx
020A:2C7B  55					push	bp
020A:2C7C  4D					dec	bp
020A:2C7D  45					inc	bp
020A:2C7E  7E 31				jle	$+33h			; Jump if < or =
020A:2C80  5C					pop	sp
020A:2C81  41					inc	cx
020A:2C82  64					db	64h
020A:2C83  6D					db	6Dh
020A:2C84  69					db	69h
020A:2C85  6E					db	6Eh
020A:2C86  5C					pop	sp
020A:2C87  41					inc	cx
020A:2C88  50					push	ax
020A:2C89  50					push	ax
020A:2C8A  4C					dec	sp
020A:2C8B  49					dec	cx
020A:2C8C  43					inc	bx
020A:2C8D  7E 31				jle	$+33h			; Jump if < or =
020A:2C8F  00 43 4C				add	[bp+di+4Ch],al
020A:2C92  49					dec	cx
020A:2C93  45					inc	bp
020A:2C94  4E					dec	si
020A:2C95  54					push	sp
020A:2C96  4E					dec	si
020A:2C97  41					inc	cx
020A:2C98  4D					dec	bp
020A:2C99  45					inc	bp
020A:2C9A  3D 6F43				cmp	ax,6F43h
020A:2C9D  6E					db	6Eh
020A:2C9E  73 6F				jnc	$+71h			; Jump if carry=0
020A:2CA0  6C					db	6Ch
020A:2CA1  65					db	65h
020A:2CA2  00 43 4F				add	[bp+di+4Fh],al
020A:2CA5  4D					dec	bp
020A:2CA6  4D					dec	bp
020A:2CA7  4F					dec	di
020A:2CA8  4E					dec	si
020A:2CA9  50					push	ax
020A:2CAA  52					push	dx
020A:2CAB  4F					dec	di
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 90

020A:2CAC  47					inc	di
020A:2CAD  52					push	dx
020A:2CAE  41					inc	cx
020A:2CAF  464D			data_255	dw	464Dh
020A:2CB1  49					dec	cx
020A:2CB2  4C					dec	sp
020A:2CB3  45					inc	bp
020A:2CB4  53					push	bx
020A:2CB5  3D 3A43				cmp	ax,3A43h
020A:2CB8  5C					pop	sp
020A:2CB9  50					push	ax
020A:2CBA  52					push	dx
020A:2CBB  4F					dec	di
020A:2CBC  47					inc	di
020A:2CBD  52					push	dx
020A:2CBE  41					inc	cx
020A:2CBF  7E 31				jle	$+33h			; Jump if < or =
020A:2CC1  5C					pop	sp
020A:2CC2  4F43			data_256	dw	4F43h
020A:2CC4  4D4D			data_257	dw	4D4Dh
020A:2CC6  4E4F			data_258	dw	4E4Fh
020A:2CC8  317E			data_259	dw	317Eh
020A:2CCA  4300			data_260	dw	4300h
020A:2CCC  4F					dec	di
020A:2CCD  4D					dec	bp
020A:2CCE  50					push	ax
020A:2CCF  55					push	bp
020A:2CD0  54					push	sp
020A:2CD1  45					inc	bp
020A:2CD2  52					push	dx
020A:2CD3  4E					dec	si
020A:2CD4  41					inc	cx
020A:2CD5  4D					dec	bp
020A:2CD6  45					inc	bp
020A:2CD7  3D 5355				cmp	ax,5355h
020A:2CDA  45					inc	bp
020A:2CDB  52					push	dx
020A:2CDC  2D 3037				sub	ax,3037h
020A:2CDF  39 44 42				cmp	[si+42h],ax
020A:2CE2  37					aaa				; Ascii adjust
020A:2CE3  35 4238				xor	ax,4238h
020A:2CE6  37					aaa				; Ascii adjust
020A:2CE7  00 46 50				add	[bp+50h],al
020A:2CEA  5F					pop	di
020A:2CEB  4E					dec	si
020A:2CEC  4F					dec	di
020A:2CED  5F					pop	di
020A:2CEE  48					dec	ax
020A:2CEF  4F					dec	di
020A:2CF0  53					push	bx
020A:2CF1  54					push	sp
020A:2CF2  5F					pop	di
020A:2CF3  43					inc	bx
020A:2CF4  48					dec	ax
020A:2CF5  45					inc	bp
020A:2CF6  43					inc	bx
020A:2CF7  4B					dec	bx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 91

020A:2CF8  3D 4F4E				cmp	ax,4F4Eh
020A:2CFB  00 48 4F				add	[bx+si+4Fh],cl
020A:2CFE  4D					dec	bp
020A:2CFF  45					inc	bp
020A:2D00  44					inc	sp
020A:2D01  52					push	dx
020A:2D02  49					dec	cx
020A:2D03  56					push	si
020A:2D04  45					inc	bp
020A:2D05  3D 3A43				cmp	ax,3A43h
020A:2D08  00 48 4F				add	[bx+si+4Fh],cl
020A:2D0B  4D					dec	bp
020A:2D0C  45					inc	bp
020A:2D0D  50					push	ax
020A:2D0E  41					inc	cx
020A:2D0F  54					push	sp
020A:2D10  48					dec	ax
020A:2D11  3D 445C				cmp	ax,445Ch
020A:2D14  6F					db	6Fh
020A:2D15  63					db	63h
020A:2D16  75 6D				jnz	$+6Fh			; Jump if not zero
020A:2D18  65					db	65h
020A:2D19  6E					db	6Eh
020A:2D1A  74 73				jz	$+75h			; Jump if zero
020A:2D1C  20 61 6E				and	[bx+di+6Eh],ah
020A:2D1F  64					db	64h
020A:2D20  20 53 65				and	[bp+di+65h],dl
020A:2D23  74 74				jz	$+76h			; Jump if zero
020A:2D25  69 6E 67 73 5C 41	data_262	db	'ings\Admin', 0
020A:2D2B  64 6D 69 6E 00
020A:2D30  4C					dec	sp
020A:2D31  4F					dec	di
020A:2D32  47					inc	di
020A:2D33  4F					dec	di
020A:2D34  4E					dec	si
020A:2D35  53					push	bx
020A:2D36  45					inc	bp
020A:2D37  52					push	dx
020A:2D38  56					push	si
020A:2D39  45					inc	bp
020A:2D3A  52 3D 5C 5C 55 53	data_263	db	'R=\\USER-709DB758B7', 0
020A:2D40  45 52 2D 37 30 39
020A:2D46  44 42 37 35 38 42
020A:2D4C  37 00
020A:2D4E  4E					dec	si
020A:2D4F  55					push	bp
020A:2D50  4D					dec	bp
020A:2D51  42					inc	dx
020A:2D52  45					inc	bp
020A:2D53  52					push	dx
020A:2D54  5F					pop	di
020A:2D55  4F					dec	di
020A:2D56  46					inc	si
020A:2D57  5F					pop	di
020A:2D58  50					push	ax
020A:2D59  52					push	dx
020A:2D5A  4F					dec	di
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 92

020A:2D5B  43			data_264	db	43h
020A:2D5C  5345			data_265	dw	5345h
020A:2D5E  53					push	bx
020A:2D5F  4F					dec	di
020A:2D60  52					push	dx
020A:2D61  53					push	bx
020A:2D62  3D 0031				cmp	ax,31h
020A:2D65  4F					dec	di
020A:2D66  53					push	bx
020A:2D67  3D 6957				cmp	ax,6957h
020A:2D6A  6E					db	6Eh
020A:2D6B  64					db	64h
020A:2D6C  6F					db	6Fh
020A:2D6D  77 73				ja	$+75h			; Jump if above
020A:2D6F  5F					pop	di
020A:2D70  4E					dec	si
020A:2D71  54					push	sp
020A:2D72  00 50 41				add	[bx+si+41h],dl
020A:2D75  54					push	sp
020A:2D76  48					dec	ax
020A:2D77  3D 3A43				cmp	ax,3A43h
020A:2D7A  5C					pop	sp
020A:2D7B  57					push	di
020A:2D7C  49					dec	cx
020A:2D7D  4E					dec	si
020A:2D7E  44					inc	sp
020A:2D7F  4F					dec	di
020A:2D80  57					push	di
020A:2D81  53					push	bx
020A:2D82  5C					pop	sp
020A:2D83  73 79				jnc	$+7Bh			; Jump if carry=0
020A:2D85  73 74				jnc	$+76h			; Jump if carry=0
020A:2D87  65					db	65h
020A:2D88  6D					db	6Dh
020A:2D89  33 32				xor	si,[bp+si]
020A:2D8B  3B 43 3A				cmp	ax,[bp+di+3Ah]
020A:2D8E  5C					pop	sp
020A:2D8F  57					push	di
020A:2D90  49					dec	cx
020A:2D91  4E					dec	si
020A:2D92  44					inc	sp
020A:2D93  4F					dec	di
020A:2D94  57					push	di
020A:2D95  53					push	bx
020A:2D96  3B 43 3A				cmp	ax,[bp+di+3Ah]
020A:2D99  5C					pop	sp
020A:2D9A  57					push	di
020A:2D9B  49					dec	cx
020A:2D9C  4E					dec	si
020A:2D9D  44					inc	sp
020A:2D9E  4F					dec	di
020A:2D9F  57					push	di
020A:2DA0  53					push	bx
020A:2DA1  5C					pop	sp
020A:2DA2  53					push	bx
020A:2DA3  79 73				jns	$+75h			; Jump if not sign
020A:2DA5  74 65				jz	$+67h			; Jump if zero
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 93

020A:2DA7  6D					db	6Dh
020A:2DA8  33 32				xor	si,[bp+si]
020A:2DAA  5C					pop	sp
020A:2DAB  6257			data_266	dw	6257h
020A:2DAD  65			data_267	db	65h
020A:2DAE  6D					db	6Dh
020A:2DAF  00 50 41				add	[bx+si+41h],dl
020A:2DB2  54					push	sp
020A:2DB3  48					dec	ax
020A:2DB4  45					inc	bp
020A:2DB5  58					pop	ax
020A:2DB6  54					push	sp
020A:2DB7  3D 432E				cmp	ax,432Eh
020A:2DBA  4F					dec	di
020A:2DBB  4D					dec	bp
020A:2DBC  3B 2E 5845				cmp	bp,word ptr ds:[5845h]	; (020A:5845=9D00h)
020A:2DC0  45					inc	bp
020A:2DC1  3B 2E 4142				cmp	bp,word ptr ds:[4142h]	; (020A:4142=7541h)
020A:2DC5  54					push	sp
020A:2DC6  3B 2E 4D43				cmp	bp,word ptr ds:[4D43h]	; (020A:4D43=8A00h)
020A:2DCA  44					inc	sp
020A:2DCB  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020A:4256=8003h)
020A:2DCF  53					push	bx
020A:2DD0  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020A:4256=8003h)
020A:2DD4  45					inc	bp
020A:2DD5  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020A:534A=36BAh)
020A:2DD9  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020A:534A=36BAh)
020A:2DDD  45					inc	bp
020A:2DDE  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=3E80h)
020A:2DE2  46					inc	si
020A:2DE3  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=3E80h)
020A:2DE7  48					dec	ax
020A:2DE8  00 50 52				add	[bx+si+52h],dl
020A:2DEB  4F					dec	di
020A:2DEC  43					inc	bx
020A:2DED  45					inc	bp
020A:2DEE  53					push	bx
020A:2DEF  53					push	bx
020A:2DF0  4F					dec	di
020A:2DF1  52					push	dx
020A:2DF2  5F					pop	di
020A:2DF3  41					inc	cx
020A:2DF4  4352			data_268	dw	4352h
020A:2DF6  48					dec	ax
020A:2DF7  49					dec	cx
020A:2DF8  54					push	sp
020A:2DF9  45					inc	bp
020A:2DFA  43					inc	bx
020A:2DFB  54					push	sp
020A:2DFC  55					push	bp
020A:2DFD  52					push	dx
020A:2DFE  45					inc	bp
020A:2DFF  3D 3878				cmp	ax,3878h
020A:2E02  36: 00 50 52				add	ss:[bx+si+52h],dl
020A:2E06  4F					dec	di
020A:2E07  43					inc	bx
020A:2E08  45					inc	bp
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 94

020A:2E09  53					push	bx
020A:2E0A  53					push	bx
020A:2E0B  4F					dec	di
020A:2E0C  52					push	dx
020A:2E0D  5F					pop	di
020A:2E0E  49					dec	cx
020A:2E0F  44					inc	sp
020A:2E10  45					inc	bp
020A:2E11  4E					dec	si
020A:2E12  54					push	sp
020A:2E13  49					dec	cx
020A:2E14  46					inc	si
020A:2E15  49					dec	cx
020A:2E16  45					inc	bp
020A:2E17  52					push	dx
020A:2E18  3D 3878				cmp	ax,3878h
020A:2E1B  36					db	36h
020A:2E1C  20 46 61				and	[bp+61h],al
020A:2E1F  6D					db	6Dh
020A:2E20  69					db	69h
020A:2E21  6C					db	6Ch
020A:2E22  79 20				jns	$+22h			; Jump if not sign
020A:2E24  36: 20 4D 6F				and	ss:[di+6Fh],cl
020A:2E28  64					db	64h
020A:2E29  65					db	65h
020A:2E2A  6C					db	6Ch
020A:2E2B  20 31				and	[bx+di],dh
020A:2E2D  34 32				xor	al,32h			; '2'
020A:2E2F  20 53 74				and	[bp+di+74h],dl
020A:2E32  65					db	65h
020A:2E33  70 70				jo	$+72h			; Jump if overflow=1
020A:2E35  69					db	69h
020A:2E36  6E					db	6Eh
020A:2E37  67					db	67h
020A:2E38  20 31				and	[bx+di],dh
020A:2E3A  30 2C				xor	[si],ch
020A:2E3C  20 47 65				and	[bx+65h],al
020A:2E3F  6E					db	6Eh
020A:2E40  75 69				jnz	$+6Bh			; Jump if not zero
020A:2E42  6E					db	6Eh
020A:2E43  65					db	65h
020A:2E44  49					dec	cx
020A:2E45  6E					db	6Eh
020A:2E46  74 65				jz	$+67h			; Jump if zero
020A:2E48  6C					db	6Ch
020A:2E49  00 50 52				add	[bx+si+52h],dl
020A:2E4C  4F					dec	di
020A:2E4D  43					inc	bx
020A:2E4E  45					inc	bp
020A:2E4F  53					push	bx
020A:2E50  53					push	bx
020A:2E51  4F					dec	di
020A:2E52  52					push	dx
020A:2E53  5F					pop	di
020A:2E54  4C					dec	sp
020A:2E55  45					inc	bp
020A:2E56  56					push	si
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 95

020A:2E57  45					inc	bp
020A:2E58  4C					dec	sp
020A:2E59  3D 0036				cmp	ax,36h
020A:2E5C  50					push	ax
020A:2E5D  52					push	dx
020A:2E5E  4F					dec	di
020A:2E5F  43					inc	bx
020A:2E60  45					inc	bp
020A:2E61  53					push	bx
020A:2E62  53					push	bx
020A:2E63  4F					dec	di
020A:2E64  52					push	dx
020A:2E65  5F					pop	di
020A:2E66  52					push	dx
020A:2E67  45					inc	bp
020A:2E68  56					push	si
020A:2E69  49					dec	cx
020A:2E6A  53					push	bx
020A:2E6B  49					dec	cx
020A:2E6C  4F					dec	di
020A:2E6D  4E					dec	si
020A:2E6E  3D 6538				cmp	ax,6538h
020A:2E71  30 61 00		;*		xor	[bx+di+0],ah
020A:2E71  30 61 00				db	 30h, 61h, 00h
020A:2E74  50					push	ax
020A:2E75  52					push	dx
020A:2E76  4F					dec	di
020A:2E77  47					inc	di
020A:2E78  52					push	dx
020A:2E79  41					inc	cx
020A:2E7A  4D					dec	bp
020A:2E7B  46					inc	si
020A:2E7C  49					dec	cx
020A:2E7D  4C					dec	sp
020A:2E7E  45					inc	bp
020A:2E7F  53					push	bx
020A:2E80  3D 3A43				cmp	ax,3A43h
020A:2E83  5C					pop	sp
020A:2E84  50					push	ax
020A:2E85  52					push	dx
020A:2E86  4F					dec	di
020A:2E87  47					inc	di
020A:2E88  52					push	dx
020A:2E89  41					inc	cx
020A:2E8A  7E 31				jle	$+33h			; Jump if < or =
020A:2E8C  00 50 52				add	[bx+si+52h],dl
020A:2E8F  4F					dec	di
020A:2E90  4D					dec	bp
020A:2E91  50					push	ax
020A:2E92  54					push	sp
020A:2E93  3D 5024				cmp	ax,5024h
020A:2E96  24 47				and	al,47h			; 'G'
020A:2E98  00 53 45				add	[bp+di+45h],dl
020A:2E9B  53					push	bx
020A:2E9C  53					push	bx
020A:2E9D  49					dec	cx
020A:2E9E  4F					dec	di
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 96

020A:2E9F  4E					dec	si
020A:2EA0  4E					dec	si
020A:2EA1  41					inc	cx
020A:2EA2  4D					dec	bp
020A:2EA3  45					inc	bp
020A:2EA4  3D 6F43				cmp	ax,6F43h
020A:2EA7  6E					db	6Eh
020A:2EA8  73 6F				jnc	$+71h			; Jump if carry=0
020A:2EAA  6C					db	6Ch
020A:2EAB  65					db	65h
020A:2EAC  00 53 59				add	[bp+di+59h],dl
020A:2EAF  53					push	bx
020A:2EB0  54					push	sp
020A:2EB1  45					inc	bp
020A:2EB2  4D					dec	bp
020A:2EB3  44					inc	sp
020A:2EB4  52					push	dx
020A:2EB5  49					dec	cx
020A:2EB6  56					push	si
020A:2EB7  45					inc	bp
020A:2EB8  3D 3A43				cmp	ax,3A43h
020A:2EBB  00 53 59				add	[bp+di+59h],dl
020A:2EBE  53					push	bx
020A:2EBF  54					push	sp
020A:2EC0  45					inc	bp
020A:2EC1  4D					dec	bp
020A:2EC2  52					push	dx
020A:2EC3  4F					dec	di
020A:2EC4  4F					dec	di
020A:2EC5  54					push	sp
020A:2EC6  3D 3A43				cmp	ax,3A43h
020A:2EC9  5C					pop	sp
020A:2ECA  57					push	di
020A:2ECB  49					dec	cx
020A:2ECC  4E					dec	si
020A:2ECD  44					inc	sp
020A:2ECE  4F					dec	di
020A:2ECF  57					push	di
020A:2ED0  53					push	bx
020A:2ED1  00 54 45				add	[si+45h],dl
020A:2ED4  4D					dec	bp
020A:2ED5  50					push	ax
020A:2ED6  3D 3A43				cmp	ax,3A43h
020A:2ED9  5C					pop	sp
020A:2EDA  57					push	di
020A:2EDB  49					dec	cx
020A:2EDC  4E					dec	si
020A:2EDD  44					inc	sp
020A:2EDE  4F					dec	di
020A:2EDF  57					push	di
020A:2EE0  53					push	bx
020A:2EE1  5C					pop	sp
020A:2EE2  54					push	sp
020A:2EE3  45					inc	bp
020A:2EE4  4D					dec	bp
020A:2EE5  50					push	ax
020A:2EE6  00 54 4D				add	[si+4Dh],dl
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 97

020A:2EE9  50					push	ax
020A:2EEA  3D 3A43				cmp	ax,3A43h
020A:2EED  5C					pop	sp
020A:2EEE  57					push	di
020A:2EEF  49					dec	cx
020A:2EF0  4E					dec	si
020A:2EF1  44					inc	sp
020A:2EF2  4F					dec	di
020A:2EF3  57					push	di
020A:2EF4  53					push	bx
020A:2EF5  5C					pop	sp
020A:2EF6  54					push	sp
020A:2EF7  45					inc	bp
020A:2EF8  4D					dec	bp
020A:2EF9  50					push	ax
020A:2EFA  00 55 53				add	[di+53h],dl
020A:2EFD  45					inc	bp
020A:2EFE  52					push	dx
020A:2EFF  44					inc	sp
020A:2F00  4F					dec	di
020A:2F01  4D					dec	bp
020A:2F02  41					inc	cx
020A:2F03  49					dec	cx
020A:2F04  4E					dec	si
020A:2F05  3D 5355				cmp	ax,5355h
020A:2F08  45					inc	bp
020A:2F09  52					push	dx
020A:2F0A  2D 3037				sub	ax,3037h
020A:2F0D  39 44 42				cmp	[si+42h],ax
020A:2F10  37					aaa				; Ascii adjust
020A:2F11  35 4238				xor	ax,4238h
020A:2F14  37					aaa				; Ascii adjust
020A:2F15  00 55 53				add	[di+53h],dl
020A:2F18  45					inc	bp
020A:2F19  52					push	dx
020A:2F1A  4E					dec	si
020A:2F1B  41					inc	cx
020A:2F1C  4D					dec	bp
020A:2F1D  45					inc	bp
020A:2F1E  3D 6441				cmp	ax,6441h
020A:2F21			loc_318:
020A:2F21  6D					db	6Dh
020A:2F22  69					db	69h
020A:2F23  6E					db	6Eh
020A:2F24  00 55 53				add	[di+53h],dl
020A:2F27  45					inc	bp
020A:2F28  52					push	dx
020A:2F29  50					push	ax
020A:2F2A  52					push	dx
020A:2F2B  4F					dec	di
020A:2F2C  46					inc	si

020A:2F2D			locloop_319:
020A:2F2D  49					dec	cx
020A:2F2E  4C					dec	sp
020A:2F2F  45					inc	bp
020A:2F30  3D 3A43				cmp	ax,3A43h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 98

020A:2F33  5C					pop	sp
020A:2F34  44					inc	sp
020A:2F35  4F					dec	di
020A:2F36  43					inc	bx
020A:2F37  55					push	bp
020A:2F38  4D					dec	bp
020A:2F39  45					inc	bp
020A:2F3A  7E 31				jle	$+33h			; Jump if < or =
020A:2F3C  5C					pop	sp
020A:2F3D  41					inc	cx
020A:2F3E  64					db	64h
020A:2F3F  6D					db	6Dh
020A:2F40  69					db	69h
020A:2F41  6E					db	6Eh
020A:2F42  00 42 4C				add	[bp+si+4Ch],al
020A:2F45  41					inc	cx
020A:2F46  53					push	bx
020A:2F47  54					push	sp
020A:2F48  45					inc	bp
020A:2F49  52					push	dx
020A:2F4A  3D 3241				cmp	ax,3241h
020A:2F4D  32 30				xor	dh,[bx+si]
020A:2F4F  20 49 35				and	[bx+di+35h],cl
020A:2F52  20 44 31				and	[si+31h],al
020A:2F55  20 50 33				and	[bx+si+33h],dl
020A:2F58  33 30				xor	si,[bx+si]
020A:2F5A  20 54 33				and	[si+33h],dl
020A:2F5D  00 00				add	[bx+si],al
020A:2F5F  E0 A6		;*		loopnz	locloop_317		;*Loop if zf=0, cx>0

020A:2F5F  E0 A6				db	0E0h,0A6h
020A:2F61  A8 A2				test	al,0A2h
020A:2F63  A0 E2A5				mov	al,byte ptr ds:[0E2A5h]	; (020A:E2A5=0FDh)
020A:2F66  E1 EF		;*		loopz	locloop_320		;*Loop if zf=1, cx>0

020A:2F66  E1 EF				db	0E1h,0EFh
020A:2F68  20 E1				and	cl,ah
020A:2F6A  A5					movsw				; Mov [si] to es:[di]
020A:2F6B  E2 EC		;*		loop	locloop_321		;*Loop if cx > 0

020A:2F6B  E2 EC				db	0E2h,0ECh
020A:2F6D  EE					out	dx,al			; port 1, DMA-1 bas&cnt ch 0
020A:2F6E  29 92 A5E0				sub	[bp+si-5A20h],dx
020A:2F72  A1 A5E3				mov	ax,data_653		; (020A:A5E3=9A01h)
020A:2F75  AC					lodsb				; String [si] to al
020A:2F76  EB A9				jmp	short loc_318		; (2F21)
							                        ;* No entry point to code
020A:2F78  20 AA ACAE				and	[bp+si-5352h],ch
020A:2F7C  AF					scasw				; Scan es:[di] for ax
020A:2F7D  AE					scasb				; Scan es:[di] for al
020A:2F7E  AD					lodsw				; String [si] to ax
020A:2F7F  A5					movsw				; Mov [si] to es:[di]
020A:2F80  AD					lodsw				; String [si] to ax
020A:2F81  E2 20				loop	locloop_324		; Loop if cx > 0

020A:2F83  E1 A8				loopz	locloop_319		; Loop if zf=1, cx>0

           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 99

020A:2F85  E1 E2		;*		loopz	locloop_322		;*Loop if zf=1, cx>0

020A:2F85  E1 E2				db	0E1h,0E2h
020A:2F87  A5					movsw				; Mov [si] to es:[di]
020A:2F88  AC					lodsb				; String [si] to al
020A:2F89  EB 20				jmp	short loc_325		; (2FAB)
							                        ;* No entry point to code
020A:2F8B  AD					lodsw				; String [si] to ax
020A:2F8C  A5					movsw				; Mov [si] to es:[di]
020A:2F8D  20 E3				and	bl,ah
020A:2F8F  E1 E2		;*		loopz	locloop_323		;*Loop if zf=1, cx>0

020A:2F8F  E1 E2				db	0E1h,0E2h
020A:2F91  A0 AEAD				mov	al,data_680		; (020A:AEAD=0F6h)
020A:2F94  A2 A5AB				mov	data_651,al		; (020A:A5AB=77h)
020A:2F97  AD					lodsw				; String [si] to ax
020A:2F98  9D					popf				; Pop flags
020A:2F99  0C B2				or	al,0B2h
020A:2F9B  0C C1				or	al,0C1h
020A:2F9D  0C D0				or	al,0D0h
020A:2F9F  0C ED				or	al,0EDh
020A:2FA1  0C FA				or	al,0FAh

020A:2FA3			locloop_324:
020A:2FA3  0C 12				or	al,12h
020A:2FA5  0D 0D35				or	ax,0D35h
020A:2FA8  49					dec	cx
020A:2FA9  0D 0D69				or	ax,0D69h
020A:2FAC  91					xchg	cx,ax
020A:2FAD  0D 0DA5				or	ax,0DA5h
020A:2FB0  C3					retn
020A:2FB1  0D 0000				or	ax,0
020A:2FB4  D7					xlat				; al=[al+[bx]] table
020A:2FB5  0D 0DEE				or	ax,0DEEh
020A:2FB8  0E					push	cs
020A:2FB9  0E					push	cs
020A:2FBA  20 0E 090C				and	byte ptr ds:[90Ch],cl	; (020A:090C=0Eh)
020A:2FBE  24 09				and	al,9
020A:2FC0  3C 09				cmp	al,9
020A:2FC2  4B					dec	bx
020A:2FC3  09 6C 09				or	[si+9],bp
020A:2FC6  7C 09				jl	loc_326			; Jump if <
020A:2FC8  A8 09				test	al,9
020A:2FCA  B6 09				mov	dh,9
020A:2FCC  D0 09				ror	byte ptr [bx+di],1	; Rotate
020A:2FCE  E1 09				loopz	locloop_327		; Loop if zf=1, cx>0

020A:2FD0  F7					db	0F7h
020A:2FD1			loc_326:
020A:2FD1  09 09				or	[bx+di],cx
020A:2FD3  0A 1B				or	bl,[bp+di]
020A:2FD5  0A 2E 530A				or	ch,data_558		; (020A:530A=0C6h)

020A:2FD9			locloop_327:
020A:2FD9  0A 68 0A				or	ch,[bx+si+0Ah]
020A:2FDC  81 0A 0AA9				or	word ptr [bp+si],0AA9h
020A:2FE0  C3					retn
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 100

							                        ;* No entry point to code
020A:2FE1  0A E2				or	ah,dl
020A:2FE3  0A 00				or	al,[bx+si]
020A:2FE5  0B 00				or	ax,[bx+si]
020A:2FE7  0040[00]				db	64 dup (0)
020A:3027  0000			data_270	dw	0
020A:3029  0000			data_271	dw	0
020A:302B  0000			data_272	dw	0
020A:302D  0000			data_273	dw	0
020A:302F  00					db	0
020A:3030  00			data_274	db	0
020A:3031  00			data_275	db	0
020A:3032  00			data_276	db	0
020A:3033  0000			data_277	dw	0
020A:3035  3200			data_278	dw	3200h
020A:3037  000E			data_279	dw	0Eh
020A:3039  4200			data_280	dw	4200h
020A:303B  0E			data_281	db	0Eh
020A:303C  0E66			data_282	dw	0E66h
020A:303E  8F			data_283	db	8Fh
020A:303F  0E			data_284	db	0Eh
020A:3040  B3			data_285	db	0B3h
020A:3041  0E					push	cs
020A:3042  CF			data_286	db	0CFh
020A:3043  0E					push	cs
020A:3044  E3 0E				jcxz	loc_328			; Jump if cx=0
020A:3046  F9			data_287	db	0F9h
020A:3047  0E					push	cs
020A:3048  0E					push	cs
020A:3049  0F			;*		pop	cs			; Dangerous-8088 only
020A:3049  0F					db	0Fh
020A:304A  2E			data_288	db	2Eh
020A:304B  0F			;*		pop	cs			; Dangerous-8088 only
020A:304B  0F					db	0Fh
020A:304C  0000			data_289	dw	0
020A:304E  0000			data_290	dw	0
020A:3050  464D			data_291	dw	464Dh
020A:3052  3505			data_292	dw	3505h
020A:3054			loc_328:
020A:3054  7400			data_293	dw	7400h
020A:3056  BB1B			data_294	dw	0BB1Bh
020A:3058  07B1			data_295	dw	7B1h
020A:305A  083C			data_296	dw	83Ch
020A:305C  74 14				jz	loc_329			; Jump if zero
020A:305E  BB 439C				mov	bx,439Ch
020A:3061  4F 4D 53				db	'OMS'
020A:3064  4550			data_298	dw	4550h
020A:3066  3D43			data_299	dw	3D43h
020A:3068  43					inc	bx
020A:3069  3A 5C 57				cmp	bl,[si+57h]
020A:306C  49					dec	cx
020A:306D  4E					dec	si
020A:306E  44					inc	sp
020A:306F  4F 57 53 5C 53 59	data_300	db	'OWS\SYSTEM32\COMMAND.'
020A:3075  53 54 45 4D 33 32
020A:307B  5C 43 4F 4D 4D 41
020A:3081  4E 44 2E
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 101

020A:3084  4F43			data_301	dw	4F43h
020A:3086  004D			data_302	dw	4Dh
020A:3088  4C41			data_303	dw	4C41h
020A:308A  554C			data_304	dw	554Ch
020A:308C  4553			data_305	dw	4553h
020A:308E  5352			data_306	dw	5352h
020A:3090  5250			data_307	dw	5250h
020A:3092  464F			data_308	dw	464Fh
020A:3094  4C49			data_309	dw	4C49h
020A:3096  3D45			data_310	dw	3D45h
020A:3098  3A43			data_311	dw	3A43h
020A:309A  445C			data_312	dw	445Ch
020A:309C  4F					dec	di
020A:309D  43					inc	bx
020A:309E  55			data_313	db	55h
020A:309F  4D			data_314	db	4Dh
020A:30A0  45			data_315	db	45h
020A:30A1  7E 31 5C 41 4C 4C	data_316	db	'~1\ALLUSE~1', 0
020A:30A7  55 53 45 7E 31 00
020A:30AD  41					inc	cx
020A:30AE  50					push	ax
020A:30AF  50					push	ax
020A:30B0  44			data_317	db	44h
020A:30B1  41					inc	cx
020A:30B2  54			data_318	db	54h
020A:30B3  41 3D 43 3A 5C 44	data_319	db	'A=C:\DOCU'
020A:30B9  4F 43 55
020A:30BC  454D			data_320	dw	454Dh
020A:30BE  317E			data_321	dw	317Eh
020A:30C0  5C					pop	sp
020A:30C1  41					inc	cx
020A:30C2  64					db	64h
020A:30C3  6D					db	6Dh
020A:30C4  69					db	69h
020A:30C5  6E					db	6Eh
020A:30C6  5C					pop	sp
020A:30C7  41					inc	cx
020A:30C8  50					push	ax
020A:30C9  4C50			data_322	dw	4C50h
020A:30CB  4349			data_323	dw	4349h
020A:30CD  7E			data_324	db	7Eh
020A:30CE  31			data_325	db	31h
020A:30CF  00 43 4C				add	[bp+di+4Ch],al
020A:30D2  49					dec	cx
020A:30D3  45					inc	bp
020A:30D4  4E					dec	si
020A:30D5  54					push	sp
020A:30D6  4E					dec	si
020A:30D7  41					inc	cx
020A:30D8  4D					dec	bp
020A:30D9  45					inc	bp
020A:30DA  3D 6F43				cmp	ax,6F43h
020A:30DD  6E					db	6Eh
020A:30DE  73 6F				jnc	$+71h			; Jump if carry=0
020A:30E0  6C					db	6Ch
020A:30E1  65					db	65h
020A:30E2  00 43 4F				add	[bp+di+4Fh],al
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 102

020A:30E5  4D					dec	bp
020A:30E6  4D					dec	bp
020A:30E7  4F					dec	di
020A:30E8  4E					dec	si
020A:30E9  50					push	ax
020A:30EA  52					push	dx
020A:30EB  4F					dec	di
020A:30EC  47					inc	di
020A:30ED  52					push	dx
020A:30EE  41					inc	cx
020A:30EF  4D					dec	bp
020A:30F0  46					inc	si
020A:30F1  49					dec	cx
020A:30F2  4C					dec	sp
020A:30F3  45					inc	bp
020A:30F4  53					push	bx
020A:30F5  3D 3A43				cmp	ax,3A43h
020A:30F8  5C					pop	sp
020A:30F9  50					push	ax
020A:30FA  52					push	dx
020A:30FB  4F					dec	di
020A:30FC  47					inc	di
020A:30FD  52					push	dx
020A:30FE  41					inc	cx
020A:30FF  7E 31				jle	$+33h			; Jump if < or =
020A:3101  5C					pop	sp
020A:3102  43					inc	bx
020A:3103  4F					dec	di
020A:3104  4D					dec	bp
020A:3105  4D					dec	bp
020A:3106  4F					dec	di
020A:3107  4E					dec	si
020A:3108  7E 31				jle	$+33h			; Jump if < or =
020A:310A  00 43 4F				add	[bp+di+4Fh],al
020A:310D  4D					dec	bp
020A:310E  50					push	ax
020A:310F  55					push	bp
020A:3110  54					push	sp
020A:3111  45					inc	bp
020A:3112  52					push	dx
020A:3113  4E					dec	si
020A:3114  41					inc	cx
020A:3115  4D					dec	bp
020A:3116  45					inc	bp
020A:3117  3D 5355				cmp	ax,5355h
020A:311A  45					inc	bp
020A:311B  52					push	dx
020A:311C  2D 3037				sub	ax,3037h
020A:311F  39 44 42				cmp	[si+42h],ax
020A:3122  37					aaa				; Ascii adjust
020A:3123  35 4238				xor	ax,4238h
020A:3126  37					aaa				; Ascii adjust
020A:3127  00 46 50				add	[bp+50h],al
020A:312A  5F					pop	di
020A:312B  4E					dec	si
020A:312C  4F					dec	di
020A:312D  5F					pop	di
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 103

020A:312E  48					dec	ax
020A:312F  4F					dec	di
020A:3130  53					push	bx
020A:3131  54					push	sp
020A:3132  5F					pop	di
020A:3133  43					inc	bx
020A:3134  48					dec	ax
020A:3135  45					inc	bp
020A:3136  43					inc	bx
020A:3137  4B					dec	bx
020A:3138  3D 4F4E				cmp	ax,4F4Eh
020A:313B  00 48 4F				add	[bx+si+4Fh],cl
020A:313E  4D					dec	bp
020A:313F  45					inc	bp
020A:3140  44					inc	sp
020A:3141  52					push	dx
020A:3142  49					dec	cx
020A:3143  56					push	si
020A:3144  45					inc	bp
020A:3145  3D 3A43				cmp	ax,3A43h
020A:3148  00 48 4F				add	[bx+si+4Fh],cl
020A:314B  4D					dec	bp
020A:314C  45					inc	bp
020A:314D  50					push	ax
020A:314E  41					inc	cx
020A:314F  54					push	sp
020A:3150  48					dec	ax
020A:3151  3D 445C				cmp	ax,445Ch
020A:3154  6F					db	6Fh
020A:3155  63					db	63h
020A:3156  75 6D				jnz	$+6Fh			; Jump if not zero
020A:3158  65					db	65h
020A:3159  6E					db	6Eh
020A:315A  74 73				jz	$+75h			; Jump if zero
020A:315C  20 61 6E				and	[bx+di+6Eh],ah
020A:315F  64					db	64h
020A:3160  20 53 65				and	[bp+di+65h],dl
020A:3163  74 74				jz	$+76h			; Jump if zero
020A:3165  69					db	69h
020A:3166  6E					db	6Eh
020A:3167  67					db	67h
020A:3168  73 5C				jnc	$+5Eh			; Jump if carry=0
020A:316A  41					inc	cx
020A:316B  64					db	64h
020A:316C  6D					db	6Dh
020A:316D  69					db	69h
020A:316E  6E					db	6Eh
020A:316F  00 4C 4F				add	[si+4Fh],cl
020A:3172  47					inc	di
020A:3173  4F					dec	di
020A:3174  4E					dec	si
020A:3175  53					push	bx
020A:3176  45					inc	bp
020A:3177  52					push	dx
020A:3178  56					push	si
020A:3179  45					inc	bp
020A:317A  52					push	dx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 104

020A:317B  3D 5C5C				cmp	ax,5C5Ch
020A:317E  55					push	bp
020A:317F  53					push	bx
020A:3180  45					inc	bp
020A:3181  52					push	dx
020A:3182  2D 3037				sub	ax,3037h
020A:3185  39 44 42				cmp	[si+42h],ax
020A:3188  37					aaa				; Ascii adjust
020A:3189  35 4238				xor	ax,4238h
020A:318C  37					aaa				; Ascii adjust
020A:318D  00 4E 55				add	[bp+55h],cl
020A:3190  4D					dec	bp
020A:3191  42					inc	dx
020A:3192  45					inc	bp
020A:3193  52					push	dx
020A:3194  5F					pop	di
020A:3195  4F					dec	di
020A:3196  46					inc	si
020A:3197  5F					pop	di
020A:3198  50					push	ax
020A:3199  52					push	dx
020A:319A  4F					dec	di
020A:319B  43					inc	bx
020A:319C  45					inc	bp
020A:319D  53					push	bx
020A:319E  53					push	bx
020A:319F  4F					dec	di
020A:31A0  52					push	dx
020A:31A1  53					push	bx
020A:31A2  3D 0031				cmp	ax,31h
020A:31A5  4F					dec	di
020A:31A6  53					push	bx
020A:31A7  3D 6957				cmp	ax,6957h
020A:31AA  6E					db	6Eh
020A:31AB  64					db	64h
020A:31AC  6F					db	6Fh
020A:31AD  77 73				ja	$+75h			; Jump if above
020A:31AF  5F					pop	di
020A:31B0  4E					dec	si
020A:31B1  54					push	sp
020A:31B2  00 50 41				add	[bx+si+41h],dl
020A:31B5  54					push	sp
020A:31B6  48					dec	ax
020A:31B7  3D 3A43				cmp	ax,3A43h
020A:31BA  5C					pop	sp
020A:31BB  57					push	di
020A:31BC  49					dec	cx
020A:31BD  4E					dec	si
020A:31BE  44					inc	sp
020A:31BF  4F					dec	di
020A:31C0  57					push	di
020A:31C1  53					push	bx
020A:31C2  5C					pop	sp
020A:31C3  73 79				jnc	$+7Bh			; Jump if carry=0
020A:31C5  73 74				jnc	$+76h			; Jump if carry=0
020A:31C7  65					db	65h
020A:31C8  6D					db	6Dh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 105

020A:31C9  33 32				xor	si,[bp+si]
020A:31CB  3B 43 3A				cmp	ax,[bp+di+3Ah]
020A:31CE  5C					pop	sp
020A:31CF  57					push	di
020A:31D0  49					dec	cx
020A:31D1  4E					dec	si
020A:31D2  44					inc	sp
020A:31D3  4F					dec	di
020A:31D4  57					push	di
020A:31D5  53					push	bx
020A:31D6  3B 43 3A				cmp	ax,[bp+di+3Ah]
020A:31D9  5C					pop	sp
020A:31DA  57					push	di
020A:31DB  49					dec	cx
020A:31DC  4E					dec	si
020A:31DD  44					inc	sp
020A:31DE  4F					dec	di
020A:31DF  57					push	di
020A:31E0  53					push	bx
020A:31E1  5C					pop	sp
020A:31E2  53					push	bx
020A:31E3  79 73				jns	$+75h			; Jump if not sign
020A:31E5  74 65				jz	$+67h			; Jump if zero
020A:31E7  336D			data_326	dw	336Dh
020A:31E9  5C32			data_327	dw	5C32h
020A:31EB  57					push	di
020A:31EC  62					db	62h
020A:31ED  65					db	65h
020A:31EE  6D					db	6Dh
020A:31EF  00 50 41				add	[bx+si+41h],dl
020A:31F2  54					push	sp
020A:31F3  48					dec	ax
020A:31F4  45					inc	bp
020A:31F5  58					pop	ax
020A:31F6  54					push	sp
020A:31F7  3D 432E				cmp	ax,432Eh
020A:31FA  4F					dec	di
020A:31FB  4D					dec	bp
020A:31FC  3B 2E 5845				cmp	bp,word ptr ds:[5845h]	; (020A:5845=9D00h)
020A:3200  45					inc	bp
020A:3201  3B 2E 4142				cmp	bp,word ptr ds:[4142h]	; (020A:4142=7541h)
020A:3205  54					push	sp
020A:3206  3B 2E 4D43				cmp	bp,word ptr ds:[4D43h]	; (020A:4D43=8A00h)
020A:320A  44					inc	sp
020A:320B  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020A:4256=8003h)
020A:320F  53					push	bx
020A:3210  3B 2E 4256				cmp	bp,word ptr ds:[4256h]	; (020A:4256=8003h)
020A:3214  45					inc	bp
020A:3215  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020A:534A=36BAh)
020A:3219  3B 2E 534A				cmp	bp,word ptr ds:[534Ah]	; (020A:534A=36BAh)
020A:321D  45					inc	bp
020A:321E  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=3E80h)
020A:3222  46					inc	si
020A:3223  3B 2E 5357				cmp	bp,word ptr ds:[5357h]	; (020A:5357=3E80h)
020A:3227  48					dec	ax
020A:3228  00 50 52				add	[bx+si+52h],dl
020A:322B  4F					dec	di
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 106

020A:322C  43					inc	bx
020A:322D  45					inc	bp
020A:322E  53					push	bx
020A:322F  53					push	bx
020A:3230  4F					dec	di
020A:3231  52			data_330	db	52h
020A:3232  5F					pop	di
020A:3233  41			data_331	db	41h
020A:3234  52 43 48 49 54 45	data_332	db	'RCHITECTURE=x86', 0
020A:323A  43 54 55 52 45 3D
020A:3240  78 38 36 00
020A:3244  50					push	ax
020A:3245  52					push	dx
020A:3246  4F					dec	di
020A:3247  43					inc	bx
020A:3248  45					inc	bp
020A:3249  53					push	bx
020A:324A  53					push	bx
020A:324B  4F					dec	di
020A:324C  52					push	dx
020A:324D  5F					pop	di
020A:324E  49					dec	cx
020A:324F  44					inc	sp
020A:3250  45					inc	bp
020A:3251  4E					dec	si
020A:3252  54					push	sp
020A:3253  49					dec	cx
020A:3254  46					inc	si
020A:3255  49					dec	cx
020A:3256  45					inc	bp
020A:3257  52					push	dx
020A:3258  3D 3878				cmp	ax,3878h
020A:325B  36					db	36h
020A:325C  20 46 61				and	[bp+61h],al
020A:325F  6D					db	6Dh
020A:3260  69					db	69h
020A:3261  6C					db	6Ch
020A:3262  79 20				jns	$+22h			; Jump if not sign
020A:3264  36: 20 4D 6F				and	ss:[di+6Fh],cl
020A:3268  64					db	64h
020A:3269  65					db	65h
020A:326A  6C					db	6Ch
020A:326B  20 31				and	[bx+di],dh
020A:326D  34 32				xor	al,32h			; '2'
020A:326F  20 53 74				and	[bp+di+74h],dl
020A:3272  65					db	65h
020A:3273  70 70				jo	$+72h			; Jump if overflow=1
020A:3275  69					db	69h
020A:3276  6E					db	6Eh
020A:3277  2067			data_333	dw	2067h
020A:3279  31 30				xor	[bx+si],si
020A:327B  2C 20				sub	al,20h			; ' '
020A:327D  47			data_334	db	47h
020A:327E  65			data_335	db	65h
020A:327F  6E 75 69 6E 65 49	data_336	db	'nuineIntel', 0
020A:3285  6E 74 65 6C 00
020A:328A  50					push	ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 107

020A:328B  52					push	dx
020A:328C  4F					dec	di
020A:328D  43					inc	bx
020A:328E  45					inc	bp
020A:328F  53					push	bx
020A:3290  53					push	bx
020A:3291  4F					dec	di
020A:3292  52					push	dx
020A:3293  5F					pop	di
020A:3294  4C					dec	sp
020A:3295  45					inc	bp
020A:3296  56					push	si
020A:3297  45					inc	bp
020A:3298  4C					dec	sp
020A:3299  3D 0036				cmp	ax,36h
020A:329C  50					push	ax
020A:329D  52					push	dx
020A:329E  4F					dec	di
020A:329F  43					inc	bx
020A:32A0  45					inc	bp
020A:32A1  53					push	bx
020A:32A2  53					push	bx
020A:32A3  4F					dec	di
020A:32A4  52					push	dx
020A:32A5  5F					pop	di
020A:32A6  52					push	dx
020A:32A7  45					inc	bp
020A:32A8  56					push	si
020A:32A9  49					dec	cx
020A:32AA  53					push	bx
020A:32AB  49					dec	cx
020A:32AC  4F					dec	di
020A:32AD  4E					dec	si
020A:32AE  3D 6538				cmp	ax,6538h
020A:32B1  30 61 00		;*		xor	[bx+di+0],ah
020A:32B1  30 61 00				db	 30h, 61h, 00h
020A:32B4  50					push	ax
020A:32B5  52					push	dx
020A:32B6  4F					dec	di
020A:32B7  47					inc	di
020A:32B8  52					push	dx
020A:32B9  41					inc	cx
020A:32BA  4D					dec	bp
020A:32BB  46					inc	si
020A:32BC  49					dec	cx
020A:32BD  4C					dec	sp
020A:32BE  45					inc	bp
020A:32BF  53					push	bx
020A:32C0  3D 3A43				cmp	ax,3A43h
020A:32C3  5C					pop	sp
020A:32C4  50					push	ax
020A:32C5  52					push	dx
020A:32C6  4F					dec	di
020A:32C7  47					inc	di
020A:32C8  52					push	dx
020A:32C9  41					inc	cx
020A:32CA  7E 31				jle	$+33h			; Jump if < or =
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 108

020A:32CC  00 50 52				add	[bx+si+52h],dl
020A:32CF  4F					dec	di
020A:32D0  4D					dec	bp
020A:32D1  50					push	ax
020A:32D2  54					push	sp
020A:32D3  3D 5024				cmp	ax,5024h
020A:32D6  24 47				and	al,47h			; 'G'
020A:32D8  00 53 45				add	[bp+di+45h],dl
020A:32DB  53					push	bx
020A:32DC  53					push	bx
020A:32DD  49					dec	cx
020A:32DE  4F					dec	di
020A:32DF  4E					dec	si
020A:32E0  4E					dec	si
020A:32E1  41					inc	cx
020A:32E2  4D					dec	bp
020A:32E3  45					inc	bp
020A:32E4  3D 6F43				cmp	ax,6F43h
020A:32E7  6E					db	6Eh
020A:32E8  73 6F				jnc	$+71h			; Jump if carry=0
020A:32EA  6C					db	6Ch
020A:32EB  65					db	65h
020A:32EC  00 53 59				add	[bp+di+59h],dl
020A:32EF  53					push	bx
020A:32F0  54					push	sp
020A:32F1  45					inc	bp
020A:32F2  4D					dec	bp
020A:32F3  44					inc	sp
020A:32F4  52					push	dx
020A:32F5  49					dec	cx
020A:32F6  56					push	si
020A:32F7  45					inc	bp
020A:32F8  3D 3A43				cmp	ax,3A43h
020A:32FB  00 53 59				add	[bp+di+59h],dl
020A:32FE  53					push	bx
020A:32FF  54					push	sp
020A:3300  45					inc	bp
020A:3301  4D					dec	bp
020A:3302  52					push	dx
020A:3303  4F					dec	di
020A:3304  4F					dec	di
020A:3305  54					push	sp
020A:3306  3D 3A43				cmp	ax,3A43h
020A:3309  5C					pop	sp
020A:330A  57					push	di
020A:330B  49					dec	cx
020A:330C  4E					dec	si
020A:330D  44					inc	sp
020A:330E  4F					dec	di
020A:330F  57					push	di
020A:3310  53					push	bx
020A:3311  00 54 45				add	[si+45h],dl
020A:3314  4D					dec	bp
020A:3315  50					push	ax
020A:3316  3D 3A43				cmp	ax,3A43h
020A:3319  5C					pop	sp
020A:331A  57					push	di
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 109

020A:331B  49					dec	cx
020A:331C  4E					dec	si
020A:331D  44					inc	sp
020A:331E  4F					dec	di
020A:331F  57					push	di
020A:3320  53					push	bx
020A:3321  5C					pop	sp
020A:3322  54					push	sp
020A:3323  45					inc	bp
020A:3324  4D					dec	bp
020A:3325  50					push	ax
020A:3326  00 54 4D				add	[si+4Dh],dl
020A:3329  50					push	ax
020A:332A  3D 3A43				cmp	ax,3A43h
020A:332D  5C					pop	sp
020A:332E  57					push	di
020A:332F  49					dec	cx
020A:3330  4E					dec	si
020A:3331  44					inc	sp
020A:3332  4F					dec	di
020A:3333  57					push	di
020A:3334  53					push	bx
020A:3335  5C					pop	sp
020A:3336  54					push	sp
020A:3337  45					inc	bp
020A:3338  4D					dec	bp
020A:3339  50					push	ax
020A:333A  00 55 53				add	[di+53h],dl
020A:333D  45					inc	bp
020A:333E  52					push	dx
020A:333F  44					inc	sp
020A:3340  4F					dec	di
020A:3341  4D					dec	bp
020A:3342  41					inc	cx
020A:3343  49					dec	cx
020A:3344  4E					dec	si
020A:3345  3D 5355				cmp	ax,5355h
020A:3348  45					inc	bp
020A:3349  52					push	dx
020A:334A  2D 3037				sub	ax,3037h
020A:334D  39 44 42				cmp	[si+42h],ax
020A:3350  37					aaa				; Ascii adjust
020A:3351  35 4238				xor	ax,4238h
020A:3354  37					aaa				; Ascii adjust
020A:3355  00 55 53				add	[di+53h],dl
020A:3358  45					inc	bp
020A:3359  52					push	dx
020A:335A  4E					dec	si
020A:335B  41					inc	cx
020A:335C  4D					dec	bp
020A:335D  45					inc	bp
020A:335E  3D 6441				cmp	ax,6441h
020A:3361  6D					db	6Dh
020A:3362  69					db	69h
020A:3363  6E					db	6Eh
020A:3364  00 55 53				add	[di+53h],dl
020A:3367  45					inc	bp
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 110

020A:3368  52					push	dx
020A:3369  50					push	ax
020A:336A  52					push	dx
020A:336B  4F					dec	di
020A:336C  46					inc	si
020A:336D  49					dec	cx
020A:336E  4C					dec	sp
020A:336F  45					inc	bp
020A:3370  3D 3A43				cmp	ax,3A43h
020A:3373  5C					pop	sp
020A:3374  44					inc	sp
020A:3375  4F					dec	di
020A:3376  43					inc	bx
020A:3377  55					push	bp
020A:3378  4D					dec	bp
020A:3379  45					inc	bp
020A:337A  7E 31				jle	$+33h			; Jump if < or =
020A:337C  5C					pop	sp
020A:337D  41					inc	cx
020A:337E  64					db	64h
020A:337F  6D					db	6Dh
020A:3380  69					db	69h
020A:3381  6E					db	6Eh
020A:3382  00 42 4C				add	[bp+si+4Ch],al
020A:3385  41					inc	cx
020A:3386  53					push	bx
020A:3387  54					push	sp
020A:3388  45					inc	bp
020A:3389  52					push	dx
020A:338A  3D 3241				cmp	ax,3241h
020A:338D  32 30				xor	dh,[bx+si]
020A:338F  20 49 35				and	[bx+di+35h],cl
020A:3392  20 44 31				and	[si+31h],al
020A:3395  20 50 33				and	[bx+si+33h],dl
020A:3398  33 30				xor	si,[bx+si]
020A:339A  20 54 33				and	[si+33h],dl
020A:339D  00 00				add	[bx+si],al
020A:339F  01 00				add	[bx+si],ax
020A:33A1  5A					pop	dx
020A:33A2  3A 5C 53				cmp	bl,[si+53h]
020A:33A5  52					push	dx
020A:33A6  2E					db	2Eh
020A:33A7  45					inc	bp
020A:33A8  58					pop	ax
020A:33A9  45					inc	bp
020A:33AA  00 1E 5053				add	data_556,bl		; (020A:5053=20h)
020A:33AE  B4 51				mov	ah,51h			; 'Q'
020A:33B0  5A					pop	dx
020A:33B1  46					inc	si
020A:33B2  05 9AB9				add	ax,9AB9h
020A:33B5  8E DB				mov	ds,bx
020A:33B7  C5 53 52				lds	dx,dword ptr [bp+di+52h]	; Load 32 bit ptr
020A:33BA  00 89 5807				add	byte ptr ds:[5807h][bx+di],cl	; (43A6:5807=0FFh)
020A:33BE  5B					pop	bx
020A:33BF  1F					pop	ds
020A:33C0  CD 20				int	20h			; DOS program terminate
020A:33C2  FF 9F 9A00				call	dword ptr ds:[9A00h][bx]	;*(5001:9A00=0FFFFh)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 111

020A:33C6  F0					db	0F0h
020A:33C7  FE					db	0FEh
020A:33C8  1D DEF0				sbb	ax,0DEF0h
020A:33CB  01 0E 4B04				add	word ptr ds:[4B04h],cx	; (5001:4B04=0FFFFh)
020A:33CF  01 0E 5604				add	word ptr ds:[5604h],cx	; (5001:5604=0FFFFh)
020A:33D3  01 0E 0E04				add	word ptr ds:[0E04h],cx	; (5001:0E04=0FFFFh)
020A:33D7  04 01				add	al,1
020A:33D9  01 01				add	[bx+di],ax
020A:33DB  00 02				add	[bp+si],al
020A:33DD  000F[03]				db	15 dup (3)
020A:33EC  10 05				adc	[di],al
020A:33EE  3C 02				cmp	al,2
020A:33F0  CA 141C				retf	141Ch
							                        ;* No entry point to code
020A:33F3  00 18				add	[bx+si],bl
020A:33F5  00 46 05				add	[bp+5],al
020A:33F8  FF					db	0FFh
020A:33F9  FF					db	0FFh
020A:33FA  FF					db	0FFh
020A:33FB  FF 00				inc	word ptr [bx+si]
020A:33FD  00 00				add	[bx+si],al
020A:33FF  00 05				add	[di],al
020A:3401  000F[00]				db	15 dup (0)
020A:3410  CD 21				int	21h			; DOS Services  ah=function 00h
										;  terminate, cs=progm seg prefx
020A:3412  CB					retf				; Return far
020A:3413  000A[00]				db	10 dup (0)
020A:341D  20					db	20h
020A:341E  2020			data_342	dw	2020h
020A:3420  2020			data_343	dw	2020h
020A:3422  2020			data_344	dw	2020h
020A:3424  20 20				and	[bx+si],ah
020A:3426  20 20				and	[bx+si],ah
020A:3428  00					db	0
020A:3429  00					db	0
020A:342A  00 00				add	[bx+si],al
020A:342C  00 20				add	[bx+si],ah
020A:342E  000A[20]				db	10 dup (20h)
020A:3438  0009[00]				db	9 dup (0)
020A:3441  0D 2020				or	ax,2020h
020A:3444  20 53 45				and	[bp+di+45h],dl
020A:3447  2054			data_347	dw	2054h
020A:3449  42					inc	dx
020A:344A  414C			data_348	dw	414Ch
020A:344C  5453			data_349	dw	5453h
020A:344E  5245			data_350	dw	5245h
020A:3450  413D			data_351	dw	413Dh
020A:3452  0D30			data_352	dw	0D30h
020A:3454  A8AD			data_353	dw	0A8ADh
020A:3456  20A5			data_354	dw	20A5h
020A:3458  A4			data_355	db	0A4h
020A:3459  AB			data_356	db	0ABh
020A:345A  EF					out	dx,ax			; port 1, DMA-1 bas&cnt ch 0
020A:345B  20 A1 A7A2				and	data_655[bx+di],ah	; (020A:A7A2=26h)
020A:345F  AE					scasb				; Scan es:[di] for al
020A:3460  A2 A3AE				mov	data_643,al		; (020A:A3AE=6)
020A:3463  AE					scasb				; Scan es:[di] for al
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 112

020A:3464  20 AF E0AE				and	byte ptr ds:[0E0AEh][bx],ch	; (020A:E0AE=9Ah)
020A:3468  A0E2			data_362	dw	0A0E2h
020A:346A  A220			data_363	dw	0A220h
020A:346C  AEA2			data_364	dw	0AEA2h
020A:346E  A0A4			data_365	dw	0A0A4h
020A:3470  A22D			data_366	dw	0A22Dh
020A:3472  A2EB			data_367	dw	0A2EBh
020A:3474  A4AE			data_368	dw	0A4AEh
020A:3476  20A0			data_369	dw	20A0h
020A:3478  4253			data_370	dw	4253h
020A:347A  202C			data_371	dw	202Ch
020A:347C  A0AD			data_372	dw	0A0ADh
020A:347E  E0AF			data_373	dw	0E0AFh
020A:3480  ACA8			data_374	dw	0ACA8h
020A:3482  E0A5			data_375	dw	0E0A5h
020A:3484  0D3A			data_376	dw	0D3Ah
020A:3486  EC					in	al,dx			; port 1, DMA-1 bas&cnt ch 0
020A:3487  0D EBE0				or	ax,0EBE0h
020A:348A  A5			data_378	db	0A5h
020A:348B  0D 0000				or	ax,0
020A:348E  0007[0000]		data_380	dw	7 dup (0)
020A:349C  00			data_381	db	0
020A:349D  00					db	0
020A:349E  00					db	0
020A:349F  00					db	0
020A:34A0  00					db	0
020A:34A1  00					db	0
020A:34A2  00					db	0
020A:34A3  00					db	0
020A:34A4  00					db	0
020A:34A5  00					db	0
020A:34A6  00					db	0
020A:34A7  00					db	0
020A:34A8  00					db	0
020A:34A9  00					db	0
020A:34AA  00					db	0
020A:34AB  00					db	0
020A:34AC  00					db	0
020A:34AD  00					db	0
020A:34AE  00					db	0
020A:34AF  00					db	0
020A:34B0  00					db	0
020A:34B1  00					db	0
020A:34B2  00					db	0
020A:34B3  00					db	0
020A:34B4  00					db	0
020A:34B5  00					db	0
020A:34B6  00					db	0
020A:34B7  00					db	0
020A:34B8  00					db	0
020A:34B9  00					db	0
020A:34BA  00					db	0
020A:34BB  00					db	0
020A:34BC  00					db	0
020A:34BD  00 00				add	[bx+si],al

020A:34BF			locloop_333:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 113

020A:34BF  00 53 6F				add	[bp+di+6Fh],dl
020A:34C2  75 72				jnz	$+74h			; Jump if not zero
020A:34C4  63					db	63h
020A:34C5  65					db	65h
020A:34C6  72 20				jc	$+22h			; Jump if carry Set
020A:34C8  2D 5620				sub	ax,5620h
020A:34CB  20 43 6F				and	[bp+di+6Fh],al
020A:34CE  6D					db	6Dh
020A:34CF  6D					db	6Dh
020A:34D0  75 6E				jnz	$+70h			; Jump if not zero
020A:34D2  69					db	69h
020A:34D3  63					db	63h
020A:34D4  61					db	61h
020A:34D5  74 69				jz	$+6Bh			; Jump if zero
020A:34D7  6F					db	6Fh
020A:34D8  6E					db	6Eh
020A:34D9  73 2C				jnc	$+2Eh			; Jump if carry=0
020A:34DB  20 49 6E				and	[bx+di+6Eh],cl
020A:34DE  63					db	63h
020A:34DF  202E 6F43		data_383	dw	202Eh, 6F43h
020A:34E3  70 79				jo	$+7Bh			; Jump if overflow=1
020A:34E5  72 69				jc	$+6Bh			; Jump if carry Set
020A:34E7  67					db	67h
020A:34E8  68					db	68h
020A:34E9  74 20				jz	$+22h			; Jump if zero
020A:34EB  31 39				xor	[bx+di],di
020A:34ED  38 38				cmp	[bx+si],bh
020A:34EF  2D 3931				sub	ax,3931h
020A:34F2  39 33				cmp	[bp+di],si
020A:34F4  20 56 35				and	[bp+35h],dl
020A:34F7  2E: 31 30				xor	cs:[bx+si],si
020A:34FA  20 20				and	[bx+si],ah
020A:34FC  73 2F				jnc	$+31h			; Jump if carry=0
020A:34FE  6E					db	6Eh
020A:34FF  20 42 33				and	[bp+si+33h],al
020A:3502  31 31				xor	[bx+di],si
020A:3504  33 31				xor	si,[bx+di]
020A:3506  32 2D				xor	ch,[di]
020A:3508  58					pop	ax
020A:3509  42					inc	dx
020A:350A  49					dec	cx
020A:350B  4F					dec	di
020A:350C  46					inc	si
020A:350D  30 36 322F				xor	byte ptr ds:[322Fh],dh	; (020A:322F=53h)
020A:3511  33 2F				xor	bp,[bx]
020A:3513  39 39				cmp	[bx+di],di
020A:3515  00 FC				add	ah,bh
020A:3517  EA 2079:4220		;*		jmp	far ptr loc_1924	;*(2079:4220)
020A:3517  EA					db	0EAh
020A:3518  4220 2079				dw	4220h, 2079h
020A:351C  46 72 61 6E 6B 20			db	'Frank van Gilluwe (09/14/93,15:2'
020A:3522  76 61 6E 20 47 69
020A:3528  6C 6C 75 77 65 20
020A:352E  28 30 39 2F 31 34
020A:3534  2F 39 33 2C 31 35
020A:353A  3A 32
020A:353C  30 3A 33 30 29			db	'0:30)'
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 114

020A:3541  000F[00]				db	15 dup (0)
020A:3550  46					inc	si
020A:3551  05 2E8D				add	ax,2E8Dh
020A:3554  00 00				add	[bx+si],al
020A:3556  46					inc	si
020A:3557  32 00				xor	al,[bx+si]
020A:3559  2E: 8C 06 0090			mov	word ptr cs:[90h],es	; (020A:0090=1FBFh)
020A:355E  E8 3857				call	sub_70			; (6DB8)
020A:3561  9A 6E14:4E64		;*		call	far ptr sub_174		;*(6E14:4E64)
020A:3561  9A					db	9Ah
020A:3562  4E64 6E14				dw	4E64h, 6E14h
020A:3566  E8 3813				call	sub_69			; (6D7C)
020A:3569  9A 6E14:54B0		;*		call	far ptr sub_176		;*(6E14:54B0)
020A:3569  9A					db	9Ah
020A:356A  54B0 6E14				dw	54B0h, 6E14h
020A:356E  E8 8097				call	sub_109			; (B608)
020A:3571  BE 0080				mov	si,80h
020A:3574  E8 3C0E				call	sub_74			; (7185)
020A:3577  2E: A1 0090				mov	ax,word ptr cs:[90h]	; (020A:0090=1FBFh)
020A:357B  A3 5618				mov	data_569,ax		; (020A:5618=0F727h)
020A:357E  BF 5156				mov	di,5156h
020A:3581  03 FE				add	di,si
020A:3583  E8 3C1A				call	sub_79			; (71A0)
020A:3586  26: 80 85 0100 CD			add	byte ptr es:[100h][di],0CDh	; (020A:0100=28h)
020A:358C  C6 06 2B36 00			mov	data_227,0		; (020A:2B36=0ADh)
020A:3591  83 3E 1321 00			cmp	data_146,0		; (020A:1321=0)
020A:3596  74 14				je	loc_334			; Jump if equal
020A:3598  BE 1321				mov	si,1321h
020A:359B  8B C6				mov	ax,si
020A:359D  05 0004				add	ax,4
020A:35A0  A3			data_386	db	0A3h
020A:35A1  509E			data_387	dw	509Eh
020A:35A3  E8 067E				call	sub_31			; (3C24)
020A:35A6  72 04				jc	loc_334			; Jump if carry Set
020A:35A8  89 16 131F				mov	data_145,dx		; (020A:131F=0)
020A:35AC			loc_334:
020A:35AC  B9 0047				mov	cx,47h
020A:35AF  81 E9 003A				sub	cx,3Ah
020A:35B3  BF 01C5				mov	di,1C5h
020A:35B6  BE 003A				mov	si,3Ah
020A:35B9  B8 0556				mov	ax,556h
020A:35BC  8E D8				mov	ds,ax
020A:35BE  E8 3BDC				call	sub_78			; (719D)
020A:35C1  FC					cld				; Clear direction
020A:35C2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:35C4  E8 3BBE				call	sub_74			; (7185)
020A:35C7  9A 6E14:5284		;*		call	far ptr sub_175		;*(6E14:5284)
020A:35C7  9A					db	9Ah
020A:35C8  5284 6E14				dw	5284h, 6E14h
020A:35CC  B6 00				mov	dh,0
020A:35CE  E8 20C7				call	sub_46			; (5698)
020A:35D1  B4 01				mov	ah,1
020A:35D3  9A			data_388	db	9Ah
020A:35D4  8C			data_389	db	8Ch
020A:35D5  1032			data_390	dw	1032h
020A:35D7  BF15			data_391	dw	0BF15h
020A:35D9  1141			data_392	dw	1141h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 115

020A:35DB  EF81			data_393	dw	0EF81h
020A:35DD  23			data_394	db	23h
020A:35DE  10			data_395	db	10h
020A:35DF  9A			data_396	db	9Ah
020A:35E0  E4 08				in	al,8			; port 8, DMA-1 status reg
020A:35E2  10 15				adc	[di],dl
020A:35E4  8C			data_399	db	8Ch
020A:35E5  C8					db	0C8h
020A:35E6  9A			data_400	db	9Ah
020A:35E7  E0 54				loopnz	$+56h			; Loop if zf=0, cx>0

020A:35E9  6E14			data_402	dw	6E14h
020A:35EB  3E80			data_403	dw	3E80h
020A:35ED  44			data_404	db	44h
020A:35EE  2B			data_405	db	2Bh
020A:35EF  02 74 07				add	dh,[si+7]
020A:35F2  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (ss:2B40=0)
020A:35F7  75 42				jne	loc_336			; Jump if not equal
020A:35F9			loc_335:
020A:35F9  E8 3BA1				call	sub_78			; (719D)
020A:35FC  BF 00E8				mov	di,0E8h
020A:35FF  B0 2A				mov	al,2Ah			; '*'
020A:3601  B9 0029				mov	cx,29h
020A:3604  FC					cld				; Clear direction
020A:3605  F3/ BFAA		data_413	dw	0BFAAh
020A:3608  0188			data_414	dw	188h
020A:360A  29B9			data_415	dw	29B9h
020A:360C  00 F3				add	bl,dh
020A:360E  BEAA			data_416	dw	0BEAAh
020A:3610  6F					db	6Fh
020A:3611  00 BF 0138				add	byte ptr ds:[138h][bx],bh	; (ss:0138=42h)
020A:3615  B9 0027				mov	cx,27h
020A:3618  A4F3			data_418	dw	0A4F3h
020A:361A  1E8B			data_419	dw	1E8Bh
020A:361C  1326			data_420	dw	1326h
020A:361E  09A0			data_421	dw	9A0h
020A:3620  8812			data_422	dw	8812h
020A:3622  47					inc	di
020A:3623  59					pop	cx
020A:3624  88 47 46				mov	[bx+46h],al
020A:3627  88 47 5B				mov	[bx+5Bh],al
020A:362A  B0 07				mov	al,7
020A:362C  88 47 57				mov	[bx+57h],al
020A:362F  88 47 58				mov	[bx+58h],al
020A:3632  88 47 5A				mov	[bx+5Ah],al
020A:3635  88 47 42				mov	[bx+42h],al
020A:3638  88 47 45				mov	[bx+45h],al
020A:363B			loc_336:
020A:363B  9A 1510:2B34		;*		call	far ptr sub_141		;*(1510:2B34)
020A:363B  9A					db	9Ah
020A:363C  2B34 1510				dw	2B34h, 1510h
020A:3640  E8 1F9D				call	sub_45			; (55E0)
020A:3643  E8 7C8A				call	sub_106			; (B2D0)
020A:3646  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (ss:2B40=0)
020A:364B  75 14				jne	loc_337			; Jump if not equal
020A:364D  53					push	bx
020A:364E  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=41B5h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 116

020A:3652  C6 47 41 07				mov	byte ptr [bx+41h],7
020A:3656  C6 06 1207 07			mov	byte ptr ds:[1207h],7	; (ss:1207=6)
020A:365B  C6 06 1208 07			mov	byte ptr ds:[1208h],7	; (ss:1208=8Eh)
020A:3660  5B					pop	bx
020A:3661			loc_337:
020A:3661  9A 1510:7340		;*		call	far ptr sub_173		;*(1510:7340)
020A:3661  9A					db	9Ah
020A:3662  7340 1510				dw	7340h, 1510h
020A:3666  80 3E 4103 00			cmp	byte ptr ds:[4103h],0	; (ss:4103=0B7h)
020A:366B  74 42				je	loc_339			; Jump if equal
020A:366D  BF 4103				mov	di,4103h
020A:3670  B0 00				mov	al,0
020A:3672  9A 1510:2724		;*		call	far ptr sub_137		;*(1510:2724)
020A:3672  9A					db	9Ah
020A:3673  2724 1510				dw	2724h, 1510h
020A:3677  9A 1510:27AC		;*		call	far ptr sub_138		;*(1510:27AC)
020A:3677  9A					db	9Ah
020A:3678  27AC 1510				dw	27ACh, 1510h
020A:367C  A2 327E				mov	byte ptr ds:[327Eh],al	; (ss:327E=0B0h)
020A:367F  3C 00				cmp	al,0
020A:3681  74 2C				je	loc_339			; Jump if equal
020A:3683  50					push	ax
020A:3684  57					push	di
020A:3685  BE 4103				mov	si,4103h
020A:3688  BF 31F0				mov	di,31F0h
020A:368B  8B CB				mov	cx,bx
020A:368D  FC					cld				; Clear direction
020A:368E  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:3690  5F					pop	di
020A:3691  4F					dec	di
020A:3692  9A 1510:7270		;*		call	far ptr sub_172		;*(1510:7270)
020A:3692  9A					db	9Ah
020A:3693  7270 1510				dw	7270h, 1510h
020A:3697  58					pop	ax
020A:3698  83 FB 0C				cmp	bx,0Ch
020A:369B  77 0D				ja	loc_338			; Jump if above
020A:369D  3C 01				cmp	al,1
020A:369F  74 22				je	loc_341			; Jump if equal
020A:36A1  80 3E 438F 01			cmp	byte ptr ds:[438Fh],1	; (ss:438F=0FFh)
020A:36A6  75 10				jne	loc_340			; Jump if not equal
020A:36A8  EB 4B				jmp	short loc_345		; (36F5)
020A:36AA			loc_338:
020A:36AA  C6 06 327E 00			mov	byte ptr ds:[327Eh],0	; (ss:327E=0B0h)
020A:36AF			loc_339:
020A:36AF  80 3E 438F 01			cmp	byte ptr ds:[438Fh],1	; (ss:438F=0FFh)
020A:36B4  75 02				jne	loc_340			; Jump if not equal
020A:36B6  EB 45				jmp	short loc_346		; (36FD)
020A:36B8			loc_340:
020A:36B8  BD 4103				mov	bp,4103h
020A:36BB  BE 4381				mov	si,4381h
020A:36BE  9A 1510:4160		;*		call	far ptr sub_157		;*(1510:4160)
020A:36BE  9A					db	9Ah
020A:36BF  4160 1510				dw	4160h, 1510h
020A:36C3			loc_341:
020A:36C3  B4 2A				mov	ah,2Ah			; '*'
020A:36C5  E8 2134				call	sub_49			; (57FC)
020A:36C8  E8 1D89				call	sub_38			; (5454)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 117

020A:36CB  BA 4103				mov	dx,4103h
020A:36CE  B4 3D				mov	ah,3Dh			; '='
020A:36D0  B0 00				mov	al,0
020A:36D2  B9 0000				mov	cx,0
020A:36D5  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:36D7  A3 4150				mov	word ptr ds:[4150h],ax	; (ss:4150=8E2Eh)
020A:36DA  73 12				jnc	loc_344			; Jump if carry=0
020A:36DC  80 3E 327E 01			cmp	byte ptr ds:[327Eh],1	; (ss:327E=0B0h)
020A:36E1  77 09				ja	loc_343			; Jump if above
020A:36E3  75 05				jnz	loc_342			; Jump if not zero
020A:36E5  B3 01				mov	bl,1
020A:36E7  E9 3430				jmp	loc_982			; (6B1A)
020A:36EA			loc_342:
020A:36EA  EB 11				jmp	short loc_346		; (36FD)
020A:36EC			loc_343:
020A:36EC  EB 07				jmp	short loc_345		; (36F5)
020A:36EE			loc_344:
020A:36EE  9A 1510:0B10		;*		call	far ptr sub_132		;*(1510:0B10)
020A:36EE  9A					db	9Ah
020A:36EF  0B10 1510				dw	0B10h, 1510h
020A:36F3  EB 08				jmp	short loc_346		; (36FD)
020A:36F5			loc_345:
020A:36F5  E8 5E1C				call	sub_97			; (9514)
020A:36F8  73 03				jnc	loc_346			; Jump if carry=0
020A:36FA  E9 3546				jmp	loc_994			; (6C43)
020A:36FD			loc_346:
020A:36FD  C6 06 2B36 01			mov	byte ptr ds:[2B36h],1	; (ss:2B36=75h)
020A:3702  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (ss:327D=15h)
020A:3706  E8 20F3				call	sub_49			; (57FC)
020A:3709  E8 1D48				call	sub_38			; (5454)
020A:370C  80 3E 4F13 01			cmp	byte ptr ds:[4F13h],1	; (ss:4F13=0A3h)
020A:3711  75 08				jne	loc_347			; Jump if not equal
020A:3713  C6 06 4F13 00			mov	byte ptr ds:[4F13h],0	; (ss:4F13=0A3h)
020A:3718  E9 0E95				jmp	loc_526			; (45B0)
020A:371B			loc_347:
020A:371B  E8 3A7F				call	sub_78			; (719D)
020A:371E  2E: 80 3E 0098 01			cmp	byte ptr cs:[98h],1	; (020A:0098=0)
020A:3724  74 20				je	loc_351			; Jump if equal
020A:3726  B4 07				mov	ah,7
020A:3728  CD 21				int	21h			; DOS Services  ah=function 07h
										;  get keybd char al, no echo
020A:372A  3C 00				cmp	al,0
020A:372C  75 0D				jne	loc_349			; Jump if not equal
020A:372E  B4 07				mov	ah,7
020A:3730  CD 21				int	21h			; DOS Services  ah=function 07h
										;  get keybd char al, no echo
020A:3732  3C 3B				cmp	al,3Bh			; ';'
020A:3734  75 03				jne	loc_348			; Jump if not equal
020A:3736  E9 188C				jmp	loc_638			; (4FC5)
020A:3739			loc_348:
020A:3739  EB 3B				jmp	short loc_354		; (3776)
020A:373B			loc_349:
020A:373B  3C 3F				cmp	al,3Fh			; '?'
020A:373D  75 03				jne	loc_350			; Jump if not equal
020A:373F  E9 1883				jmp	loc_638			; (4FC5)
020A:3742			loc_350:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 118

020A:3742  3C 1B				cmp	al,1Bh
020A:3744  75 03				jne	loc_352			; Jump if not equal
020A:3746			loc_351:
020A:3746  E9 161C				jmp	loc_610			; (4D65)
020A:3749			loc_352:
020A:3749  3C 2B				cmp	al,2Bh			; '+'
020A:374B  75 03				jne	loc_353			; Jump if not equal
020A:374D  E9 19B5				jmp	loc_654			; (5105)
020A:3750			loc_353:
020A:3750  3C 80				cmp	al,80h
020A:3752  73 E5				jae	loc_348			; Jump if above or =
020A:3754  A8 40				test	al,40h			; '@'
020A:3756  74 E1				jz	loc_348			; Jump if zero
020A:3758  24 5F				and	al,5Fh			; '_'
020A:375A  B9 5069				mov	cx,5069h
020A:375D  81 E9 5050				sub	cx,5050h
020A:3761  BF 5050				mov	di,5050h
020A:3764  FC					cld				; Clear direction
020A:3765  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3767  E3 0D				jcxz	loc_354			; Jump if cx=0
020A:3769  4F					dec	di
020A:376A  81 EF 5050				sub	di,5050h
020A:376E  D1 E7				shl	di,1			; Shift w/zeros fill
020A:3770  81 C7 5069				add	di,5069h
020A:3774  FF 25				jmp	word ptr [di]		;*
020A:3776			loc_354:
020A:3776  9A 1510:2B10		;*		call	far ptr sub_140		;*(1510:2B10)
020A:3776  9A					db	9Ah
020A:3777  2B10 1510				dw	2B10h, 1510h
020A:377B  EB 9E				jmp	short loc_347		; (371B)
							                        ;* No entry point to code
020A:377D  E8 2020				call	sub_47			; (57A0)
020A:3780  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:3784  B4 22				mov	ah,22h			; '"'
020A:3786  E8 2073				call	sub_49			; (57FC)
020A:3789  E8 1CC8				call	sub_38			; (5454)
020A:378C  80 3E 1329 01			cmp	byte ptr ds:[1329h],1	; (ss:1329=0E9h)
020A:3791  75 30				jne	loc_357			; Jump if not equal
020A:3793  B4 02				mov	ah,2
020A:3795  32 FF				xor	bh,bh			; Zero register
020A:3797  BA 0500				mov	dx,500h
020A:379A  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:379A  9A					db	9Ah
020A:379B  2BA8 1510				dw	2BA8h, 1510h
020A:379F  BE 0623				mov	si,623h
020A:37A2  B9 0BC3				mov	cx,0BC3h
020A:37A5  81 E9 0623				sub	cx,623h
020A:37A9  49					dec	cx
020A:37AA  E8 39F3				call	sub_79			; (71A0)

020A:37AD			locloop_355:
020A:37AD  33 ED				xor	bp,bp			; Zero register
020A:37AF  26: 8A 14				mov	dl,es:[si]
020A:37B2  80 FA F4				cmp	dl,0F4h
020A:37B5  72 02				jb	loc_356			; Jump if below
020A:37B7  B2 20				mov	dl,20h			; ' '
020A:37B9			loc_356:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 119

020A:37B9  9A 1510:07A0		;*		call	far ptr sub_125		;*(1510:07A0)
020A:37B9  9A					db	9Ah
020A:37BA  07A0 1510				dw	7A0h, 1510h
020A:37BE  46					inc	si
020A:37BF  E2 EC				loop	locloop_355		; Loop if cx > 0

020A:37C1  EB 7C				jmp	short loc_366		; (383F)
020A:37C3			loc_357:
020A:37C3  E8 1CD2				call	sub_41			; (5498)
020A:37C6  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=19F9h)
020A:37CA  BF 0320				mov	di,320h
020A:37CD  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=777h)
020A:37D1  E8 39B4				call	sub_75			; (7188)
020A:37D4  BE 0623				mov	si,623h
020A:37D7  B9 0BC3				mov	cx,0BC3h
020A:37DA  81 E9 0623				sub	cx,623h
020A:37DE  B7 07				mov	bh,7
020A:37E0  FC					cld				; Clear direction

020A:37E1			locloop_358:
020A:37E1  8A DF				mov	bl,bh
020A:37E3  80 3C FE				cmp	byte ptr [si],0FEh
020A:37E6  75 0F				jne	loc_361			; Jump if not equal
020A:37E8  80 FF 07				cmp	bh,7
020A:37EB  75 04				jne	loc_359			; Jump if not equal
020A:37ED  B7 0F				mov	bh,0Fh
020A:37EF  EB 02				jmp	short loc_360		; (37F3)
020A:37F1			loc_359:
020A:37F1  B7 07				mov	bh,7
020A:37F3			loc_360:
020A:37F3  8A DF				mov	bl,bh
020A:37F5  EB 0F				jmp	short loc_362		; (3806)
020A:37F7			loc_361:
020A:37F7  80 3C F4				cmp	byte ptr [si],0F4h
020A:37FA  72 15				jb	loc_363			; Jump if below
020A:37FC  1E					push	ds
020A:37FD  E8 3985				call	sub_74			; (7185)
020A:3800  8A 1E 1207				mov	bl,byte ptr ds:[1207h]	; (ss:1207=6)
020A:3804  1F					pop	ds
020A:3805  FC					cld				; Clear direction
020A:3806			loc_362:
020A:3806  B0 20				mov	al,20h			; ' '
020A:3808  AA					stosb				; Store al to es:[di]
020A:3809  46					inc	si
020A:380A  26: 88 1D				mov	es:[di],bl
020A:380D  47					inc	di
020A:380E  49					dec	cx
020A:380F  EB 0E				jmp	short loc_364		; (381F)
020A:3811			loc_363:
020A:3811  80 3C 80				cmp	byte ptr [si],80h
020A:3814  72 09				jb	loc_364			; Jump if below
020A:3816  1E					push	ds
020A:3817  E8 396B				call	sub_74			; (7185)
020A:381A  8A 1E 1206				mov	bl,byte ptr ds:[1206h]	; (ss:1206=0)
020A:381E  1F					pop	ds
020A:381F			loc_364:
020A:381F  AC					lodsb				; String [si] to al
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 120

020A:3820  1E					push	ds
020A:3821  E8 3961				call	sub_74			; (7185)
020A:3824  80 3E 2B44 02			cmp	byte ptr ds:[2B44h],2	; (ss:2B44=0FAh)
020A:3829  75 0C				jne	loc_365			; Jump if not equal
020A:382B  3C 80				cmp	al,80h
020A:382D  72 08				jb	loc_365			; Jump if below
020A:382F  53					push	bx
020A:3830  BB 2B61				mov	bx,2B61h
020A:3833  2C 80				sub	al,80h
020A:3835  D7					xlat				; al=[al+[bx]] table
020A:3836  5B					pop	bx
020A:3837			loc_365:
020A:3837  1F					pop	ds
020A:3838  AA					stosb				; Store al to es:[di]
020A:3839  26: 88 1D				mov	es:[di],bl
020A:383C  47					inc	di
020A:383D  E2 A2				loop	locloop_358		; Loop if cx > 0

020A:383F			loc_366:
020A:383F  E8 3943				call	sub_74			; (7185)
020A:3842  E8 1C77				call	sub_42			; (54BC)
020A:3845  83 26 4E19 FE			and	word ptr ds:[4E19h],0FFFEh	; (ss:4E19=3F08h)
020A:384A  8B 1E 4E22				mov	bx,word ptr ds:[4E22h]	; (ss:4E22=804Eh)
020A:384E  E8 237F				call	sub_55			; (5BD0)
020A:3851			loc_367:
020A:3851  9A 1510:0760		;*		call	far ptr sub_123		;*(1510:0760)
020A:3851  9A					db	9Ah
020A:3852  0760 1510				dw	760h, 1510h
020A:3856  3C 00				cmp	al,0
020A:3858  74 0A				je	loc_368			; Jump if equal
020A:385A  24 5F				and	al,5Fh			; '_'
020A:385C  3C 41				cmp	al,41h			; 'A'
020A:385E  72 04				jb	loc_368			; Jump if below
020A:3860  3C 5A				cmp	al,5Ah			; 'Z'
020A:3862  76 03				jbe	loc_369			; Jump if below or =
020A:3864			loc_368:
020A:3864  E9 0098				jmp	loc_375			; (38FF)
020A:3867			loc_369:
020A:3867  3C 50				cmp	al,50h			; 'P'
020A:3869  77 29				ja	loc_371			; Jump if above
020A:386B  2C 41				sub	al,41h			; 'A'
020A:386D  BB 8000				mov	bx,8000h
020A:3870  8A C8				mov	cl,al
020A:3872  D3 CB				ror	bx,cl			; Rotate
020A:3874  8B 16 4E22				mov	dx,word ptr ds:[4E22h]	; (ss:4E22=804Eh)
020A:3878  8B CA				mov	cx,dx
020A:387A  23 D3				and	dx,bx
020A:387C  F7 D2				not	dx
020A:387E  23 D3				and	dx,bx
020A:3880  F7 D3				not	bx
020A:3882  23 CB				and	cx,bx
020A:3884  0B CA				or	cx,dx
020A:3886  F7 06 4E19 0002			test	word ptr ds:[4E19h],2	; (ss:4E19=3F08h)
020A:388C  75 62				jnz	loc_373			; Jump if not zero
020A:388E  89 0E 4E22				mov	word ptr ds:[4E22h],cx	; (ss:4E22=804Eh)
020A:3892  EB 61				jmp	short loc_374		; (38F5)
020A:3894			loc_371:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 121

020A:3894  3C 54				cmp	al,54h			; 'T'
020A:3896  77 2F				ja	loc_372			; Jump if above
020A:3898  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (ss:35E6=52h)
020A:389D  74 51				je	loc_373			; Jump if equal
020A:389F  2C 51				sub	al,51h			; 'Q'
020A:38A1  04B3			data_428	dw	4B3h
020A:38A3  C88A			data_429	dw	0C88Ah
020A:38A5  CBD2			data_430	dw	0CBD2h
020A:38A7  168A			data_431	dw	168Ah
020A:38A9  4E7F			data_432	dw	4E7Fh
020A:38AB  CA8A			data_433	dw	0CA8Ah
020A:38AD  D322			data_434	dw	0D322h
020A:38AF  D2F6			data_435	dw	0D2F6h
020A:38B1  D322			data_436	dw	0D322h
020A:38B3  D3F6			data_437	dw	0D3F6h
020A:38B5  CB22			data_438	dw	0CB22h
020A:38B7  CA0A			data_439	dw	0CA0Ah
020A:38B9  06F7			data_440	dw	6F7h
020A:38BB  19 4E 02				sbb	[bp+2],cx
020A:38BE  00 75 2F				add	[di+2Fh],dh
020A:38C1  88 0E 4E7F				mov	byte ptr ds:[4E7Fh],cl	; (ss:4E7F=3)
020A:38C5  EB 2E				jmp	short loc_374		; (38F5)
020A:38C7			loc_372:
020A:38C7  2C 55				sub	al,55h			; 'U'
020A:38C9  BB 0080				mov	bx,80h
020A:38CC  8A C8				mov	cl,al
020A:38CE  D3 CB				ror	bx,cl			; Rotate
020A:38D0  8B 16 4E24				mov	dx,word ptr ds:[4E24h]	; (ss:4E24=7400h)
020A:38D4  8B CA				mov	cx,dx
020A:38D6  23 D3				and	dx,bx
020A:38D8  F7 D2				not	dx
020A:38DA  23 D3				and	dx,bx
020A:38DC  F7 D3				not	bx
020A:38DE  23 CB				and	cx,bx
020A:38E0  0B CA				or	cx,dx
020A:38E2  F7 06 4E19 0002			test	word ptr ds:[4E19h],2	; (ss:4E19=3F08h)
020A:38E8  75 06				jnz	loc_373			; Jump if not zero
020A:38EA  89 0E 4E24				mov	word ptr ds:[4E24h],cx	; (ss:4E24=7400h)
020A:38EE  EB 05				jmp	short loc_374		; (38F5)
020A:38F0			loc_373:
020A:38F0  9A 1510:2B10		;*		call	far ptr sub_140		;*(1510:2B10)
020A:38F0  9A					db	9Ah
020A:38F1  2B10 1510				dw	2B10h, 1510h
020A:38F5			loc_374:
020A:38F5  8B 1E 4E22				mov	bx,word ptr ds:[4E22h]	; (ss:4E22=804Eh)
020A:38F9  E8 22D4				call	sub_55			; (5BD0)
020A:38FC  E9 FF52				jmp	loc_367			; (3851)
020A:38FF			loc_375:
020A:38FF  E8 1EC6				call	sub_48			; (57C8)
020A:3902  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:3906  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:390A  C6 06 2B36 01			mov	byte ptr ds:[2B36h],1	; (ss:2B36=75h)
020A:390F  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (ss:327D=15h)
020A:3913  E8 1EE6				call	sub_49			; (57FC)
020A:3916  E8 1B3B				call	sub_38			; (5454)
020A:3919  A0 2B3B				mov	al,byte ptr ds:[2B3Bh]	; (ss:2B3B=0BAh)
020A:391C  F6 06 4E7F 07			test	byte ptr ds:[4E7Fh],7	; (ss:4E7F=3)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 122

020A:3921  74 0C				jz	loc_376			; Jump if zero
020A:3923  80 3E 2B3B 0A			cmp	byte ptr ds:[2B3Bh],0Ah	; (ss:2B3B=0BAh)
020A:3928  73 05				jae	loc_376			; Jump if above or =
020A:392A  B0 0A				mov	al,0Ah
020A:392C  E8 264D				call	sub_62			; (5F7C)
020A:392F			loc_376:
020A:392F  E8 2322				call	sub_56			; (5C54)
020A:3932  E9 FDE6				jmp	loc_347			; (371B)
							                        ;* No entry point to code
020A:3935  E8 1E68				call	sub_47			; (57A0)
020A:3938  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:393C  C6 47 39 0F				mov	byte ptr [bx+39h],0Fh
020A:3940  C6 47 79 0F				mov	byte ptr [bx+79h],0Fh
020A:3944  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:3948  E8 19E5				call	sub_37			; (5330)
020A:394B  B4 02				mov	ah,2
020A:394D  32 FF				xor	bh,bh			; Zero register
020A:394F  BA 1313				mov	dx,1313h
020A:3952  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:3952  9A					db	9Ah
020A:3953  2BA8 1510				dw	2BA8h, 1510h
020A:3957  E8 2266				call	sub_54			; (5BC0)
020A:395A  B1 04				mov	cl,4
020A:395C  B3 02				mov	bl,2
020A:395E  BE 0699				mov	si,699h
020A:3961  9A 1510:0620		;*		call	far ptr sub_122		;*(1510:0620)
020A:3961  9A					db	9Ah
020A:3962  0620 1510				dw	620h, 1510h
020A:3966  3C 1B				cmp	al,1Bh
020A:3968  75 03				jne	loc_377			; Jump if not equal
020A:396A  E9 00A2				jmp	loc_383			; (3A0F)
020A:396D			loc_377:
020A:396D  80 F9 00				cmp	cl,0
020A:3970  74 03				je	loc_378			; Jump if equal
020A:3972  E9 0095				jmp	loc_382			; (3A0A)
020A:3975			loc_378:
020A:3975  B9 0080				mov	cx,80h
020A:3978  BF 0699				mov	di,699h
020A:397B  E8 0262				call	sub_30			; (3BE0)
020A:397E  72 03				jc	loc_379			; Jump if carry Set
020A:3980  E9 0087				jmp	loc_382			; (3A0A)
020A:3983			loc_379:
020A:3983  89 16 3029				mov	word ptr ds:[3029h],dx	; (ss:3029=0FFFBh)
020A:3987  B2 3A				mov	dl,3Ah			; ':'
020A:3989  9A 1510:07A0		;*		call	far ptr sub_125		;*(1510:07A0)
020A:3989  9A					db	9Ah
020A:398A  07A0 1510				dw	7A0h, 1510h
020A:398E  B1 04				mov	cl,4
020A:3990  B3 02				mov	bl,2
020A:3992  BE 069E				mov	si,69Eh
020A:3995  9A 1510:0620		;*		call	far ptr sub_122		;*(1510:0620)
020A:3995  9A					db	9Ah
020A:3996  0620 1510				dw	620h, 1510h
020A:399A  3C 1B				cmp	al,1Bh
020A:399C  74 71				je	loc_383			; Jump if equal
020A:399E  80 F9 00				cmp	cl,0
020A:39A1  75 67				jne	loc_382			; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 123

020A:39A3  B9 0080				mov	cx,80h
020A:39A6  BF 069E				mov	di,69Eh
020A:39A9  E8 0234				call	sub_30			; (3BE0)
020A:39AC  73 5C				jnc	loc_382			; Jump if carry=0
020A:39AE  E8 37E3				call	sub_76			; (7194)
020A:39B1  26: 89 16 0002			mov	word ptr es:[2],dx	; (19F9:0002=740Fh)
020A:39B6  26: 83 3E 0006 FF			cmp	word ptr es:[6],0FFFFh	; (19F9:0006=7D80h)
020A:39BC  75 07				jne	loc_380			; Jump if not equal
020A:39BE  26: C7 06 0004 0000			mov	word ptr es:[4],0	; (19F9:0004=2632h)
020A:39C5			loc_380:
020A:39C5  A1 3029				mov	ax,word ptr ds:[3029h]	; (ss:3029=0FFFBh)
020A:39C8  26: A3 0000				mov	word ptr es:[0],ax	; (19F9:0000=545h)
020A:39CC  26: A3 0006				mov	word ptr es:[6],ax	; (19F9:0006=7D80h)
020A:39D0  26: A3 0008				mov	word ptr es:[8],ax	; (19F9:0008=1509h)
020A:39D4  26: C6 06 000E 00			mov	byte ptr es:[0Eh],0	; (19F9:000E=3Ch)
020A:39DA  26: 83 3E 000A FF			cmp	word ptr es:[0Ah],0FFFFh	; (19F9:000A=2B75h)
020A:39E0  75 19				jne	loc_381			; Jump if not equal
020A:39E2  26: C7 06 000A 0000			mov	word ptr es:[0Ah],0	; (19F9:000A=2B75h)
020A:39E9  26: C7 06 000C 0041			mov	word ptr es:[0Ch],41h	; (19F9:000C=3E80h)
020A:39F0  80 3E 3040 00			cmp	byte ptr ds:[3040h],0	; (ss:3040=0Ch)
020A:39F5  77 04				ja	loc_381			; Jump if above
020A:39F7  FE 06 3040				inc	byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:39FB			loc_381:
020A:39FB  E8 379F				call	sub_78			; (719D)
020A:39FE  E8 2E83				call	sub_68			; (6884)
020A:3A01  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (ss:327D=15h)
020A:3A05  E8 1DF4				call	sub_49			; (57FC)
020A:3A08  EB 05				jmp	short loc_383		; (3A0F)
020A:3A0A			loc_382:
020A:3A0A  9A 1510:2B10		;*		call	far ptr sub_140		;*(1510:2B10)
020A:3A0A  9A					db	9Ah
020A:3A0B  2B10 1510				dw	2B10h, 1510h
020A:3A0F			loc_383:
020A:3A0F  E8 20DE				call	sub_51			; (5AF0)
020A:3A12  E8 1DB3				call	sub_48			; (57C8)
020A:3A15  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:3A19  C6 47 79 07				mov	byte ptr [bx+79h],7
020A:3A1D  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:3A21  E8 2190				call	sub_53			; (5BB4)
020A:3A24  E8 1A2D				call	sub_38			; (5454)
020A:3A27  E9 FCF1				jmp	loc_347			; (371B)
							                        ;* No entry point to code
020A:3A2A  8A 36 327F				mov	dh,byte ptr ds:[327Fh]	; (ss:327F=29h)
020A:3A2E  FE C6				inc	dh
020A:3A30  A0 2B3B				mov	al,byte ptr ds:[2B3Bh]	; (ss:2B3B=0BAh)
020A:3A33  80 FE 07				cmp	dh,7
020A:3A36  76 08				jbe	loc_384			; Jump if below or =
020A:3A38  B6 01				mov	dh,1
020A:3A3A  3C 09				cmp	al,9
020A:3A3C  75 02				jne	loc_384			; Jump if not equal
020A:3A3E  B0 04				mov	al,4
020A:3A40			loc_384:
020A:3A40  88 36 327F				mov	byte ptr ds:[327Fh],dh	; (ss:327F=29h)
020A:3A44  80 FE 01				cmp	dh,1
020A:3A47  76 06				jbe	loc_385			; Jump if below or =
020A:3A49  3C 04				cmp	al,4
020A:3A4B  75 02				jne	loc_385			; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 124

020A:3A4D  B0 12				mov	al,12h
020A:3A4F			loc_385:
020A:3A4F  9A 1510:0850		;*		call	far ptr sub_127		;*(1510:0850)
020A:3A4F  9A					db	9Ah
020A:3A50  0850 1510				dw	850h, 1510h
020A:3A54  E8 2525				call	sub_62			; (5F7C)
020A:3A57  9A 1510:2B70		;*		call	far ptr sub_142		;*(1510:2B70)
020A:3A57  9A					db	9Ah
020A:3A58  2B70 1510				dw	2B70h, 1510h
020A:3A5C  E8 2091				call	sub_51			; (5AF0)
020A:3A5F  E8 19F2				call	sub_38			; (5454)
020A:3A62  E9 FCB6				jmp	loc_347			; (371B)
							                        ;* No entry point to code
020A:3A65  E8 1D38				call	sub_47			; (57A0)
020A:3A68  C6 47 52 07				mov	byte ptr [bx+52h],7
020A:3A6C  C6 47 3C 0F				mov	byte ptr [bx+3Ch],0Fh
020A:3A70  C6 47 4F 0F				mov	byte ptr [bx+4Fh],0Fh
020A:3A74  B4 1E				mov	ah,1Eh
020A:3A76  E8 1D83				call	sub_49			; (57FC)
020A:3A79  C6 06 066E 20			mov	byte ptr ds:[66Eh],20h	; (ss:066E=3Ch) ' '
020A:3A7E  E8 18AF				call	sub_37			; (5330)
020A:3A81  B4 02				mov	ah,2
020A:3A83  32 FF				xor	bh,bh			; Zero register
020A:3A85  BA 1238				mov	dx,1238h
020A:3A88  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:3A88  9A					db	9Ah
020A:3A89  2BA8 1510				dw	2BA8h, 1510h
020A:3A8D  E8 2130				call	sub_54			; (5BC0)
020A:3A90  9A 1510:0760		;*		call	far ptr sub_123		;*(1510:0760)
020A:3A90  9A					db	9Ah
020A:3A91  0760 1510				dw	760h, 1510h
020A:3A95  3C 80				cmp	al,80h
020A:3A97  73 2A				jae	loc_386			; Jump if above or =
020A:3A99  A8 40				test	al,40h			; '@'
020A:3A9B  74 26				jz	loc_386			; Jump if zero
020A:3A9D  24 5F				and	al,5Fh			; '_'
020A:3A9F  3C 41				cmp	al,41h			; 'A'
020A:3AA1  72 20				jb	loc_386			; Jump if below
020A:3AA3  3C 5A				cmp	al,5Ah			; 'Z'
020A:3AA5  77 1C				ja	loc_386			; Jump if above
020A:3AA7  8A D0				mov	dl,al
020A:3AA9  80 EA 41				sub	dl,41h			; 'A'
020A:3AAC  8A DA				mov	bl,dl
020A:3AAE  52					push	dx
020A:3AAF  B4 02				mov	ah,2
020A:3AB1  32 FF				xor	bh,bh			; Zero register
020A:3AB3  BA 184F				mov	dx,184Fh
020A:3AB6  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:3AB6  9A					db	9Ah
020A:3AB7  2BA8 1510				dw	2BA8h, 1510h
020A:3ABB  E8 20F6				call	sub_53			; (5BB4)
020A:3ABE  5A					pop	dx
020A:3ABF  B4 0E				mov	ah,0Eh
020A:3AC1  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:3AC3			loc_386:
020A:3AC3  B4 19				mov	ah,19h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 125

020A:3AC5  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:3AC7  A2 30CE				mov	byte ptr ds:[30CEh],al	; (ss:30CE=80h)
020A:3ACA  04 61				add	al,61h			; 'a'
020A:3ACC  A2 066E				mov	byte ptr ds:[66Eh],al	; (ss:066E=3Ch)
020A:3ACF  E8 1B0E				call	sub_45			; (55E0)
020A:3AD2  8A 16 30CD				mov	dl,byte ptr ds:[30CDh]	; (ss:30CD=45h)
020A:3AD6  B4 0E				mov	ah,0Eh
020A:3AD8  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:3ADA  E8 1CEB				call	sub_48			; (57C8)
020A:3ADD  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:3AE1  C6 47 4F 07				mov	byte ptr [bx+4Fh],7
020A:3AE5  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (ss:327D=15h)
020A:3AE9  E8 1D10				call	sub_49			; (57FC)
020A:3AEC  E8 20C5				call	sub_53			; (5BB4)
020A:3AEF  E8 1962				call	sub_38			; (5454)
020A:3AF2  E9 FC26				jmp	loc_347			; (371B)
							                        ;* No entry point to code
020A:3AF5  E8 1CA8				call	sub_47			; (57A0)
020A:3AF8  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:3AFC  C6 47 3A 0F				mov	byte ptr [bx+3Ah],0Fh
020A:3B00  C6 47 7A 0F				mov	byte ptr [bx+7Ah],0Fh
020A:3B04  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:3B08  80 0E 1715 02			or	byte ptr ds:[1715h],2	; (ss:1715=15h)
020A:3B0D  E8 1FE0				call	sub_51			; (5AF0)
020A:3B10  E8 181D				call	sub_37			; (5330)
020A:3B13  B4 02				mov	ah,2
020A:3B15  32 FF				xor	bh,bh			; Zero register
020A:3B17  BA 1418				mov	dx,1418h
020A:3B1A  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:3B1A  9A					db	9Ah
020A:3B1B  2BA8 1510				dw	2BA8h, 1510h
020A:3B1F  E8 209E				call	sub_54			; (5BC0)
020A:3B22  B1 04				mov	cl,4
020A:3B24  B3 02				mov	bl,2
020A:3B26  BE 06EE				mov	si,6EEh
020A:3B29  9A 1510:0620		;*		call	far ptr sub_122		;*(1510:0620)
020A:3B29  9A					db	9Ah
020A:3B2A  0620 1510				dw	620h, 1510h
020A:3B2E  3C 1B				cmp	al,1Bh
020A:3B30  74 71				je	loc_390			; Jump if equal
020A:3B32  80 F9 00				cmp	cl,0
020A:3B35  75 67				jne	loc_389			; Jump if not equal
020A:3B37  B9 0080				mov	cx,80h
020A:3B3A  BF 06EE				mov	di,6EEh
020A:3B3D  E8 00A0				call	sub_30			; (3BE0)
020A:3B40  73 5C				jnc	loc_389			; Jump if carry=0
020A:3B42  E8 364F				call	sub_76			; (7194)
020A:3B45  26: 89 16 0004			mov	word ptr es:[4],dx	; (19F9:0004=2632h)
020A:3B4A  26: 83 3E 0000 FF			cmp	word ptr es:[0],0FFFFh	; (19F9:0000=545h)
020A:3B50  75 38				jne	loc_388			; Jump if not equal
020A:3B52  33 C0				xor	ax,ax			; Zero register
020A:3B54  26: A3 0000				mov	word ptr es:[0],ax	; (19F9:0000=545h)
020A:3B58  26: A3 0002				mov	word ptr es:[2],ax	; (19F9:0002=740Fh)
020A:3B5C  26: A3 0000				mov	word ptr es:[0],ax	; (19F9:0000=545h)
020A:3B60  26: A3 0006				mov	word ptr es:[6],ax	; (19F9:0006=7D80h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 126

020A:3B64  26: A3 0008				mov	word ptr es:[8],ax	; (19F9:0008=1509h)
020A:3B68  26: A2 000E				mov	byte ptr es:[0Eh],al	; (19F9:000E=3Ch)
020A:3B6C  26: 83 3E 000A FF			cmp	word ptr es:[0Ah],0FFFFh	; (19F9:000A=2B75h)
020A:3B72  75 0B				jne	loc_387			; Jump if not equal
020A:3B74  26: A3 000A				mov	word ptr es:[0Ah],ax	; (19F9:000A=2B75h)
020A:3B78  26: C7 06 000C 0041			mov	word ptr es:[0Ch],41h	; (19F9:000C=3E80h)
020A:3B7F			loc_387:
020A:3B7F  80 3E 3040 00			cmp	byte ptr ds:[3040h],0	; (ss:3040=0Ch)
020A:3B84  77 04				ja	loc_388			; Jump if above
020A:3B86  FE 06 3040				inc	byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:3B8A			loc_388:
020A:3B8A  C6 06 1715 01			mov	byte ptr ds:[1715h],1	; (ss:1715=15h)
020A:3B8F  E8 360B				call	sub_78			; (719D)
020A:3B92  E8 2CEF				call	sub_68			; (6884)
020A:3B95  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (ss:327D=15h)
020A:3B99  E8 1C60				call	sub_49			; (57FC)
020A:3B9C  EB			data_441	db	0EBh
020A:3B9D  0D 109A				or	ax,109Ah
020A:3BA0  2B 10				sub	dx,[bx+si]
020A:3BA2  15 2680				adc	ax,2680h
020A:3BA5  15 FD17				adc	ax,0FD17h
020A:3BA8  E8			data_444	db	0E8h
020A:3BA9  45					inc	bp
020A:3BAA  1F			data_445	db	1Fh
020A:3BAB			loc_391:
020A:3BAB  E8 1C1A				call	sub_48			; (57C8)
020A:3BAE  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:3BB2  C6 47 7A 07				mov	byte ptr [bx+7Ah],7
020A:3BB6  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:3BBA  E8 1FF7				call	sub_53			; (5BB4)
020A:3BBD  E8 1894				call	sub_38			; (5454)
020A:3BC0  E9 FB58				jmp	loc_347			; (371B)
							                        ;* No entry point to code
020A:3BC3  E8 35D7				call	sub_78			; (719D)
020A:3BC6  B0 41				mov	al,41h			; 'A'
020A:3BC8  80 3E 35E6 01			cmp	byte ptr ds:[35E6h],1	; (ss:35E6=52h)
020A:3BCD  74 02				je	loc_392			; Jump if equal
020A:3BCF  B0 4C				mov	al,4Ch			; 'L'
020A:3BD1			loc_392:
020A:3BD1  E8 0248				call	sub_32			; (3E1C)
020A:3BD4  E8 187D				call	sub_38			; (5454)
020A:3BD7  E9 FB41				jmp	loc_347			; (371B)
020A:3BDA  00					db	0
020A:3BDB  00					db	0
020A:3BDC  00					db	0
020A:3BDD  00 00				add	[bx+si],al
020A:3BDF  00 53 32				add	[bp+di+32h],dl
020A:3BE2  DB					db	0DBh
020A:3BE3  33 D2				xor	dx,dx			; Zero register
020A:3BE5			loc_393:
020A:3BE5  80 FB 04				cmp	bl,4
020A:3BE8  73 32				jae	loc_397			; Jump if above or =
020A:3BEA  8A 05				mov	al,[di]
020A:3BEC  3C 40				cmp	al,40h			; '@'
020A:3BEE  72 0C				jb	loc_394			; Jump if below
020A:3BF0  24 DF				and	al,0DFh
020A:3BF2  2C 41				sub	al,41h			; 'A'
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 127

020A:3BF4  3C 06				cmp	al,6
020A:3BF6  73 1F				jae	loc_396			; Jump if above or =
020A:3BF8  04 0A				add	al,0Ah
020A:3BFA  EB 06				jmp	short loc_395		; (3C02)
020A:3BFC			loc_394:
020A:3BFC  2C 30				sub	al,30h			; '0'
020A:3BFE  3C 09				cmp	al,9
020A:3C00  77 15				ja	loc_396			; Jump if above
020A:3C02			loc_395:
020A:3C02  32 E4				xor	ah,ah			; Zero register
020A:3C04  FE C3				inc	bl
020A:3C06  51					push	cx
020A:3C07  B1 04				mov	cl,4
020A:3C09  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:3C0B  59					pop	cx
020A:3C0C  03 D0				add	dx,ax
020A:3C0E  9A 1510:05A0		;*		call	far ptr sub_121		;*(1510:05A0)
020A:3C0E  9A					db	9Ah
020A:3C0F  05A0 1510				dw	5A0h, 1510h
020A:3C13  73 D0				jnc	loc_393			; Jump if carry=0
020A:3C15  EB 08				jmp	short loc_398		; (3C1F)
020A:3C17			loc_396:
020A:3C17  80 FB 01				cmp	bl,1
020A:3C1A  72 03				jb	loc_398			; Jump if below
020A:3C1C			loc_397:
020A:3C1C  F9					stc				; Set carry flag
020A:3C1D  EB 01				jmp	short loc_399		; (3C20)
020A:3C1F			loc_398:
020A:3C1F  F8					clc				; Clear carry flag
020A:3C20			loc_399:
020A:3C20  5B					pop	bx
020A:3C21  C3					retn
020A:3C22  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_31		proc	near
020A:3C24  56					push	si
020A:3C25			loc_400:
020A:3C25  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:3C28  74 0A				je	loc_401			; Jump if equal
020A:3C2A  80 3C 09				cmp	byte ptr [si],9
020A:3C2D  74 05				je	loc_401			; Jump if equal
020A:3C2F  80 3C 3D				cmp	byte ptr [si],3Dh	; '='
020A:3C32  75 09				jne	loc_402			; Jump if not equal
020A:3C34			loc_401:
020A:3C34  46					inc	si
020A:3C35  3B 36 509E				cmp	si,data_557		; (020A:509E=1D3Eh)
020A:3C39  76 EA				jbe	loc_400			; Jump if below or =
020A:3C3B  EB 5D				jmp	short loc_409		; (3C9A)
020A:3C3D			loc_402:
020A:3C3D  33 D2				xor	dx,dx			; Zero register
020A:3C3F  B5 04				mov	ch,4
020A:3C41  8A CD				mov	cl,ch
020A:3C43			loc_403:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 128

020A:3C43  8A 04				mov	al,[si]
020A:3C45  3C 40				cmp	al,40h			; '@'
020A:3C47  72 0C				jb	loc_404			; Jump if below
020A:3C49  24 DF				and	al,0DFh
020A:3C4B  2C 41				sub	al,41h			; 'A'
020A:3C4D  3C 06				cmp	al,6
020A:3C4F  73 24				jae	loc_408			; Jump if above or =
020A:3C51  04 0A				add	al,0Ah
020A:3C53  EB 06				jmp	short loc_405		; (3C5B)
020A:3C55			loc_404:
020A:3C55  2C 30				sub	al,30h			; '0'
020A:3C57  3C 09				cmp	al,9
020A:3C59  77 1A				ja	loc_408			; Jump if above
020A:3C5B			loc_405:
020A:3C5B  32 E4				xor	ah,ah			; Zero register
020A:3C5D  03 D0				add	dx,ax
020A:3C5F  D3 C2				rol	dx,cl			; Rotate
020A:3C61  FE CD				dec	ch
020A:3C63  80 FD 00				cmp	ch,0
020A:3C66  74 07				je	loc_406			; Jump if equal
020A:3C68  46					inc	si
020A:3C69  3B 36 509E				cmp	si,data_557		; (020A:509E=1D3Eh)
020A:3C6D  76 D4				jbe	loc_403			; Jump if below or =
020A:3C6F			loc_406:
020A:3C6F  46					inc	si
020A:3C70			loc_407:
020A:3C70  D3 CA				ror	dx,cl			; Rotate
020A:3C72  58					pop	ax
020A:3C73  F8					clc				; Clear carry flag
020A:3C74  C3					retn
020A:3C75			loc_408:
020A:3C75  80 FD 04				cmp	ch,4
020A:3C78  74 20				je	loc_409			; Jump if equal
020A:3C7A  8A 04				mov	al,[si]
020A:3C7C  3C 20				cmp	al,20h			; ' '
020A:3C7E  74 F0				je	loc_407			; Jump if equal
020A:3C80  3C 09				cmp	al,9
020A:3C82  74 EC				je	loc_407			; Jump if equal
020A:3C84  3C 00				cmp	al,0
020A:3C86  74 E8				je	loc_407			; Jump if equal
020A:3C88  3C 2C				cmp	al,2Ch			; ','
020A:3C8A  74 E4				je	loc_407			; Jump if equal
020A:3C8C  3C 3A				cmp	al,3Ah			; ':'
020A:3C8E  74 E0				je	loc_407			; Jump if equal
020A:3C90  3C 3B				cmp	al,3Bh			; ';'
020A:3C92  74 DC				je	loc_407			; Jump if equal
020A:3C94  24 DF				and	al,0DFh
020A:3C96  3C 48				cmp	al,48h			; 'H'
020A:3C98  74 D6				je	loc_407			; Jump if equal
020A:3C9A			loc_409:
020A:3C9A  F9					stc				; Set carry flag
020A:3C9B  5E					pop	si
020A:3C9C  C3					retn
				sub_31		endp

020A:3C9D  00 00				add	[bx+si],al
020A:3C9F  00 BA 8005				add	[bp+si-7FFBh],bh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 129

020A:3CA3  BB 04F0				mov	bx,4F0h
020A:3CA6  E8 ECB7		;*		call	sub_29			;*(2960)
020A:3CA6  E8 B7 EC				db	0E8h,0B7h,0ECh
020A:3CA9  C3					retn
020A:3CAA  00					db	0
020A:3CAB  00					db	0
020A:3CAC  00					db	0
							                        ;* No entry point to code
020A:3CAD  00 00				add	[bx+si],al
020A:3CAF  00 F7				add	bh,dh
020A:3CB1  06					push	es
020A:3CB2  19 4E 02				sbb	[bp+2],cx
020A:3CB5  00 74 02				add	[si+2],dh
020A:3CB8			loc_410:
020A:3CB8  EB 7B				jmp	short loc_418		; (3D35)
020A:3CBA			loc_411:
020A:3CBA  8A 04				mov	al,[si]
020A:3CBC  8A E0				mov	ah,al
020A:3CBE  3C 00				cmp	al,0
020A:3CC0  74 F6				je	loc_410			; Jump if equal
020A:3CC2  24 5F				and	al,5Fh			; '_'
020A:3CC4  3C 41				cmp	al,41h			; 'A'
020A:3CC6  72 F0				jb	loc_410			; Jump if below
020A:3CC8  3C 5A				cmp	al,5Ah			; 'Z'
020A:3CCA  77 EC				ja	loc_410			; Jump if above
020A:3CCC  3C 50				cmp	al,50h			; 'P'
020A:3CCE  77 1E				ja	loc_413			; Jump if above
020A:3CD0  2C 41				sub	al,41h			; 'A'
020A:3CD2  BB 8000				mov	bx,8000h
020A:3CD5  8A C8				mov	cl,al
020A:3CD7  D3 CB				ror	bx,cl			; Rotate
020A:3CD9  8B 16 4E22				mov	dx,data_502		; (020A:4E22=348Ah)
020A:3CDD  0B D3				or	dx,bx
020A:3CDF  F6 C4 20				test	ah,20h			; ' '
020A:3CE2  74 04				jz	loc_412			; Jump if zero
020A:3CE4  F7 D3				not	bx
020A:3CE6  23 D3				and	dx,bx
020A:3CE8			loc_412:
020A:3CE8  89 16 4E22				mov	data_502,dx		; (020A:4E22=348Ah)
020A:3CEC  EB 44				jmp	short loc_417		; (3D32)
020A:3CEE			loc_413:
020A:3CEE  3C 54				cmp	al,54h			; 'T'
020A:3CF0  77 24				ja	loc_415			; Jump if above
020A:3CF2  80 3E 35E6 00			cmp	data_400,0		; (020A:35E6=9Ah)
020A:3CF7  74 39				je	loc_417			; Jump if equal
020A:3CF9  2C 51				sub	al,51h			; 'Q'
020A:3CFB  B3 04				mov	bl,4
020A:3CFD  8A C8				mov	cl,al
020A:3CFF  D2 CB				ror	bl,cl			; Rotate
020A:3D01  8A 16 4E7F				mov	dl,data_543		; (020A:4E7F=60h)
020A:3D05  0A D3				or	dl,bl
020A:3D07  F6 C4 20				test	ah,20h			; ' '
020A:3D0A  74 04				jz	loc_414			; Jump if zero
020A:3D0C  F6 D3				not	bl
020A:3D0E  22 D3				and	dl,bl
020A:3D10			loc_414:
020A:3D10  88 16 4E7F				mov	data_543,dl		; (020A:4E7F=60h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 130

020A:3D14  77 1C				ja	loc_417			; Jump if above
020A:3D16			loc_415:
020A:3D16  2C 55				sub	al,55h			; 'U'
020A:3D18  BB 0080				mov	bx,80h
020A:3D1B  8A C8				mov	cl,al
020A:3D1D  D3 CB				ror	bx,cl			; Rotate
020A:3D1F  8B 16 4E24				mov	dx,data_503		; (020A:4E24=885Eh)
020A:3D23  0B D3				or	dx,bx
020A:3D25  F6 C4 20				test	ah,20h			; ' '
020A:3D28  74 04				jz	loc_416			; Jump if zero
020A:3D2A  F7 D3				not	bx
020A:3D2C  23 D3				and	dx,bx
020A:3D2E			loc_416:
020A:3D2E  89 16 4E24				mov	data_503,dx		; (020A:4E24=885Eh)
020A:3D32			loc_417:
020A:3D32  46					inc	si
020A:3D33  EB 85				jmp	short loc_411		; (3CBA)
020A:3D35			loc_418:
020A:3D35  A0 2B3B				mov	al,data_231		; (020A:2B3B=0A0h)
020A:3D38  F6 06 4E7F 07			test	byte ptr data_543,7	; (020A:4E7F=60h)
020A:3D3D  74 0C				jz	loc_419			; Jump if zero
020A:3D3F  80 3E 2B3B 0A			cmp	data_231,0Ah		; (020A:2B3B=0A0h)
020A:3D44  73 05				jae	loc_419			; Jump if above or =
020A:3D46  B0 0A				mov	al,0Ah
020A:3D48  E8 2231				call	sub_62			; (5F7C)
020A:3D4B			loc_419:
020A:3D4B  E8 1F06				call	sub_56			; (5C54)
020A:3D4E  F7 06 4E22 0002			test	data_502,2		; (020A:4E22=348Ah)
020A:3D54  74 07				jz	loc_420			; Jump if zero
020A:3D56  B0 01				mov	al,1
020A:3D58  9A 1510:45B8		;*		call	far ptr sub_162		;*(1510:45B8)
020A:3D58  9A					db	9Ah
020A:3D59  45B8 1510				dw	45B8h, 1510h
020A:3D5D			loc_420:
020A:3D5D  C3					retn
							                        ;* No entry point to code
020A:3D5E  87 DB				xchg	bx,bx
020A:3D60  80 3E 5614 01			cmp	byte ptr data_567,1	; (020A:5614=0EBh)
020A:3D65  75 07				jne	loc_421			; Jump if not equal
020A:3D67  C6 06 4FD6 12			mov	byte ptr data_554,12h	; (020A:4FD6=0BAh)
020A:3D6C  EB 28				jmp	short loc_423		; (3D96)
020A:3D6E			loc_421:
020A:3D6E  89 36 509E				mov	data_557,si		; (020A:509E=1D3Eh)
020A:3D72  8B 1E 4F94				mov	bx,data_553		; (020A:4F94=0B304h)
020A:3D76  01 1E 509E				add	data_557,bx		; (020A:509E=1D3Eh)
020A:3D7A  E8 FEA7				call	sub_31			; (3C24)
020A:3D7D  72 12				jc	loc_422			; Jump if carry Set
020A:3D7F  E8 3439				call	sub_83			; (71BB)
020A:3D82  3B D0				cmp	dx,ax
020A:3D84  72 0B				jb	loc_422			; Jump if below
020A:3D86  89 16 3035				mov	data_278,dx		; (020A:3035=3200h)
020A:3D8A  2E: 89 16 38A7			mov	cs:data_431,dx		; (020A:38A7=168Ah)
020A:3D8F  EB 05				jmp	short loc_423		; (3D96)
020A:3D91			loc_422:
020A:3D91  C6 06 4FD6 31			mov	byte ptr data_554,31h	; (020A:4FD6=0BAh) '1'
020A:3D96			loc_423:
020A:3D96  C3					retn
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 131

							                        ;* No entry point to code
020A:3D97  90					nop
020A:3D98  B4 01				mov	ah,1
020A:3D9A  3C 46				cmp	al,46h			; 'F'
020A:3D9C  74 37				je	loc_424			; Jump if equal
020A:3D9E  FE C4				inc	ah
020A:3DA0  3C 43				cmp	al,43h			; 'C'
020A:3DA2  74 31				je	loc_424			; Jump if equal
020A:3DA4  FE C4				inc	ah
020A:3DA6  3C 45				cmp	al,45h			; 'E'
020A:3DA8  74 2B				je	loc_424			; Jump if equal
020A:3DAA  FE C4				inc	ah
020A:3DAC  3C 5A				cmp	al,5Ah			; 'Z'
020A:3DAE  74 25				je	loc_424			; Jump if equal
020A:3DB0  FE C4				inc	ah
020A:3DB2  3C 44				cmp	al,44h			; 'D'
020A:3DB4  74 1F				je	loc_424			; Jump if equal
020A:3DB6  FE C4				inc	ah
020A:3DB8  3C 4F				cmp	al,4Fh			; 'O'
020A:3DBA  74 19				je	loc_424			; Jump if equal
020A:3DBC  FE C4				inc	ah
020A:3DBE  3C 53				cmp	al,53h			; 'S'
020A:3DC0  74 13				je	loc_424			; Jump if equal
020A:3DC2  FE C4				inc	ah
020A:3DC4  3C 57				cmp	al,57h			; 'W'
020A:3DC6  74 0D				je	loc_424			; Jump if equal
020A:3DC8  FE C4				inc	ah
020A:3DCA  3C 4E				cmp	al,4Eh			; 'N'
020A:3DCC  74 07				je	loc_424			; Jump if equal
020A:3DCE  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:3DD3  EB 0E				jmp	short loc_425		; (3DE3)
020A:3DD5			loc_424:
020A:3DD5  88 26 327F				mov	byte ptr data_336,ah	; (020A:327F='nuineIntel')
020A:3DD9  9A 1510:0850		;*		call	far ptr sub_127		;*(1510:0850)
020A:3DD9  9A					db	9Ah
020A:3DDA  0850 1510				dw	850h, 1510h
020A:3DDE  9A 1510:2B70		;*		call	far ptr sub_142		;*(1510:2B70)
020A:3DDE  9A					db	9Ah
020A:3DDF  2B70 1510				dw	2B70h, 1510h
020A:3DE3			loc_425:
020A:3DE3  C3					retn
							                        ;* No entry point to code
020A:3DE4  3C 41				cmp	al,41h			; 'A'
020A:3DE6  72 2C				jb	loc_426			; Jump if below
020A:3DE8  3C 5A				cmp	al,5Ah			; 'Z'
020A:3DEA  77 28				ja	loc_426			; Jump if above
020A:3DEC  8A D0				mov	dl,al
020A:3DEE  80 EA 41				sub	dl,41h			; 'A'
020A:3DF1  8A DA				mov	bl,dl
020A:3DF3  B4 19				mov	ah,19h
020A:3DF5  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:3DF7  50					push	ax
020A:3DF8  B4 0E				mov	ah,0Eh
020A:3DFA  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:3DFC  B4 19				mov	ah,19h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 132

020A:3DFE  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:3E00  A2 30CE				mov	data_325,al		; (020A:30CE=31h)
020A:3E03  04 61				add	al,61h			; 'a'
020A:3E05  A2 066E				mov	byte ptr ds:[66Eh],al	; (020A:066E=0Eh)
020A:3E08  E8 17D5				call	sub_45			; (55E0)
020A:3E0B  58					pop	ax
020A:3E0C  8A D0				mov	dl,al
020A:3E0E  B4 0E				mov	ah,0Eh
020A:3E10  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:3E12  EB 05				jmp	short loc_427		; (3E19)
020A:3E14			loc_426:
020A:3E14  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:3E19			loc_427:
020A:3E19  C3					retn
020A:3E1A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_32		proc	near
020A:3E1C  50					push	ax
020A:3E1D  BF 036A				mov	di,36Ah
020A:3E20  B9 0009				mov	cx,9
020A:3E23  B0 2E				mov	al,2Eh			; '.'
020A:3E25  FC					cld				; Clear direction
020A:3E26  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3E28  4F					dec	di
020A:3E29  58					pop	ax
020A:3E2A  3C 4C				cmp	al,4Ch			; 'L'
020A:3E2C  74 0C				je	loc_428			; Jump if equal
020A:3E2E  3C 41				cmp	al,41h			; 'A'
020A:3E30  74 0B				je	loc_429			; Jump if equal
020A:3E32  C6 06 4FD6 09			mov	byte ptr ds:[4FD6h],9	; (ss:4FD6=0)
020A:3E37  E9 0117				jmp	loc_438			; (3F51)
020A:3E3A			loc_428:
020A:3E3A  E9 009B				jmp	loc_434			; (3ED8)
020A:3E3D			loc_429:
020A:3E3D  F6 06 14FA 80			test	byte ptr ds:[14FAh],80h	; (ss:14FA=88h)
020A:3E42  75 05				jnz	loc_430			; Jump if not zero
020A:3E44  C6 06 14FA 02			mov	byte ptr ds:[14FAh],2	; (ss:14FA=88h)
020A:3E49			loc_430:
020A:3E49  C6 06 35E6 00			mov	byte ptr ds:[35E6h],0	; (ss:35E6=52h)
020A:3E4E  9A 1510:26A0		;*		call	far ptr sub_135		;*(1510:26A0)
020A:3E4E  9A					db	9Ah
020A:3E4F  26A0 1510				dw	26A0h, 1510h
020A:3E53  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=41B5h)
020A:3E57  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:3E5B  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:3E5F  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:3E63  C6 47 65 00				mov	byte ptr [bx+65h],0
020A:3E67  C6 47 66 00				mov	byte ptr [bx+66h],0
020A:3E6B  C6 47 69 00				mov	byte ptr [bx+69h],0
020A:3E6F  C6 47 6A 00				mov	byte ptr [bx+6Ah],0
020A:3E73  C6 47 6B 00				mov	byte ptr [bx+6Bh],0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 133

020A:3E77  C6 47 6C 00				mov	byte ptr [bx+6Ch],0
020A:3E7B  C6 47 70 00				mov	byte ptr [bx+70h],0
020A:3E7F  C6 47 71 00				mov	byte ptr [bx+71h],0
020A:3E83  C6 47 7B 00				mov	byte ptr [bx+7Bh],0
020A:3E87  C6 47 4A 00				mov	byte ptr [bx+4Ah],0
020A:3E8B  C6 06 4E7F 00			mov	byte ptr ds:[4E7Fh],0	; (ss:4E7F=3)
020A:3E90  B9 000D				mov	cx,0Dh
020A:3E93  BF 13E8				mov	di,13E8h
020A:3E96  A0 13E4				mov	al,byte ptr ds:[13E4h]	; (ss:13E4=40h)

020A:3E99			locloop_431:
020A:3E99  3A 05				cmp	al,[di]
020A:3E9B  74 05				je	loc_432			; Jump if equal
020A:3E9D  83 C7 10				add	di,10h
020A:3EA0  E2 F7				loop	locloop_431		; Loop if cx > 0

020A:3EA2			loc_432:
020A:3EA2  81 7D 01 4F4E			cmp	word ptr [di+1],4F4Eh
020A:3EA7  75 1D				jne	loc_433			; Jump if not equal
020A:3EA9  BF 13E8				mov	di,13E8h
020A:3EAC  81 C7 00C0				add	di,0C0h
020A:3EB0  8A 45 0D				mov	al,[di+0Dh]
020A:3EB3  A2 13E5				mov	byte ptr ds:[13E5h],al	; (ss:13E5=30h)
020A:3EB6  8A 05				mov	al,[di]
020A:3EB8  A2 13E4				mov	byte ptr ds:[13E4h],al	; (ss:13E4=40h)
020A:3EBB  8B 45 0B				mov	ax,[di+0Bh]
020A:3EBE  A3 13E6				mov	word ptr ds:[13E6h],ax	; (ss:13E6=94EBh)
020A:3EC1  9A 1510:2B34		;*		call	far ptr sub_141		;*(1510:2B34)
020A:3EC1  9A					db	9Ah
020A:3EC2  2B34 1510				dw	2B34h, 1510h
020A:3EC6			loc_433:
020A:3EC6  80 26 35E4 FE			and	byte ptr ds:[35E4h],0FEh	; (ss:35E4=1)
020A:3ECB  32 C0				xor	al,al			; Zero register
020A:3ECD  9A 1510:09D8		;*		call	far ptr sub_130		;*(1510:09D8)
020A:3ECD  9A					db	9Ah
020A:3ECE  09D8 1510				dw	9D8h, 1510h
020A:3ED2  C6 47 48 00				mov	byte ptr [bx+48h],0
020A:3ED6  EB 65				jmp	short loc_437		; (3F3D)
020A:3ED8			loc_434:
020A:3ED8  F6 06 14FA 80			test	byte ptr ds:[14FAh],80h	; (ss:14FA=88h)
020A:3EDD  75 05				jnz	loc_435			; Jump if not zero
020A:3EDF  C6 06 14FA 00			mov	byte ptr ds:[14FAh],0	; (ss:14FA=88h)
020A:3EE4			loc_435:
020A:3EE4  C6 06 35E6 01			mov	byte ptr ds:[35E6h],1	; (ss:35E6=52h)
020A:3EE9  9A 1510:26A0		;*		call	far ptr sub_135		;*(1510:26A0)
020A:3EE9  9A					db	9Ah
020A:3EEA  26A0 1510				dw	26A0h, 1510h
020A:3EEE  A0 1209				mov	al,byte ptr ds:[1209h]	; (ss:1209=0C0h)
020A:3EF1  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=41B5h)
020A:3EF5  C6 47 30 0F				mov	byte ptr [bx+30h],0Fh
020A:3EF9  C6 47 33 0F				mov	byte ptr [bx+33h],0Fh
020A:3EFD  C6 47 34 0F				mov	byte ptr [bx+34h],0Fh
020A:3F01  88 47 65				mov	[bx+65h],al
020A:3F04  C6 47 66 07				mov	byte ptr [bx+66h],7
020A:3F08  C6 47 69 07				mov	byte ptr [bx+69h],7
020A:3F0C  C6 47 6A 07				mov	byte ptr [bx+6Ah],7
020A:3F10  C6 47 6B 07				mov	byte ptr [bx+6Bh],7
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 134

020A:3F14  C6 47 6C 07				mov	byte ptr [bx+6Ch],7
020A:3F18  88 47 70				mov	[bx+70h],al
020A:3F1B  C6 47 71 07				mov	byte ptr [bx+71h],7
020A:3F1F  C6 47 7B 07				mov	byte ptr [bx+7Bh],7
020A:3F23  F6 06 35E3 01			test	byte ptr ds:[35E3h],1	; (ss:35E3=73h)
020A:3F28  75 04				jnz	loc_436			; Jump if not zero
020A:3F2A  C6 47 4A 07				mov	byte ptr [bx+4Ah],7
020A:3F2E			loc_436:
020A:3F2E  E8 1D23				call	sub_56			; (5C54)
020A:3F31  80 0E 35E4 01			or	byte ptr ds:[35E4h],1	; (ss:35E4=1)
020A:3F36  B0 01				mov	al,1
020A:3F38  9A 1510:09D8		;*		call	far ptr sub_130		;*(1510:09D8)
020A:3F38  9A					db	9Ah
020A:3F39  09D8 1510				dw	9D8h, 1510h
020A:3F3D			loc_437:
020A:3F3D  E8 1544				call	sub_40			; (5484)
020A:3F40  BF 3233				mov	di,3233h
020A:3F43  B9 003F				mov	cx,3Fh
020A:3F46  B0 2E				mov	al,2Eh			; '.'
020A:3F48  FC					cld				; Clear direction
020A:3F49  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:3F4B  4F					dec	di
020A:3F4C  9A 1510:26A0		;*		call	far ptr sub_135		;*(1510:26A0)
020A:3F4C  9A					db	9Ah
020A:3F4D  26A0 1510				dw	26A0h, 1510h
020A:3F51			loc_438:
020A:3F51  C3					retn
				sub_32		endp

							                        ;* No entry point to code
020A:3F52  87 DB				xchg	bx,bx
020A:3F54  C6 06 4F13 01			mov	byte ptr ds:[4F13h],1	; (ss:4F13=0A3h)
020A:3F59  C3					retn
							                        ;* No entry point to code
020A:3F5A  87 DB				xchg	bx,bx
020A:3F5C  8B 1E 4F94				mov	bx,data_553		; (020A:4F94=0B304h)
020A:3F60  80 3E 35E6 00			cmp	data_400,0		; (020A:35E6=9Ah)
020A:3F65  74 1B				je	loc_440			; Jump if equal
020A:3F67  BF 0378				mov	di,378h
020A:3F6A  B9 0021				mov	cx,21h
020A:3F6D  B0 20				mov	al,20h			; ' '
020A:3F6F  FC					cld				; Clear direction
020A:3F70  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:3F72  B9 0020				mov	cx,20h
020A:3F75  83 FB 20				cmp	bx,20h
020A:3F78  77 02				ja	loc_439			; Jump if above
020A:3F7A  8B CB				mov	cx,bx
020A:3F7C			loc_439:
020A:3F7C  BF 0378				mov	di,378h
020A:3F7F  FC					cld				; Clear direction
020A:3F80  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:3F82			loc_440:
020A:3F82  C3					retn
							                        ;* No entry point to code
020A:3F83  90					nop
020A:3F84  8B 1E 4F94				mov	bx,data_553		; (020A:4F94=0B304h)
020A:3F88  83 FB 00				cmp	bx,0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 135

020A:3F8B  75 08				jne	loc_441			; Jump if not equal
020A:3F8D  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:3F92  E9 00BC				jmp	loc_450			; (4051)
020A:3F95			loc_441:
020A:3F95  80 3C 3F				cmp	byte ptr [si],3Fh	; '?'
020A:3F98  74 1D				je	loc_442			; Jump if equal
020A:3F9A  8B FE				mov	di,si
020A:3F9C  B0 00				mov	al,0
020A:3F9E  9A 1510:2724		;*		call	far ptr sub_137		;*(1510:2724)
020A:3F9E  9A					db	9Ah
020A:3F9F  2724 1510				dw	2724h, 1510h
020A:3FA3  9A 1510:27AC		;*		call	far ptr sub_138		;*(1510:27AC)
020A:3FA3  9A					db	9Ah
020A:3FA4  27AC 1510				dw	27ACh, 1510h
020A:3FA8  A2 327E				mov	data_335,al		; (020A:327E=65h)
020A:3FAB  3C 01				cmp	al,1
020A:3FAD  77 12				ja	loc_443			; Jump if above
020A:3FAF  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:3FB4  E9 009A				jmp	loc_450			; (4051)
020A:3FB7			loc_442:
020A:3FB7  80 3E 327E 01			cmp	data_335,1		; (020A:327E=65h)
020A:3FBC  77 25				ja	loc_444			; Jump if above
020A:3FBE  E9 009D				jmp	loc_451			; (405E)
020A:3FC1			loc_443:
020A:3FC1  BF 31F0				mov	di,31F0h
020A:3FC4  B9 0040				mov	cx,40h
020A:3FC7  B0 00				mov	al,0
020A:3FC9  FC					cld				; Clear direction
020A:3FCA  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:3FCC  BF 0649				mov	di,649h
020A:3FCF  B9 000C				mov	cx,0Ch
020A:3FD2  B0 20				mov	al,20h			; ' '
020A:3FD4  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:3FD6  BF 31F0				mov	di,31F0h
020A:3FD9  8B CB				mov	cx,bx
020A:3FDB  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:3FDD  4F					dec	di
020A:3FDE  9A 1510:7270		;*		call	far ptr sub_172		;*(1510:7270)
020A:3FDE  9A					db	9Ah
020A:3FDF  7270 1510				dw	7270h, 1510h
020A:3FE3			loc_444:
020A:3FE3  80 3E 3031 03			cmp	data_275,3		; (020A:3031=0)
020A:3FE8  75 05				jne	loc_445			; Jump if not equal
020A:3FEA  C6 06 3031 04			mov	data_275,4		; (020A:3031=0)
020A:3FEF			loc_445:
020A:3FEF  E8 5522				call	sub_97			; (9514)
020A:3FF2  73 05				jnc	loc_446			; Jump if carry=0
020A:3FF4  A2 4FD6				mov	data_554,al		; (020A:4FD6=0BAh)
020A:3FF7  EB 58				jmp	short loc_450		; (4051)
020A:3FF9			loc_446:
020A:3FF9  C6 06 5614 01			mov	byte ptr data_567,1	; (020A:5614=0EBh)
020A:3FFE  80 3E 2B38 01			cmp	data_229,1		; (020A:2B38=0E5h)
020A:4003  74 05				je	loc_447			; Jump if equal
020A:4005  B0 0A				mov	al,0Ah
020A:4007  E8 1F72				call	sub_62			; (5F7C)
020A:400A			loc_447:
020A:400A  E8 3187				call	sub_76			; (7194)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 136

020A:400D  BE 0000				mov	si,0
020A:4010  BB 291D				mov	bx,291Dh
020A:4013  B9 00FA				mov	cx,0FAh
020A:4016  32 D2				xor	dl,dl			; Zero register

020A:4018			locloop_448:
020A:4018  26: 8B 04				mov	ax,es:[si]
020A:401B  26: 89 07				mov	es:[bx],ax
020A:401E  3D FFFF				cmp	ax,0FFFFh
020A:4021  74 02				je	loc_449			; Jump if equal
020A:4023  FE C2				inc	dl
020A:4025			loc_449:
020A:4025  83 C6 15				add	si,15h
020A:4028  43					inc	bx
020A:4029  43					inc	bx
020A:402A  E2 EC				loop	locloop_448		; Loop if cx > 0

020A:402C  88 16 3042				mov	data_286,dl		; (020A:3042=0CFh)
020A:4030  80 3E 3031 04			cmp	data_275,4		; (020A:3031=0)
020A:4035  75 1A				jne	loc_450			; Jump if not equal
020A:4037  FE 0E 3031				dec	data_275		; (020A:3031=0)
020A:403B  BF 0000				mov	di,0
020A:403E  A0 3040				mov	al,data_285		; (020A:3040=0B3h)
020A:4041  B4 15				mov	ah,15h
020A:4043  F6 E4				mul	ah			; ax = reg * al
020A:4045  8B C8				mov	cx,ax
020A:4047  B0 FF				mov	al,0FFh
020A:4049  FC					cld				; Clear direction
020A:404A  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:404C  C6 06 3040 00			mov	data_285,0		; (020A:3040=0B3h)
020A:4051			loc_450:
020A:4051  E8 3149				call	sub_78			; (719D)
020A:4054  51					push	cx
020A:4055  B4 2A				mov	ah,2Ah			; '*'
020A:4057  E8 17A2				call	sub_49			; (57FC)
020A:405A  E8 140F				call	sub_39			; (546C)
020A:405D  59					pop	cx
020A:405E			loc_451:
020A:405E  C3					retn
							                        ;* No entry point to code
020A:405F  90					nop
020A:4060  89 36 509E				mov	data_557,si		; (020A:509E=1D3Eh)
020A:4064  8B 1E 4F94				mov	bx,data_553		; (020A:4F94=0B304h)
020A:4068  01 1E 509E				add	data_557,bx		; (020A:509E=1D3Eh)
020A:406C  E8 FBB5				call	sub_31			; (3C24)
020A:406F  72 2B				jc	loc_452			; Jump if carry Set
020A:4071  89 16 35E9				mov	data_402,dx		; (020A:35E9=6E14h)
020A:4075  89 16 35EB				mov	data_403,dx		; (020A:35EB=3E80h)
020A:4079  83 26 35EB E7			and	data_403,0FFE7h		; (020A:35EB=3E80h)
020A:407E  88 36 53D4				mov	data_560,dh		; (020A:53D4=2Bh)
020A:4082  F7 06 35E9 0002			test	data_402,2		; (020A:35E9=6E14h)
020A:4088  74 17				jz	loc_453			; Jump if zero
020A:408A  BF 338A				mov	di,338Ah
020A:408D  83 EF 03				sub	di,3
020A:4090  B9 0004				mov	cx,4
020A:4093  2B F9				sub	di,cx
020A:4095  B0 58				mov	al,58h			; 'X'
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 137

020A:4097  FC					cld				; Clear direction
020A:4098  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:409A  EB 05				jmp	short loc_453		; (40A1)
020A:409C			loc_452:
020A:409C  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:40A1			loc_453:
020A:40A1  C3					retn
							                        ;* No entry point to code
020A:40A2  87 DB				xchg	bx,bx
020A:40A4  80 3E 5614 01			cmp	byte ptr data_567,1	; (020A:5614=0EBh)
020A:40A9  75 07				jne	loc_454			; Jump if not equal
020A:40AB  C6 06 4FD6 12			mov	byte ptr data_554,12h	; (020A:4FD6=0BAh)
020A:40B0  EB 2B				jmp	short loc_457		; (40DD)
020A:40B2			loc_454:
020A:40B2  B4 01				mov	ah,1
020A:40B4  3C 46				cmp	al,46h			; 'F'
020A:40B6  74 16				je	loc_455			; Jump if equal
020A:40B8  FE C4				inc	ah
020A:40BA  3C 42				cmp	al,42h			; 'B'
020A:40BC  74 10				je	loc_455			; Jump if equal
020A:40BE  FE C4				inc	ah
020A:40C0  3C 44				cmp	al,44h			; 'D'
020A:40C2  74 0A				je	loc_455			; Jump if equal
020A:40C4  2C 31				sub	al,31h			; '1'
020A:40C6  3C 02				cmp	al,2
020A:40C8  77 0E				ja	loc_456			; Jump if above
020A:40CA  FE C0				inc	al
020A:40CC  8A E0				mov	ah,al
020A:40CE			loc_455:
020A:40CE  88 26 3031				mov	data_275,ah		; (020A:3031=0)
020A:40D2  88 26 3032				mov	data_276,ah		; (020A:3032=0)
020A:40D6  EB 05				jmp	short loc_457		; (40DD)
020A:40D8			loc_456:
020A:40D8  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:40DD			loc_457:
020A:40DD  C3					retn
							                        ;* No entry point to code
020A:40DE  87 DB				xchg	bx,bx
020A:40E0  32 E4				xor	ah,ah			; Zero register
020A:40E2  3C 44				cmp	al,44h			; 'D'
020A:40E4  74 1D				je	loc_458			; Jump if equal
020A:40E6  FE C4				inc	ah
020A:40E8  3C 5A				cmp	al,5Ah			; 'Z'
020A:40EA  74 17				je	loc_458			; Jump if equal
020A:40EC  FE C4				inc	ah
020A:40EE  3C 53				cmp	al,53h			; 'S'
020A:40F0  74 11				je	loc_458			; Jump if equal
020A:40F2  FE C4				inc	ah
020A:40F4  3C 4C				cmp	al,4Ch			; 'L'
020A:40F6  74 0B				je	loc_458			; Jump if equal
020A:40F8  3C 4E				cmp	al,4Eh			; 'N'
020A:40FA  74 07				je	loc_458			; Jump if equal
020A:40FC  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:4101  EB 0A				jmp	short loc_459		; (410D)
020A:4103			loc_458:
020A:4103  88			data_454	db	88h
020A:4104  26: D0 15				rcl	byte ptr es:[di],1	; Rotate thru carry
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 138

020A:4107  E8 1B9A				call	sub_57			; (5CA4)
020A:410A  E8 0364				call	sub_33			; (4471)
020A:410D			loc_459:
020A:410D  C3					retn
							                        ;* No entry point to code
020A:410E  87 DB				xchg	bx,bx
020A:4110  3C 41				cmp	al,41h			; 'A'
020A:4112  75 07				jne	loc_460			; Jump if not equal
020A:4114  80 0E 30B2 80			or	data_318,80h		; (020A:30B2=54h)
020A:4119  EB 0E				jmp	short loc_461		; (4129)
020A:411B			loc_460:
020A:411B  80 26 30B2 7F			and	data_318,7Fh		; (020A:30B2=54h)
020A:4120  8A 44 01				mov	al,[si+1]
020A:4123  24 5F				and	al,5Fh			; '_'
020A:4125  3C 4E				cmp	al,4Eh			; 'N'
020A:4127  74 08				je	loc_462			; Jump if equal
020A:4129			loc_461:
020A:4129  C6 06 30B0 00			mov	data_317,0		; (020A:30B0=44h)
020A:412E  E9 0256				jmp	loc_496			; (4387)
020A:4131			loc_462:
020A:4131  C6 06 30B0 01			mov	data_317,1		; (020A:30B0=44h)
020A:4136  E9 024E				jmp	loc_496			; (4387)
							                        ;* No entry point to code
020A:4139  87 DB				xchg	bx,bx
020A:413B  90					nop
020A:413C  A0 4E90				mov	al,data_551		; (020A:4E90=8Ah)
020A:413F  24 DF				and	al,0DFh
020A:4141  3C 41				cmp	al,41h			; 'A'
020A:4143  75 0D				jne	loc_463			; Jump if not equal
020A:4145  C6 06 35E3 01			mov	byte ptr ds:[35E3h],1	; (020A:35E3=15h)
020A:414A  8B 1E 1326				mov	bx,data_147		; (020A:1326=0)
020A:414E  C6 47 4A 00				mov	byte ptr [bx+4Ah],0
020A:4152			loc_463:
020A:4152  90C3			data_456	dw	90C3h
020A:4154  8B 1E 4F94				mov	bx,data_553		; (020A:4F94=0B304h)
020A:4158  83 FB 00				cmp	bx,0
020A:415B  75 08				jne	loc_464			; Jump if not equal
020A:415D  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:4162  E9 0090				jmp	loc_470			; (41F5)
020A:4165			loc_464:
020A:4165  FC					cld				; Clear direction
020A:4166  BF 3233				mov	di,3233h
020A:4169  B9 0029				mov	cx,29h
020A:416C  B0 00				mov	al,0
020A:416E  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4170  BF 036A				mov	di,36Ah
020A:4173  B9 000C				mov	cx,0Ch
020A:4176  B0 20				mov	al,20h			; ' '
020A:4178  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:417A  BF 3233				mov	di,3233h
020A:417D  8B CB				mov	cx,bx

020A:417F			locloop_465:
020A:417F  80 3C 2E				cmp	byte ptr [si],2Eh	; '.'
020A:4182  74 03				je	loc_466			; Jump if equal
020A:4184  A4					movsb				; Mov [si] to es:[di]
020A:4185  E2 F8				loop	locloop_465		; Loop if cx > 0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 139


020A:4187			loc_466:
020A:4187  2B D9				sub	bx,cx
020A:4189  9A 1510:26A0		;*		call	far ptr sub_135		;*(1510:26A0)
020A:4189  9A					db	9Ah
020A:418A  26A0 1510				dw	26A0h, 1510h
020A:418E  83 C3 04				add	bx,4
020A:4191  47					inc	di
020A:4192  8B CB				mov	cx,bx
020A:4194			loc_467:
020A:4194  8A 05				mov	al,[di]
020A:4196  3C 3A				cmp	al,3Ah			; ':'
020A:4198  74 0D				je	loc_468			; Jump if equal
020A:419A  3C 5C				cmp	al,5Ch			; '\'
020A:419C  74 09				je	loc_468			; Jump if equal
020A:419E  83 F9 01				cmp	cx,1
020A:41A1  76 06				jbe	loc_469			; Jump if below or =
020A:41A3  49					dec	cx
020A:41A4  4F					dec	di
020A:41A5  EB ED				jmp	short loc_467		; (4194)
020A:41A7			loc_468:
020A:41A7  47					inc	di
020A:41A8  41					inc	cx
020A:41A9			loc_469:
020A:41A9  2B D9				sub	bx,cx
020A:41AB  8B CB				mov	cx,bx
020A:41AD  41					inc	cx
020A:41AE  83 F9 0C				cmp	cx,0Ch
020A:41B1  77 42				ja	loc_470			; Jump if above
020A:41B3  8B F7				mov	si,di
020A:41B5  BF 036A				mov	di,36Ah
020A:41B8  FC					cld				; Clear direction
020A:41B9  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:41BB  80 3E 3234 3A			cmp	byte ptr data_332,3Ah	; (020A:3234='RCHITECTURE=x86') ':'
020A:41C0  75 33				jne	loc_470			; Jump if not equal
020A:41C2  A0 3233				mov	al,data_331		; (020A:3233=41h)
020A:41C5  24 5F				and	al,5Fh			; '_'
020A:41C7  3C 41				cmp	al,41h			; 'A'
020A:41C9  72 2A				jb	loc_470			; Jump if below
020A:41CB  3C 5A				cmp	al,5Ah			; 'Z'
020A:41CD  77 26				ja	loc_470			; Jump if above
020A:41CF  8A D0				mov	dl,al
020A:41D1  80 EA 41				sub	dl,41h			; 'A'
020A:41D4  8A DA				mov	bl,dl
020A:41D6  B4 19				mov	ah,19h
020A:41D8  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:41DA  50					push	ax
020A:41DB  B4 0E				mov	ah,0Eh
020A:41DD  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:41DF  B4 19				mov	ah,19h
020A:41E1  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:41E3  A2 30CE				mov	data_325,al		; (020A:30CE=31h)
020A:41E6  04 61				add	al,61h			; 'a'
020A:41E8  6EA2			data_457	dw	6EA2h			; Data table (indexed access)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 140

020A:41EA  06					push	es
020A:41EB  E8 13F2				call	sub_45			; (55E0)
020A:41EE  58					pop	ax
020A:41EF  8A D0				mov	dl,al
020A:41F1  B4 0E				mov	ah,0Eh
020A:41F3  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:41F5			loc_470:
020A:41F5  C3					retn
							                        ;* No entry point to code
020A:41F6  87 DB				xchg	bx,bx
020A:41F8  2C 32				sub	al,32h			; '2'
020A:41FA  3C 07				cmp	al,7
020A:41FC  77 0E				ja	loc_471			; Jump if above
020A:41FE  04 02				add	al,2
020A:4200  D0 E0				shl	al,1			; Shift w/zeros fill
020A:4202  E8 1D77				call	sub_62			; (5F7C)
020A:4205  C6 06 2B38 01			mov	data_229,1		; (020A:2B38=0E5h)
020A:420A  EB 05				jmp	short loc_472		; (4211)
020A:420C			loc_471:
020A:420C  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:4211			loc_472:
020A:4211  C3					retn
							                        ;* No entry point to code
020A:4212  87 DB				xchg	bx,bx
020A:4214  8B 1E 4F94				mov	bx,data_553		; (020A:4F94=0B304h)
020A:4218  32 E4				xor	ah,ah			; Zero register
020A:421A  3C 4E				cmp	al,4Eh			; 'N'
020A:421C  74 3E				je	loc_475			; Jump if equal
020A:421E  FE C4				inc	ah
020A:4220  3C 44				cmp	al,44h			; 'D'
020A:4222  74 38				je	loc_475			; Jump if equal
020A:4224  FE C4				inc	ah
020A:4226  3C 49				cmp	al,49h			; 'I'
020A:4228  74 32				je	loc_475			; Jump if equal
020A:422A  B4 04				mov	ah,4
020A:422C  3C 4F				cmp	al,4Fh			; 'O'
020A:422E  74 2C				je	loc_475			; Jump if equal
020A:4230  B4 07				mov	ah,7
020A:4232  3C 41				cmp	al,41h			; 'A'
020A:4234  74 26				je	loc_475			; Jump if equal
020A:4236  3C 45				cmp	al,45h			; 'E'
020A:4238  75 2B				jne	loc_476			; Jump if not equal
020A:423A			loc_473:
020A:423A  46					inc	si
020A:423B			loc_474:
020A:423B  4B					dec	bx
020A:423C  74 27				jz	loc_476			; Jump if zero
020A:423E  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:4241  75 F7				jne	loc_473			; Jump if not equal
020A:4243  46					inc	si
020A:4244  4B					dec	bx
020A:4245  74 1E				jz	loc_476			; Jump if zero
020A:4247  B4 06				mov	ah,6
020A:4249  80 3C 44				cmp	byte ptr [si],44h	; 'D'
020A:424C  74 0E				je	loc_475			; Jump if equal
020A:424E  FE CC				dec	ah
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 141

020A:4250  80 3C 49				cmp	byte ptr [si],49h	; 'I'
020A:4253  74 07				je	loc_475			; Jump if equal
020A:4255  B4 03				mov	ah,3
020A:4257  80 3C 4F				cmp	byte ptr [si],4Fh	; 'O'
020A:425A  75 09				jne	loc_476			; Jump if not equal
020A:425C			loc_475:
020A:425C  88 26 16AB				mov	data_164,ah		; (020A:16AB=41h)
020A:4260  E8 1ACD				call	sub_58			; (5D30)
020A:4263  EB 05				jmp	short loc_477		; (426A)
020A:4265			loc_476:
020A:4265  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:426A			loc_477:
020A:426A  C3					retn
							                        ;* No entry point to code
020A:426B  90					nop
020A:426C  80 3E 35E6 00			cmp	data_400,0		; (020A:35E6=9Ah)
020A:4271  74 28				je	loc_480			; Jump if equal
020A:4273  8A E0				mov	ah,al
020A:4275  80 FC 4F				cmp	ah,4Fh			; 'O'
020A:4278  74 1A				je	loc_479			; Jump if equal
020A:427A  C6 06 35E4 01			mov	data_399,1		; (020A:35E4=8Ch)
020A:427F  B0 01				mov	al,1
020A:4281  80 FC 4E				cmp	ah,4Eh			; 'N'
020A:4284  74 07				je	loc_478			; Jump if equal
020A:4286  80 0E 35E4 02			or	data_399,2		; (020A:35E4=8Ch)
020A:428B  EB 0E				jmp	short loc_480		; (429B)
020A:428D			loc_478:
020A:428D  80 0E 35E4 08			or	data_399,8		; (020A:35E4=8Ch)
020A:4292  EB 07				jmp	short loc_480		; (429B)
020A:4294			loc_479:
020A:4294  80 26 35E4 FE			and	data_399,0FEh		; (020A:35E4=8Ch)
020A:4299  32 C0				xor	al,al			; Zero register
020A:429B			loc_480:
020A:429B  C3					retn
							                        ;* No entry point to code
020A:429C  BF 13E8				mov	di,13E8h
020A:429F  8A 05				mov	al,[di]
020A:42A1  A2 13E4				mov	data_152,al		; (020A:13E4=0)
020A:42A4  33 ED				xor	bp,bp			; Zero register
020A:42A6  8D 55 0B				lea	dx,[di+0Bh]		; Load effective addr
020A:42A9  8D 4D 01				lea	cx,[di+1]		; Load effective addr
020A:42AC  2B D1				sub	dx,cx
020A:42AE  8B CA				mov	cx,dx
020A:42B0  33 DB				xor	bx,bx			; Zero register
020A:42B2  56					push	si

020A:42B3			locloop_481:
020A:42B3  8A 04				mov	al,[si]
020A:42B5  3C 00				cmp	al,0
020A:42B7  74 3E				je	loc_486			; Jump if equal
020A:42B9  3C 20				cmp	al,20h			; ' '
020A:42BB  74 04				je	loc_482			; Jump if equal
020A:42BD  3C 09				cmp	al,9
020A:42BF  75 03				jne	loc_483			; Jump if not equal
020A:42C1			loc_482:
020A:42C1  46					inc	si
020A:42C2  EB EF				jmp	short locloop_481	; (42B3)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 142

020A:42C4			loc_483:
020A:42C4  81 39 582E				cmp	word ptr [bx+di],582Eh
020A:42C8  75 0B				jne	loc_484			; Jump if not equal
020A:42CA  3C 30				cmp	al,30h			; '0'
020A:42CC  72 18				jb	loc_485			; Jump if below
020A:42CE  3C 39				cmp	al,39h			; '9'
020A:42D0  77 03				ja	loc_484			; Jump if above
020A:42D2  46					inc	si
020A:42D3  EB 28				jmp	short loc_487		; (42FD)
020A:42D5			loc_484:
020A:42D5  38 41 01				cmp	[bx+di+1],al
020A:42D8  75 0C				jne	loc_485			; Jump if not equal
020A:42DA  43					inc	bx
020A:42DB  46					inc	si
020A:42DC  80 79 01 20				cmp	byte ptr [bx+di+1],20h	; ' '
020A:42E0  74 1B				je	loc_487			; Jump if equal
020A:42E2  E2 CF				loop	locloop_481		; Loop if cx > 0

020A:42E4  E3 17				jcxz	loc_487			; Jump if cx=0
020A:42E6			loc_485:
020A:42E6  5E					pop	si
020A:42E7  56					push	si
020A:42E8  45					inc	bp
020A:42E9  83 FD 0D				cmp	bp,0Dh
020A:42EC  73 09				jae	loc_486			; Jump if above or =
020A:42EE  8B CA				mov	cx,dx
020A:42F0  83 C7 10				add	di,10h
020A:42F3  33 DB				xor	bx,bx			; Zero register
020A:42F5  EB BC				jmp	short locloop_481	; (42B3)
020A:42F7			loc_486:
020A:42F7  5E					pop	si
020A:42F8  B4 36				mov	ah,36h			; '6'
020A:42FA  E9 2A3B				jmp	loc_1002		; (6D38)
020A:42FD			loc_487:
020A:42FD  8A 45 0D				mov	al,[di+0Dh]
020A:4300  A2 13E5				mov	data_153,al		; (020A:13E5=0)
020A:4303  8A 05				mov	al,[di]
020A:4305  A2 13E4				mov	data_152,al		; (020A:13E4=0)
020A:4308  8B 45 0B				mov	ax,[di+0Bh]
020A:430B  A3 13E6				mov	data_154,ax		; (020A:13E6=0)
020A:430E			loc_488:
020A:430E  8A 04				mov	al,[si]
020A:4310  3C 00				cmp	al,0
020A:4312  74 26				je	loc_491			; Jump if equal
020A:4314  3C 2C				cmp	al,2Ch			; ','
020A:4316  74 03				je	loc_489			; Jump if equal
020A:4318  46					inc	si
020A:4319  EB F3				jmp	short loc_488		; (430E)
020A:431B			loc_489:
020A:431B  8A 04				mov	al,[si]
020A:431D  3C 00				cmp	al,0
020A:431F  74 19				je	loc_491			; Jump if equal
020A:4321  B4 80				mov	ah,80h
020A:4323  3C 46				cmp	al,46h			; 'F'
020A:4325  74 0F				je	loc_490			; Jump if equal
020A:4327  FE C4				inc	ah
020A:4329  3C 53				cmp	al,53h			; 'S'
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 143

020A:432B  74 09				je	loc_490			; Jump if equal
020A:432D  FE C4				inc	ah
020A:432F  3C 42				cmp	al,42h			; 'B'
020A:4331  74 03				je	loc_490			; Jump if equal
020A:4333  46					inc	si
020A:4334  EB E5				jmp	short loc_489		; (431B)
020A:4336			loc_490:
020A:4336  88 26 14FA				mov	data_155,ah		; (020A:14FA=0)
020A:433A			loc_491:
020A:433A  9A 1510:2B34		;*		call	far ptr sub_141		;*(1510:2B34)
020A:433A  9A					db	9Ah
020A:433B  2B34 1510				dw	2B34h, 1510h
020A:433F  E8 1142				call	sub_40			; (5484)
020A:4342  5E					pop	si
020A:4343  C3					retn
							                        ;* No entry point to code
020A:4344  8B 04				mov	ax,[si]
020A:4346  8A 5C 02				mov	bl,[si+2]
020A:4349  BF 4F96				mov	di,4F96h
020A:434C			loc_492:
020A:434C  3B 05				cmp	ax,[di]
020A:434E  75 05				jne	loc_493			; Jump if not equal
020A:4350  3A 5D 02				cmp	bl,[di+2]
020A:4353  74 10				je	loc_494			; Jump if equal
020A:4355			loc_493:
020A:4355  83 C7 04				add	di,4
020A:4358  81 FF 4FD6				cmp	di,4FD6h
020A:435C  72 EE				jb	loc_492			; Jump if below
020A:435E  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:4363  EB 5E				jmp	short loc_499		; (43C3)
020A:4365			loc_494:
020A:4365  8A 45 03				mov	al,[di+3]
020A:4368  3C F1				cmp	al,0F1h
020A:436A  74 57				je	loc_499			; Jump if equal
020A:436C  8A 36 30A0				mov	dh,data_315		; (020A:30A0=45h)
020A:4370  3C F2				cmp	al,0F2h
020A:4372  75 09				jne	loc_495			; Jump if not equal
020A:4374  A0 30A1				mov	al,byte ptr data_316	; (020A:30A1=' 1\ALLUSE 1')
020A:4377  A8 F0				test	al,0F0h
020A:4379  74 02				jz	loc_495			; Jump if zero
020A:437B  0C 08				or	al,8
020A:437D			loc_495:
020A:437D  A2 30A0				mov	data_315,al		; (020A:30A0=45h)
020A:4380  C6 06 30B0 00			mov	data_317,0		; (020A:30B0=44h)
020A:4385  EB 25				jmp	short loc_497		; (43AC)
020A:4387			loc_496:
020A:4387  A0 30A0				mov	al,data_315		; (020A:30A0=45h)
020A:438A  F6 06 30B0 1F			test	data_317,1Fh		; (020A:30B0=44h)
020A:438F  74			data_458	db	74h
020A:4390  1B C6				sbb	ax,si
020A:4392  B006			data_459	dw	0B006h
020A:4394  30			data_460	db	30h
020A:4395  A801			data_461	dw	0A801h
020A:4397  7410			data_462	dw	7410h
020A:4399  C607			data_463	dw	0C607h
020A:439B  B006			data_464	dw	0B006h
020A:439D  30 02				xor	[bp+si],al
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 144

020A:439F  EB 1D				jmp	short loc_498		; (43BE)
							                        ;* No entry point to code
020A:43A1  A8 20				test	al,20h			; ' '
020A:43A3  74 07				jz	loc_497			; Jump if zero
020A:43A5  C6 06 30B0 04			mov	data_317,4		; (020A:30B0=44h)
020A:43AA  EB 12				jmp	short loc_498		; (43BE)
020A:43AC			loc_497:
020A:43AC  A8 C0				test	al,0C0h
020A:43AE  74 0E				jz	loc_498			; Jump if zero
020A:43B0  C6 06 30B0 0C			mov	data_317,0Ch		; (020A:30B0=44h)
020A:43B5  A8 80				test	al,80h
020A:43B7  74 05				jz	loc_498			; Jump if zero
020A:43B9  C6 06 30B0 14			mov	data_317,14h		; (020A:30B0=44h)
020A:43BE			loc_498:
020A:43BE  B6 01				mov	dh,1
020A:43C0  E8 12D5				call	sub_46			; (5698)
020A:43C3			loc_499:
020A:43C3  C3					retn
							                        ;* No entry point to code
020A:43C4  55					push	bp
020A:43C5  8B 2E 4F94				mov	bp,data_553		; (020A:4F94=0B304h)
020A:43C9  33 DB				xor	bx,bx			; Zero register
020A:43CB  32 C9				xor	cl,cl			; Zero register
020A:43CD  8A 1C				mov	bl,[si]
020A:43CF  80 EB 30				sub	bl,30h			; '0'
020A:43D2  80 FB 09				cmp	bl,9
020A:43D5  76 03				jbe	loc_500			; Jump if below or =
020A:43D7  E9 008F				jmp	loc_507			; (4469)
020A:43DA			loc_500:
020A:43DA  8A C3				mov	al,bl
020A:43DC  46					inc	si
020A:43DD  4D					dec	bp
020A:43DE  FE C1				inc	cl
020A:43E0  8A 1C				mov	bl,[si]
020A:43E2  80 EB 30				sub	bl,30h			; '0'
020A:43E5  80 FB 09				cmp	bl,9
020A:43E8  76 04				jbe	loc_501			; Jump if below or =
020A:43EA  8A D8				mov	bl,al
020A:43EC  EB 22				jmp	short loc_502		; (4410)
020A:43EE			loc_501:
020A:43EE  B5 0A				mov	ch,0Ah
020A:43F0  F6 E5				mul	ch			; ax = reg * al
020A:43F2  03 D8				add	bx,ax
020A:43F4  46					inc	si
020A:43F5  4D					dec	bp
020A:43F6  FE C1				inc	cl
020A:43F8  8A 14				mov	dl,[si]
020A:43FA  80 EA 30				sub	dl,30h			; '0'
020A:43FD  80 FA 09				cmp	dl,9
020A:4400  77 0E				ja	loc_502			; Jump if above
020A:4402  46					inc	si
020A:4403  4D					dec	bp
020A:4404  FE C1				inc	cl
020A:4406  8B C3				mov	ax,bx
020A:4408  F6 E5				mul	ch			; ax = reg * al
020A:440A  32 F6				xor	dh,dh			; Zero register
020A:440C  03 C2				add	ax,dx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 145

020A:440E  8B D8				mov	bx,ax
020A:4410			loc_502:
020A:4410  83 FB 00				cmp	bx,0
020A:4413  74 0B				je	loc_503			; Jump if equal
020A:4415  83 FB 0A				cmp	bx,0Ah
020A:4418  72 4F				jb	loc_507			; Jump if below
020A:441A  81 FB 00FF				cmp	bx,0FFh
020A:441E  77 49				ja	loc_507			; Jump if above
020A:4420			loc_503:
020A:4420  88 1E 35E8				mov	byte ptr ds:[35E8h],bl	; (020A:35E8=54h)
020A:4424  80 FB 00				cmp	bl,0
020A:4427  74 11				je	loc_504			; Jump if equal
020A:4429  BF 5ABD				mov	di,5ABDh
020A:442C  C7 45 FF 2020			mov	word ptr [di-1],2020h
020A:4431  56					push	si
020A:4432  4E					dec	si
020A:4433  32 ED				xor	ch,ch			; Zero register
020A:4435  FD					std				; Set direction flag
020A:4436  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:4438  FC					cld				; Clear direction
020A:4439  5E					pop	si
020A:443A			loc_504:
020A:443A  83 FD 02				cmp	bp,2
020A:443D  72 2A				jb	loc_507			; Jump if below
020A:443F  83 FD 32				cmp	bp,32h
020A:4442  77 25				ja	loc_507			; Jump if above
020A:4444			loc_505:
020A:4444  80 3C 2C				cmp	byte ptr [si],2Ch	; ','
020A:4447  74 06				je	loc_506			; Jump if equal
020A:4449  4D					dec	bp
020A:444A  74 1D				jz	loc_507			; Jump if zero
020A:444C  46					inc	si
020A:444D  EB F5				jmp	short loc_505		; (4444)
020A:444F			loc_506:
020A:444F  46					inc	si
020A:4450  4D					dec	bp
020A:4451  74 16				jz	loc_507			; Jump if zero
020A:4453  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:4456  74 F7				je	loc_506			; Jump if equal
020A:4458  80 3C 43				cmp	byte ptr [si],43h	; 'C'
020A:445B  75 0C				jne	loc_507			; Jump if not equal
020A:445D  46					inc	si
020A:445E  8A 04				mov	al,[si]
020A:4460  2C 30				sub	al,30h			; '0'
020A:4462  3C 07				cmp	al,7
020A:4464  77 03				ja	loc_507			; Jump if above
020A:4466  A2 35E1				mov	byte ptr ds:[35E1h],al	; (020A:35E1=8)
020A:4469			loc_507:
020A:4469  5D					pop	bp
020A:446A  C3					retn
							                        ;* No entry point to code
020A:446B  90					nop
020A:446C  C6 06 35DF 00			mov	data_396,0		; (020A:35DF=9Ah)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 146


				sub_33		proc	near
020A:4471  BE 03D0				mov	si,3D0h
020A:4474  BA 0003				mov	dx,3
020A:4477			loc_508:
020A:4477  B9 0016				mov	cx,16h
020A:447A  E8 1EAF				call	sub_64			; (632C)
020A:447D  83 C6 3A				add	si,3Ah
020A:4480  4A					dec	dx
020A:4481  75 F4				jnz	loc_508			; Jump if not zero
020A:4483  B9 3BCD				mov	cx,3BCDh
020A:4486  81 E9 3634				sub	cx,3634h
020A:448A  BE 3634				mov	si,3634h
020A:448D  E8 1E9C				call	sub_64			; (632C)
020A:4490  B9 5FF9				mov	cx,5FF9h
020A:4493  81 E9 5BA8				sub	cx,5BA8h
020A:4497  BE 5BA8				mov	si,5BA8h
020A:449A  E8 1E8F				call	sub_64			; (632C)
020A:449D  C3					retn
				sub_33		endp

							                        ;* No entry point to code
020A:449E  87 DB				xchg	bx,bx
020A:44A0  8B 1E 4F94				mov	bx,data_553		; (020A:4F94=0B304h)
020A:44A4  80 3E 35E6 00			cmp	data_400,0		; (020A:35E6=9Ah)
020A:44A9  74 35				je	loc_512			; Jump if equal
020A:44AB  83 FB 02				cmp	bx,2
020A:44AE  72 0F				jb	loc_509			; Jump if below
020A:44B0  8A 44 01				mov	al,[si+1]
020A:44B3  B3 07				mov	bl,7
020A:44B5  3C 4E				cmp	al,4Eh			; 'N'
020A:44B7  74 0D				je	loc_510			; Jump if equal
020A:44B9  32 DB				xor	bl,bl			; Zero register
020A:44BB  3C 46				cmp	al,46h			; 'F'
020A:44BD  74 07				je	loc_510			; Jump if equal
020A:44BF			loc_509:
020A:44BF  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:44C4  EB 1A				jmp	short loc_512		; (44E0)
020A:44C6			loc_510:
020A:44C6  88 1E 4E7F				mov	data_543,bl		; (020A:4E7F=60h)
020A:44CA  80 FB 00				cmp	bl,0
020A:44CD  74 0E				je	loc_511			; Jump if equal
020A:44CF  80 3E 2B3B 0A			cmp	data_231,0Ah		; (020A:2B3B=0A0h)
020A:44D4  73 0A				jae	loc_512			; Jump if above or =
020A:44D6  B0 0A				mov	al,0Ah
020A:44D8  E8 1AA1				call	sub_62			; (5F7C)
020A:44DB  EB 03				jmp	short loc_512		; (44E0)
020A:44DD			loc_511:
020A:44DD  E8 1774				call	sub_56			; (5C54)
020A:44E0			loc_512:
020A:44E0  C3					retn
							                        ;* No entry point to code
020A:44E1  87 DB				xchg	bx,bx
020A:44E3  90					nop
020A:44E4  89 36 509E				mov	data_557,si		; (020A:509E=1D3Eh)
020A:44E8  8B 1E 4F94				mov	bx,data_553		; (020A:4F94=0B304h)
020A:44EC  01 1E 509E				add	data_557,bx		; (020A:509E=1D3Eh)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 147

020A:44F0  E8 F731				call	sub_31			; (3C24)
020A:44F3  72 02				jc	loc_513			; Jump if carry Set
020A:44F5  EB 05				jmp	short loc_514		; (44FC)
020A:44F7			loc_513:
020A:44F7  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:44FC			loc_514:
020A:44FC  C3					retn
							                        ;* No entry point to code
020A:44FD  87 DB				xchg	bx,bx
020A:44FF  90					nop
020A:4500  C6 06 2BE6 00			mov	data_244,0		; (020A:2BE6=0)
020A:4505  80 3E 5614 01			cmp	byte ptr data_567,1	; (020A:5614=0EBh)
020A:450A  75 08				jne	loc_515			; Jump if not equal
020A:450C  C6 06 4FD6 12			mov	byte ptr data_554,12h	; (020A:4FD6=0BAh)
020A:4511  E9 0082				jmp	loc_524			; (4596)
020A:4514			loc_515:
020A:4514  89 36 509E				mov	data_557,si		; (020A:509E=1D3Eh)
020A:4518  8B 1E 4F94				mov	bx,data_553		; (020A:4F94=0B304h)
020A:451C  01 1E 509E				add	data_557,bx		; (020A:509E=1D3Eh)
020A:4520  33 DB				xor	bx,bx			; Zero register
020A:4522  81 3C 5856				cmp	word ptr [si],5856h
020A:4526  75 08				jne	loc_516			; Jump if not equal
020A:4528  83 C6 03				add	si,3
020A:452B  C6 06 2BE6 01			mov	data_244,1		; (020A:2BE6=0)
020A:4530			loc_516:
020A:4530  E8 F6F1				call	sub_31			; (3C24)
020A:4533  72 5C				jc	loc_523			; Jump if carry Set
020A:4535  80 3C 3A				cmp	byte ptr [si],3Ah	; ':'
020A:4538  75 17				jne	loc_519			; Jump if not equal
020A:453A  46					inc	si
020A:453B  80 3E 2BE6 01			cmp	data_244,1		; (020A:2BE6=0)
020A:4540  75 06				jne	loc_517			; Jump if not equal
020A:4542  89 16 2C0F				mov	word ptr ds:[2C0Fh],dx	; (020A:2C0F=4DE2h)
020A:4546  EB 04				jmp	short loc_518		; (454C)
020A:4548			loc_517:
020A:4548  89 97 2BE7				mov	data_245[bx],dx		; (020A:2BE7=0)
020A:454C			loc_518:
020A:454C  E8 F6D5				call	sub_31			; (3C24)
020A:454F  72 40				jc	loc_523			; Jump if carry Set
020A:4551			loc_519:
020A:4551  80 3E 2BE6 01			cmp	data_244,1		; (020A:2BE6=0)
020A:4556  75 06				jne	loc_520			; Jump if not equal
020A:4558  89 16 2C11				mov	data_250,dx		; (020A:2C11=40Eh)
020A:455C  EB 2D				jmp	short loc_522		; (458B)
020A:455E			loc_520:
020A:455E  89 97 2BE9				mov	data_246[bx],dx		; (020A:2BE9=0)
020A:4562  80 3C 2C				cmp	byte ptr [si],2Ch	; ','
020A:4565  75 24				jne	loc_522			; Jump if not equal
020A:4567  46					inc	si
020A:4568  E8 F6B9				call	sub_31			; (3C24)
020A:456B  72 24				jc	loc_523			; Jump if carry Set
020A:456D  80 3C 3A				cmp	byte ptr [si],3Ah	; ':'
020A:4570  75 0A				jne	loc_521			; Jump if not equal
020A:4572  46					inc	si
020A:4573  89 97 2BEB				mov	data_247[bx],dx		; (020A:2BEB=0)
020A:4577  E8 F6AA				call	sub_31			; (3C24)
020A:457A  72 15				jc	loc_523			; Jump if carry Set
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 148

020A:457C			loc_521:
020A:457C  89 97 2BED				mov	data_248[bx],dx		; (020A:2BED=0)
020A:4580  80 3C 3B				cmp	byte ptr [si],3Bh	; ';'
020A:4583  75 06				jne	loc_522			; Jump if not equal
020A:4585  46					inc	si
020A:4586  83 C3 08				add	bx,8
020A:4589  EB A5				jmp	short loc_516		; (4530)
020A:458B			loc_522:
020A:458B  FE 06 2BE6				inc	data_244		; (020A:2BE6=0)
020A:458F  EB 05				jmp	short loc_524		; (4596)
020A:4591			loc_523:
020A:4591  C6 06 4FD6 09			mov	byte ptr data_554,9	; (020A:4FD6=0BAh)
020A:4596			loc_524:
020A:4596  C3					retn
							                        ;* No entry point to code
020A:4597  90					nop
020A:4598  2C 30				sub	al,30h			; '0'
020A:459A  3C 7F				cmp	al,7Fh
020A:459C  77 03				ja	loc_525			; Jump if above
020A:459E  A2 35D3				mov	data_388,al		; (020A:35D3=9Ah)
020A:45A1			loc_525:
020A:45A1  C3					retn
020A:45A2  000E[00]				db	14 dup (0)
020A:45B0			loc_526:
020A:45B0  BE 4E43				mov	si,4E43h
020A:45B3  80 3E 327D 00			cmp	data_334,0		; (020A:327D=47h)
020A:45B8  74 03				je	loc_527			; Jump if equal
020A:45BA  E9 F140				jmp	loc_346			; (36FD)
020A:45BD			loc_527:
020A:45BD  B6 01				mov	dh,1
020A:45BF  B2 37				mov	dl,37h			; '7'
020A:45C1  E8 7640				call	$+7643h
020A:45C4  0A F6				or	dh,dh			; Zero ?
020A:45C6  74 09				jz	loc_528			; Jump if zero
020A:45C8  83 4C D6 04				or	word ptr [si-2Ah],4
020A:45CC  B2 25				mov	dl,25h			; '%'
020A:45CE  E8 7633				call	$+7636h
020A:45D1			loc_528:
020A:45D1  A1 4E22				mov	ax,data_502		; (020A:4E22=348Ah)
020A:45D4  A3 4E1C				mov	data_499,ax		; (020A:4E1C=6C6h)
020A:45D7  A1 4E24				mov	ax,data_503		; (020A:4E24=885Eh)
020A:45DA  A3 4E1E				mov	data_500,ax		; (020A:4E1E=30B0h)
020A:45DD  F7 06 4E22 0002			test	data_502,2		; (020A:4E22=348Ah)
020A:45E3  74 07				jz	loc_529			; Jump if zero
020A:45E5  B0 01				mov	al,1
020A:45E7  9A 1510:45B8		;*		call	far ptr sub_162		;*(1510:45B8)
020A:45E7  9A					db	9Ah
020A:45E8  45B8 1510				dw	45B8h, 1510h
020A:45EC			loc_529:
020A:45EC  8A 16 30CE				mov	dl,data_325		; (020A:30CE=31h)
020A:45F0  80 C2 61				add	dl,61h			; 'a'
020A:45F3  88 16 3231				mov	data_330,dl		; (020A:3231=52h)
020A:45F7  BA 4355				mov	dx,4355h
020A:45FA  B4 1A				mov	ah,1Ah
020A:45FC  CD 21				int	21h			; DOS Services  ah=function 1Ah
										;  set DTA(disk xfer area) ds:dx
020A:45FE  BA 3233				mov	dx,3233h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 149

020A:4601  80 3E 3234 3A			cmp	byte ptr data_332,3Ah	; (020A:3234='RCHITECTURE=x86') ':'
020A:4606  74 03				je	loc_530			; Jump if equal
020A:4608  BA 3231				mov	dx,3231h
020A:460B			loc_530:
020A:460B  B9 0000				mov	cx,0
020A:460E  B4 4E				mov	ah,4Eh
020A:4610  CD 21				int	21h			; DOS Services  ah=function 4Eh
										;  find 1st filenam match @ds:dx
020A:4612  72 53				jc	loc_533			; Jump if carry Set
020A:4614  E8 1189				call	sub_47			; (57A0)
020A:4617  A0 1208				mov	al,data_140		; (020A:1208=0)
020A:461A  88 47 52				mov	[bx+52h],al
020A:461D  B4 19				mov	ah,19h
020A:461F  E8 11DA				call	sub_49			; (57FC)
020A:4622  E8 0D0B				call	sub_37			; (5330)
020A:4625  B4 02				mov	ah,2
020A:4627  32 FF				xor	bh,bh			; Zero register
020A:4629  BA 174B				mov	dx,174Bh
020A:462C  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:462C  9A					db	9Ah
020A:462D  2BA8 1510				dw	2BA8h, 1510h
020A:4631  E8 158C				call	sub_54			; (5BC0)
020A:4634			loc_531:
020A:4634  F7 06 35E9 0004			test	data_402,4		; (020A:35E9=6E14h)
020A:463A  75 2B				jnz	loc_533			; Jump if not zero
020A:463C  9A 1510:0760		;*		call	far ptr sub_123		;*(1510:0760)
020A:463C  9A					db	9Ah
020A:463D  0760 1510				dw	760h, 1510h
020A:4641  24 DF				and	al,0DFh
020A:4643  3C 59				cmp	al,59h			; 'Y'
020A:4645  74 20				je	loc_533			; Jump if equal
020A:4647  3C 4E				cmp	al,4Eh			; 'N'
020A:4649  74 07				je	loc_532			; Jump if equal
020A:464B  9A 1510:2B10		;*		call	far ptr sub_140		;*(1510:2B10)
020A:464B  9A					db	9Ah
020A:464C  2B10 1510				dw	2B10h, 1510h
020A:4650  EB E2				jmp	short loc_531		; (4634)
020A:4652			loc_532:
020A:4652  8A 16 30CD				mov	dl,data_324		; (020A:30CD=7Eh)
020A:4656  B4 0E				mov	ah,0Eh
020A:4658  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:465A  E8 1557				call	sub_53			; (5BB4)
020A:465D  E8 1168				call	sub_48			; (57C8)
020A:4660  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:4664  E9 F096				jmp	loc_346			; (36FD)
020A:4667			loc_533:
020A:4667  8B 1E 1326				mov	bx,data_147		; (020A:1326=0)
020A:466B  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:466F  E8 1542				call	sub_53			; (5BB4)
020A:4672  E8 2B28				call	sub_78			; (719D)
020A:4675  B9 000C				mov	cx,0Ch
020A:4678  BE 036A				mov	si,36Ah
020A:467B  BF 3346				mov	di,3346h

020A:467E			locloop_534:
020A:467E  80 3C 00				cmp	byte ptr [si],0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 150

020A:4681  74 09				je	loc_535			; Jump if equal
020A:4683  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:4686  74 04				je	loc_535			; Jump if equal
020A:4688  FC					cld				; Clear direction
020A:4689  A4					movsb				; Mov [si] to es:[di]
020A:468A  E2 F2				loop	locloop_534		; Loop if cx > 0

020A:468C			loc_535:
020A:468C  BB 4DEB				mov	bx,4DEBh
020A:468F  B9 0020				mov	cx,20h
020A:4692  BE 0378				mov	si,378h
020A:4695  BF 3356				mov	di,3356h
020A:4698  FC					cld				; Clear direction
020A:4699  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:469B  F7 47 2E 0002			test	word ptr [bx+2Eh],2
020A:46A0  74 03				jz	loc_536			; Jump if zero
020A:46A2  E9 2617				jmp	loc_998			; (6CBC)
020A:46A5			loc_536:
020A:46A5  F7 06 4E24 0020			test	data_503,20h		; (020A:4E24=885Eh)
020A:46AB  75 0A				jnz	loc_537			; Jump if not zero
020A:46AD  C6 06 6822 2A			mov	byte ptr data_590,2Ah	; (020A:6822=5) '*'
020A:46B2  C6 06 6A59 2A			mov	byte ptr data_592,2Ah	; (020A:6A59=0F7h) '*'
020A:46B7			loc_537:
020A:46B7  83 3E 3037 00			cmp	data_279,0		; (020A:3037=0Eh)
020A:46BC  75 44				jne	loc_540			; Jump if not equal
020A:46BE  8B 1E 2B3D				mov	bx,data_233		; (020A:2B3D=0EBADh)
020A:46C2  8C C8				mov	ax,cs
020A:46C4  2D 0010				sub	ax,10h
020A:46C7  06					push	es
020A:46C8  8E C0				mov	es,ax
020A:46CA  B4 4A				mov	ah,4Ah
020A:46CC  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change memory allocation
										;   bx=bytes/16, es=mem segment
020A:46CE  07					pop	es
020A:46CF  73 06				jnc	loc_538			; Jump if carry=0
020A:46D1  B8 0008				mov	ax,8
020A:46D4  E9 256C				jmp	loc_994			; (6C43)
020A:46D7			loc_538:
020A:46D7  E8 2ADE				call	sub_82			; (71B8)
020A:46DA  8C CB				mov	bx,cs
020A:46DC  83 EB 10				sub	bx,10h
020A:46DF  2B C3				sub	ax,bx
020A:46E1  8B 1E 2B3D				mov	bx,data_233		; (020A:2B3D=0EBADh)
020A:46E5  2B D8				sub	bx,ax
020A:46E7  B9 FFFF				mov	cx,0FFFFh
020A:46EA  81 FB 1000				cmp	bx,1000h
020A:46EE  73 0A				jae	loc_539			; Jump if above or =
020A:46F0  8B CB				mov	cx,bx
020A:46F2  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:46F4  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:46F6  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:46F8  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:46FA			loc_539:
020A:46FA  89 0E 4E82				mov	data_545,cx		; (020A:4E82=0E8F5h)
020A:46FE  D1 E9				shr	cx,1			; Shift w/zeros fill
020A:4700  EB			data_467	db	0EBh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 151

020A:4702			loc_540:
020A:4701  26					db	26h
020A:4702			loc_540:
020A:4702  E8 2A9B				call	sub_79			; (71A0)
020A:4705  8C C0				mov	ax,es
020A:4707  8B 0E 3037				mov	cx,data_279		; (020A:3037=0Eh)
020A:470B  2B C8				sub	cx,ax
020A:470D  81 F9 1000				cmp	cx,1000h
020A:4711  76 03				jbe	loc_541			; Jump if below or =
020A:4713  B9 1000				mov	cx,1000h
020A:4716			loc_541:
020A:4716  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:4718  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:471A  D1 E1				shl	cx,1			; Shift w/zeros fill
020A:471C  89 0E 4E82				mov	data_545,cx		; (020A:4E82=0E8F5h)
020A:4720  FF 0E 4E82				dec	data_545		; (020A:4E82=0E8F5h)
020A:4724  D1 26 4E82				shl	data_545,1		; (020A:4E82=0E8F5h) Shift w/zeros fil
020A:4728			loc_542:
020A:4728  E8 2A75				call	sub_79			; (71A0)
020A:472B  B8 FFFF				mov	ax,0FFFFh
020A:472E  33 FF				xor	di,di			; Zero register
020A:4730  FC					cld				; Clear direction
020A:4731  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:4733  E8 2A67				call	sub_78			; (719D)
020A:4736  B4 2C				mov	ah,2Ch
020A:4738  CD 21				int	21h			; DOS Services  ah=function 2Ch
										;  get time, cx=hrs/min, dx=sec
020A:473A  89 0E 4E73				mov	data_541,cx		; (020A:4E73=0C607h)
020A:473E  89 16 4E75				mov	data_542,dx		; (020A:4E75=0DF06h)
020A:4742  E8 105B				call	sub_47			; (57A0)
020A:4745  A0 1207				mov	al,data_139		; (020A:1207=0)
020A:4748  88 47 4C				mov	[bx+4Ch],al
020A:474B  C6 47 4E 07				mov	byte ptr [bx+4Eh],7
020A:474F  C6 47 3F 00				mov	byte ptr [bx+3Fh],0
020A:4753  C6 47 40 00				mov	byte ptr [bx+40h],0
020A:4757  C6 47 56 00				mov	byte ptr [bx+56h],0
020A:475B  C6 47 70 00				mov	byte ptr [bx+70h],0
020A:475F  C6 47 71 00				mov	byte ptr [bx+71h],0
020A:4763  C6 47 72 00				mov	byte ptr [bx+72h],0
020A:4767  C6 47 73 00				mov	byte ptr [bx+73h],0
020A:476B  C6 47 74 00				mov	byte ptr [bx+74h],0
020A:476F  C6 47 75 00				mov	byte ptr [bx+75h],0
020A:4773  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:4777  C6 47 35 00				mov	byte ptr [bx+35h],0
020A:477B  C6 47 36 00				mov	byte ptr [bx+36h],0
020A:477F  E8 2BA6				call	sub_84			; (7328)
020A:4782  C7 06 2B39 0010			mov	data_230,10h		; (020A:2B39=0A420h)
020A:4788  9A 1510:2C58		;*		call	far ptr sub_144		;*(1510:2C58)
020A:4788  9A					db	9Ah
020A:4789  2C58 1510				dw	2C58h, 1510h
020A:478D  B4 05				mov	ah,5
020A:478F  E8 106A				call	sub_49			; (57FC)
020A:4792  E8 0CBF				call	sub_38			; (5454)
020A:4795  8A 1E 3042				mov	bl,data_286		; (020A:3042=0CFh)
020A:4799  FE CB				dec	bl
020A:479B  BA FFFF				mov	dx,0FFFFh
020A:479E  BE 0000				mov	si,0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 152

020A:47A1  E8 29F0				call	sub_76			; (7194)
020A:47A4			loc_543:
020A:47A4  81 FE 291D				cmp	si,291Dh
020A:47A8  73 08				jae	loc_544			; Jump if above or =
020A:47AA  26: 8B 04				mov	ax,es:[si]
020A:47AD  3D FFFF				cmp	ax,0FFFFh
020A:47B0  75 02				jne	loc_545			; Jump if not equal
020A:47B2			loc_544:
020A:47B2  EB 58				jmp	short loc_555		; (480C)
020A:47B4			loc_545:
020A:47B4  BF 291D				mov	di,291Dh
020A:47B7  32 C9				xor	cl,cl			; Zero register
020A:47B9			loc_546:
020A:47B9  26: 83		data_469	db	83h
020A:47BB  FF3D			data_470	dw	0FF3Dh
020A:47BD  0F74			data_471	dw	0F74h
020A:47BF  26			data_472	db	26h
020A:47C0  3B			data_473	db	3Bh
020A:47C1  05			data_474	db	5
020A:47C2  74 12				jz	loc_549			; Jump if zero
020A:47C4  83 C7 02				add	di,2
020A:47C7  FE C1				inc	cl
020A:47C9  80 F9 FA				cmp	cl,0FAh
020A:47CC  72 EB				jb	loc_546			; Jump if below
020A:47CE			loc_547:
020A:47CE  3B C2				cmp	ax,dx
020A:47D0  74 02				je	loc_548			; Jump if equal
020A:47D2  FE C3				inc	bl
020A:47D4			loc_548:
020A:47D4  8A CB				mov	cl,bl
020A:47D6			loc_549:
020A:47D6  88 0E 3046				mov	data_287,cl		; (020A:3046=0F9h)
020A:47DA  80 F9 19				cmp	cl,19h
020A:47DD  77 07				ja	loc_550			; Jump if above
020A:47DF  80 C1 41				add	cl,41h			; 'A'
020A:47E2  B5 20				mov	ch,20h			; ' '
020A:47E4  EB 13				jmp	short loc_553		; (47F9)
020A:47E6			loc_550:
020A:47E6  B5 41				mov	ch,41h			; 'A'
020A:47E8			loc_551:
020A:47E8  80 E9 1A				sub	cl,1Ah
020A:47EB  80 F9 19				cmp	cl,19h
020A:47EE  76 04				jbe	loc_552			; Jump if below or =
020A:47F0  FE C5				inc	ch
020A:47F2  EB F4				jmp	short loc_551		; (47E8)
020A:47F4			loc_552:
020A:47F4  80 C1 41				add	cl,41h			; 'A'
020A:47F7  86 CD				xchg	cl,ch
020A:47F9			loc_553:
020A:47F9  26: F7 44 0C 8000			test	word ptr es:[si+0Ch],8000h
020A:47FF  75 04				jnz	loc_554			; Jump if not zero
020A:4801  26: 89 4C 0C				mov	es:[si+0Ch],cx
020A:4805			loc_554:
020A:4805  8B D0				mov	dx,ax
020A:4807  83 C6 15				add	si,15h
020A:480A  EB 98				jmp	short loc_543		; (47A4)
020A:480C			loc_555:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 153

020A:480C  BE 0000				mov	si,0
020A:480F			loc_556:
020A:480F  BF 0000				mov	di,0
020A:4812  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:4816  75 03				jne	loc_557			; Jump if not equal
020A:4818  E9 0111				jmp	loc_571			; (492C)
020A:481B			loc_557:
020A:481B  26: F6 44 0B 01			test	byte ptr es:[si+0Bh],1
020A:4820  75 05				jnz	loc_559			; Jump if not zero
020A:4822			loc_558:
020A:4822  83 C6 15				add	si,15h
020A:4825  EB E8				jmp	short loc_556		; (480F)
020A:4827			loc_559:
020A:4827  26: 8B 04				mov	ax,es:[si]
020A:482A  26: 8B 5C 02				mov	bx,es:[si+2]
020A:482E  26: 8B 4C 04				mov	cx,es:[si+4]
020A:4832			loc_560:
020A:4832  26: F6 45 0B 01			test	byte ptr es:[di+0Bh],1
020A:4837  74 0B				jz	loc_563			; Jump if zero
020A:4839			loc_561:
020A:4839  83 C7 15				add	di,15h
020A:483C			loc_562:
020A:483C  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:4840  75 F0				jne	loc_560			; Jump if not equal
020A:4842  EB DE				jmp	short loc_558		; (4822)
020A:4844			loc_563:
020A:4844  26: 3B 05				cmp	ax,es:[di]
020A:4847  75 F0				jne	loc_561			; Jump if not equal
020A:4849  26: 3B 4D 02				cmp	cx,es:[di+2]
020A:484D  72 EA				jb	loc_561			; Jump if below
020A:484F  26: 3B 5D 04				cmp	bx,es:[di+4]
020A:4853  77 E4				ja	loc_561			; Jump if above
020A:4855  26: 3B 5D 02				cmp	bx,es:[di+2]
020A:4859  76 15				jbe	loc_564			; Jump if below or =
020A:485B  26: 3B 4D 04				cmp	cx,es:[di+4]
020A:485F  72 47				jb	loc_568			; Jump if below
020A:4861  8B D3				mov	dx,bx
020A:4863  4A					dec	dx
020A:4864  26: 3B 55 02				cmp	dx,es:[di+2]
020A:4868  74 1B				je	loc_566			; Jump if equal
020A:486A  26: 89 55 04				mov	es:[di+4],dx
020A:486E  EB C9				jmp	short loc_561		; (4839)
020A:4870			loc_564:
020A:4870  26: 3B 4D 04				cmp	cx,es:[di+4]
020A:4874  73 0F				jae	loc_566			; Jump if above or =
020A:4876			loc_565:
020A:4876  8B D1				mov	dx,cx
020A:4878  42					inc	dx
020A:4879  26: 3B 55 04				cmp	dx,es:[di+4]
020A:487D  74 06				je	loc_566			; Jump if equal
020A:487F  26: 89 55 02				mov	es:[di+2],dx
020A:4883  EB B4				jmp	short loc_561		; (4839)
020A:4885			loc_566:
020A:4885  06					push	es
020A:4886  1F					pop	ds
020A:4887  56					push	si
020A:4888  57					push	di
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 154

020A:4889  8B F7				mov	si,di
020A:488B  83 C6 15				add	si,15h
020A:488E  B9 291D				mov	cx,291Dh
020A:4891  2B CE				sub	cx,si
020A:4893  FC					cld				; Clear direction
020A:4894  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:4896  5F					pop	di
020A:4897  5E					pop	si
020A:4898  E8 28EA				call	sub_74			; (7185)
020A:489B  3B F7				cmp	si,di
020A:489D  72 03				jb	loc_567			; Jump if below
020A:489F  83 EE 15				sub	si,15h
020A:48A2			loc_567:
020A:48A2  FE 0E 3040				dec	data_285		; (020A:3040=0B3h)
020A:48A6  EB 94				jmp	short loc_562		; (483C)
020A:48A8			loc_568:
020A:48A8  8B D3				mov	dx,bx
020A:48AA  4A					dec	dx
020A:48AB  26: 3B 55 02				cmp	dx,es:[di+2]
020A:48AF  74 C5				je	loc_565			; Jump if equal
020A:48B1  26: 87 55 04				xchg	es:[di+4],dx
020A:48B5  80 3E 3040 FA			cmp	data_285,0FAh		; (020A:3040=0B3h)
020A:48BA  73 6D				jae	loc_570			; Jump if above or =
020A:48BC  56					push	si
020A:48BD  53					push	bx
020A:48BE  50					push	ax
020A:48BF  B8 0015				mov	ax,15h
020A:48C2  8A 1E 3040				mov	bl,data_285		; (020A:3040=0B3h)
020A:48C6  F6 E3				mul	bl			; ax = reg * al
020A:48C8  05 0000				add	ax,0
020A:48CB  8B F0				mov	si,ax
020A:48CD  8B D9				mov	bx,cx
020A:48CF  43					inc	bx
020A:48D0  3B DA				cmp	bx,dx
020A:48D2  74 53				je	loc_569			; Jump if equal
020A:48D4  26: 89 5C 02				mov	es:[si+2],bx
020A:48D8  58					pop	ax
020A:48D9  26: 89 04				mov	es:[si],ax
020A:48DC  26: 89 54 04				mov	es:[si+4],dx
020A:48E0  26: 8B 55 06				mov	dx,es:[di+6]
020A:48E4  26: 89 54 06				mov	es:[si+6],dx
020A:48E8  26: 8B 55 08				mov	dx,es:[di+8]
020A:48EC  26: 89 54 08				mov	es:[si+8],dx
020A:48F0  26: 8B 55 0A				mov	dx,es:[di+0Ah]
020A:48F4  26: 89 54 0A				mov	es:[si+0Ah],dx
020A:48F8  26: 8B 55 0C				mov	dx,es:[di+0Ch]
020A:48FC  26: 89 54 0C				mov	es:[si+0Ch],dx
020A:4900  26: 8A 55 0E				mov	dl,es:[di+0Eh]
020A:4904  80 E2 FE				and	dl,0FEh
020A:4907  26: 88 54 0E				mov	es:[si+0Eh],dl
020A:490B  26: 8B 55 0F				mov	dx,es:[di+0Fh]
020A:490F  26: 89 54 0F				mov	es:[si+0Fh],dx
020A:4913  26: 8B 55 11				mov	dx,es:[di+11h]
020A:4917  26: 89 54 11				mov	es:[si+11h],dx
020A:491B  26: 8B 55 13				mov	dx,es:[di+13h]
020A:491F  26: 89 54 13				mov	es:[si+13h],dx
020A:4923  FE 06 3040				inc	data_285		; (020A:3040=0B3h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 155

020A:4927			loc_569:
020A:4927  5B					pop	bx
020A:4928  5E					pop	si
020A:4929			loc_570:
020A:4929  E9 FF0D				jmp	loc_561			; (4839)
020A:492C			loc_571:
020A:492C  E8 DF81				call	sub_28			; (28B0)
020A:492F  E8 2862				call	sub_76			; (7194)
020A:4932  8A 16 3040				mov	dl,data_285		; (020A:3040=0B3h)
020A:4936  80 FA 01				cmp	dl,1
020A:4939  77 03				ja	loc_573			; Jump if above
020A:493B			loc_572:
020A:493B  E9 00A9				jmp	loc_579			; (49E7)
020A:493E			loc_573:
020A:493E  BF 0000				mov	di,0
020A:4941  32 F6				xor	dh,dh			; Zero register
020A:4943			loc_574:
020A:4943  26: F6 45 0B 01			test	byte ptr es:[di+0Bh],1
020A:4948  75 F1				jnz	loc_572			; Jump if not zero
020A:494A  26: 80 7D 0A 03			cmp	byte ptr es:[di+0Ah],3
020A:494F  74 63				je	loc_576			; Jump if equal
020A:4951  26: 8B 4D 04				mov	cx,es:[di+4]
020A:4955  26: 2B 4D 02				sub	cx,es:[di+2]
020A:4959  83 F9 64				cmp	cx,64h
020A:495C  72 56				jb	loc_576			; Jump if below
020A:495E  E8 2824				call	sub_74			; (7185)
020A:4961  26: 8B 05				mov	ax,es:[di]
020A:4964  3B 06 304C				cmp	ax,data_289		; (020A:304C=0)
020A:4968  74 4A				je	loc_576			; Jump if equal
020A:496A  8E D8				mov	ds,ax
020A:496C  26: 8B 75 02				mov	si,es:[di+2]
020A:4970  56					push	si
020A:4971  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:4976  06					push	es
020A:4977  9A 1510:3514		;*		call	far ptr sub_148		;*(1510:3514)
020A:4977  9A					db	9Ah
020A:4978  3514 1510				dw	3514h, 1510h
020A:497C  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:4981  9C					pushf				; Push flags
020A:4982  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:4987  5A					pop	dx
020A:4988  8E C2				mov	es,dx
020A:498A  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:498F  5A					pop	dx
020A:4990  75 0A				jnz	loc_575			; Jump if not zero
020A:4992  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:4997  74 03				je	loc_575			; Jump if equal
020A:4999  E8 2B60				call	sub_85			; (74FC)
020A:499C			loc_575:
020A:499C  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:49A1  9D					popf				; Pop flags
020A:49A2  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:49A7  5E					pop	si
020A:49A8  72 0A				jc	loc_576			; Jump if carry Set
020A:49AA  FE C6				inc	dh
020A:49AC  26: 80 4D 0E 80			or	byte ptr es:[di+0Eh],80h
020A:49B1  26: 8B 1D				mov	bx,es:[di]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 156

020A:49B4			loc_576:
020A:49B4  83 C7 15				add	di,15h
020A:49B7  FE CA				dec	dl
020A:49B9  75 88				jnz	loc_574			; Jump if not zero
020A:49BB  E8 27C7				call	sub_74			; (7185)
020A:49BE  80 FE 01				cmp	dh,1
020A:49C1  75 24				jne	loc_579			; Jump if not equal
020A:49C3  8A 16 3040				mov	dl,byte ptr ds:[3040h]	; (1828:3040=5Ah)
020A:49C7  BF 0000				mov	di,0
020A:49CA			loc_577:
020A:49CA  26: 80 7D 0A 03			cmp	byte ptr es:[di+0Ah],3
020A:49CF  74 0F				je	loc_578			; Jump if equal
020A:49D1  26: F6 45 0E 80			test	byte ptr es:[di+0Eh],80h
020A:49D6  75 08				jnz	loc_578			; Jump if not zero
020A:49D8  26: 89 5D 06				mov	es:[di+6],bx
020A:49DC  26: 89 5D 08				mov	es:[di+8],bx
020A:49E0			loc_578:
020A:49E0  83 C7 15				add	di,15h
020A:49E3  FE CA				dec	dl
020A:49E5  75 E3				jnz	loc_577			; Jump if not zero
020A:49E7			loc_579:
020A:49E7  E8 279B				call	sub_74			; (7185)
020A:49EA  F6 06 35D3 40			test	byte ptr ds:[35D3h],40h	; (1828:35D3=7Fh) '@'
020A:49EF  74 25				jz	loc_581			; Jump if zero
020A:49F1  9A 1510:26F0		;*		call	far ptr sub_136		;*(1510:26F0)
020A:49F1  9A					db	9Ah
020A:49F2  26F0 1510				dw	26F0h, 1510h
020A:49F6  C6 06 35E6 00			mov	byte ptr ds:[35E6h],0	; (1828:35E6=0C6h)
020A:49FB  E8 8D92				call	$-726Bh
020A:49FE  8B 1E 4150				mov	bx,word ptr ds:[4150h]	; (1828:4150=3233h)
020A:4A02  E8 59D7				call	sub_98			; (A3DC)
020A:4A05  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (1828:2B3C=0FBh)
020A:4A0A  75 07				jne	loc_580			; Jump if not equal
020A:4A0C  8B 1E 4150				mov	bx,word ptr ds:[4150h]	; (1828:4150=3233h)
020A:4A10  E8 59C9				call	sub_98			; (A3DC)
020A:4A13			loc_580:
020A:4A13  E9 1F9A				jmp	loc_967			; (69B0)
020A:4A16			loc_581:
020A:4A16  9A 1510:4F4C		;*		call	far ptr sub_165		;*(1510:4F4C)
020A:4A16  9A					db	9Ah
020A:4A17  4F4C 1510				dw	4F4Ch, 1510h
020A:4A1B  B2 00				mov	dl,0
020A:4A1D			loc_582:
020A:4A1D  E8 2774				call	sub_76			; (7194)
020A:4A20  B8 0015				mov	ax,15h
020A:4A23  F6 E2				mul	dl			; ax = reg * al
020A:4A25  05 0000				add	ax,0
020A:4A28  8B D8				mov	bx,ax
020A:4A2A  26: 8B 47 0A				mov	ax,es:[bx+0Ah]
020A:4A2E  24 03				and	al,3
020A:4A30  3C 02				cmp	al,2
020A:4A32  77 1F				ja	loc_584			; Jump if above
020A:4A34  26: 8B 07				mov	ax,es:[bx]
020A:4A37  26: 8B 7F 02				mov	di,es:[bx+2]
020A:4A3B  26: 8B 4F 04				mov	cx,es:[bx+4]
020A:4A3F  8E C0				mov	es,ax
020A:4A41  2B CF				sub	cx,di
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 157

020A:4A43  81 F9 03E8				cmp	cx,3E8h
020A:4A47  72 03				jb	loc_583			; Jump if below
020A:4A49  B9 03E8				mov	cx,3E8h
020A:4A4C			loc_583:
020A:4A4C  9A 1510:4C30		;*		call	far ptr sub_164		;*(1510:4C30)
020A:4A4C  9A					db	9Ah
020A:4A4D  4C30 1510				dw	4C30h, 1510h
020A:4A51  72 08				jc	loc_585			; Jump if carry Set
020A:4A53			loc_584:
020A:4A53  FE C2				inc	dl
020A:4A55  3A 16 3040				cmp	dl,byte ptr ds:[3040h]	; (1828:3040=5Ah)
020A:4A59  76 C2				jbe	loc_582			; Jump if below or =
020A:4A5B			loc_585:
020A:4A5B  E8 2736				call	sub_76			; (7194)
020A:4A5E  26: A1 0000				mov	ax,word ptr es:[0]	; (1828:0000=4E82h)
020A:4A62  A3 3050				mov	word ptr ds:[3050h],ax	; (1828:3050=4E66h)
020A:4A65  E9 A1D8				jmp	$-5E25h
							                        ;* No entry point to code
020A:4A68  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (1828:35E6=0C6h)
020A:4A6D  74 5C				je	loc_586			; Jump if equal
020A:4A6F  E8 272B				call	sub_78			; (719D)
020A:4A72  BF 0378				mov	di,378h
020A:4A75  B9 0021				mov	cx,21h
020A:4A78  B0 20				mov	al,20h			; ' '
020A:4A7A  FC					cld				; Clear direction
020A:4A7B  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4A7D  E8 0D20				call	sub_47			; (57A0)
020A:4A80  C6 47 52 00				mov	byte ptr [bx+52h],0
020A:4A84  C6 47 69 0F				mov	byte ptr [bx+69h],0Fh
020A:4A88  C6 47 33 0F				mov	byte ptr [bx+33h],0Fh
020A:4A8C  C6 47 66 0F				mov	byte ptr [bx+66h],0Fh
020A:4A90  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:4A94  E8 0899				call	sub_37			; (5330)
020A:4A97  B4 02				mov	ah,2
020A:4A99  32 FF				xor	bh,bh			; Zero register
020A:4A9B  BA 0912				mov	dx,912h
020A:4A9E  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:4A9E  9A					db	9Ah
020A:4A9F  2BA8 1510				dw	2BA8h, 1510h
020A:4AA3  E8 111A				call	sub_54			; (5BC0)
020A:4AA6  BE 0378				mov	si,378h
020A:4AA9  B1 20				mov	cl,20h			; ' '
020A:4AAB  B3 01				mov	bl,1
020A:4AAD  9A 1510:0620		;*		call	far ptr sub_122		;*(1510:0620)
020A:4AAD  9A					db	9Ah
020A:4AAE  0620 1510				dw	620h, 1510h
020A:4AB2  E8 0D13				call	sub_48			; (57C8)
020A:4AB5  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:4AB9  C6 47 69 07				mov	byte ptr [bx+69h],7
020A:4ABD  C6 47 66 07				mov	byte ptr [bx+66h],7
020A:4AC1  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:4AC5  E8 10EC				call	sub_53			; (5BB4)
020A:4AC8  E8 0989				call	sub_38			; (5454)
020A:4ACB			loc_586:
020A:4ACB  E9 EC4D				jmp	loc_347			; (371B)
							                        ;* No entry point to code
020A:4ACE  2E: 80 3E 3E64 00			cmp	byte ptr cs:[3E64h],0	; (020A:3E64=47h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 158

020A:4AD4  74 08				je	loc_587			; Jump if equal
020A:4AD6  9A 1510:2B10		;*		call	far ptr sub_140		;*(1510:2B10)
020A:4AD6  9A					db	9Ah
020A:4AD7  2B10 1510				dw	2B10h, 1510h
020A:4ADB  E9 EC3D				jmp	loc_347			; (371B)
020A:4ADE			loc_587:
020A:4ADE  E8 0013				call	sub_34			; (4AF4)
020A:4AE1  80 3E 31F0 00			cmp	byte ptr ds:[31F0h],0	; (1828:31F0=6Ch)
020A:4AE6  74 03				je	loc_588			; Jump if equal
020A:4AE8  E8 283D				call	sub_84			; (7328)
020A:4AEB			loc_588:
020A:4AEB  E8 0CDA				call	sub_48			; (57C8)
020A:4AEE  E8 0963				call	sub_38			; (5454)
020A:4AF1  E9 EC27				jmp	loc_347			; (371B)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_34		proc	near
020A:4AF4  E8 0CA9				call	sub_47			; (57A0)
020A:4AF7  C6 47 53 00				mov	byte ptr [bx+53h],0
020A:4AFB  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:4AFF  B4 02				mov	ah,2
020A:4B01  E8 0CF8				call	sub_49			; (57FC)
020A:4B04  29E8			data_476	dw	29E8h
020A:4B06  08 B4 3202				or	byte ptr ds:[3202h][si],dh	; (1828:3202=6)
020A:4B0A  FF					db	0FFh
020A:4B0B  BA 171A				mov	dx,171Ah
020A:4B0E  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:4B0E  9A					db	9Ah
020A:4B0F  2BA8 1510				dw	2BA8h, 1510h
020A:4B13  E8 10AA				call	sub_54			; (5BC0)
020A:4B16  B1 28				mov	cl,28h			; '('
020A:4B18  B3 01				mov	bl,1
020A:4B1A  BE 07E0				mov	si,7E0h
020A:4B1D  9A 1510:0620		;*		call	far ptr sub_122		;*(1510:0620)
020A:4B1D  9A					db	9Ah
020A:4B1E  0620 1510				dw	620h, 1510h
020A:4B22  B3 28				mov	bl,28h			; '('
020A:4B24  2A D9				sub	bl,cl
020A:4B26  32 FF				xor	bh,bh			; Zero register
020A:4B28  83 FB 00				cmp	bx,0
020A:4B2B  75 02				jne	loc_589			; Jump if not equal
020A:4B2D  EB 74				jmp	short loc_592		; (4BA3)
020A:4B2F			loc_589:
020A:4B2F  3C 1B				cmp	al,1Bh
020A:4B31  75 02				jne	loc_590			; Jump if not equal
020A:4B33  EB 6E				jmp	short loc_592		; (4BA3)
020A:4B35			loc_590:
020A:4B35  E8 2665				call	sub_78			; (719D)
020A:4B38  BF 07E0				mov	di,7E0h
020A:4B3B  B0 20				mov	al,20h			; ' '
020A:4B3D  8B CB				mov	cx,bx
020A:4B3F  FC					cld				; Clear direction
020A:4B40  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:4B42  74 5F				jz	loc_592			; Jump if zero
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 159

020A:4B44  BF 07E0				mov	di,7E0h
020A:4B47  B0 20				mov	al,20h			; ' '
020A:4B49  9A 1510:2724		;*		call	far ptr sub_137		;*(1510:2724)
020A:4B49  9A					db	9Ah
020A:4B4A  2724 1510				dw	2724h, 1510h
020A:4B4E  9A 1510:27AC		;*		call	far ptr sub_138		;*(1510:27AC)
020A:4B4E  9A					db	9Ah
020A:4B4F  27AC 1510				dw	27ACh, 1510h
020A:4B53  A2 327E				mov	byte ptr ds:[327Eh],al	; (1828:327E=0B3h)
020A:4B56  3C 01				cmp	al,1
020A:4B58  77 1C				ja	loc_591			; Jump if above
020A:4B5A  B4 10				mov	ah,10h
020A:4B5C  E8 0C9D				call	sub_49			; (57FC)
020A:4B5F  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (1828:1326=0A334h)
020A:4B63  A0 1208				mov	al,byte ptr ds:[1208h]	; (1828:1208=0F7h)
020A:4B66  88 47 52				mov	[bx+52h],al
020A:4B69  E8 1048				call	sub_53			; (5BB4)
020A:4B6C  E8 08E5				call	sub_38			; (5454)
020A:4B6F  9A 1510:0760		;*		call	far ptr sub_123		;*(1510:0760)
020A:4B6F  9A					db	9Ah
020A:4B70  0760 1510				dw	760h, 1510h
020A:4B74  EB 2D				jmp	short loc_592		; (4BA3)
020A:4B76			loc_591:
020A:4B76  BF 31F0				mov	di,31F0h
020A:4B79  B9 0040				mov	cx,40h
020A:4B7C  B0 00				mov	al,0
020A:4B7E  FC					cld				; Clear direction
020A:4B7F  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4B81  BF 0649				mov	di,649h
020A:4B84  B9 000C				mov	cx,0Ch
020A:4B87  B0 20				mov	al,20h			; ' '
020A:4B89  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4B8B  BE 07E0				mov	si,7E0h
020A:4B8E  BF 31F0				mov	di,31F0h
020A:4B91  8B CB				mov	cx,bx
020A:4B93  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:4B95  4F					dec	di
020A:4B96  9A 1510:7270		;*		call	far ptr sub_172		;*(1510:7270)
020A:4B96  9A					db	9Ah
020A:4B97  7270 1510				dw	7270h, 1510h
020A:4B9B  E8 4976				call	sub_97			; (9514)
020A:4B9E  73 03				jnc	loc_592			; Jump if carry=0
020A:4BA0  E9 20A0				jmp	loc_994			; (6C43)
020A:4BA3			loc_592:
020A:4BA3  8A 26 327D				mov	ah,byte ptr ds:[327Dh]	; (1828:327D=33h)
020A:4BA7  E8 0C52				call	sub_49			; (57FC)
020A:4BAA  E8 0C1B				call	sub_48			; (57C8)
020A:4BAD  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:4BB1  C6 47 53 07				mov	byte ptr [bx+53h],7
020A:4BB5  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:4BB9  E8 0FF8				call	sub_53			; (5BB4)
020A:4BBC  E8 0895				call	sub_38			; (5454)
020A:4BBF  C3					retn
				sub_34		endp

							                        ;* No entry point to code
020A:4BC0  80 3E 15CE 01			cmp	data_157,1		; (020A:15CE=0)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 160

020A:4BC5  75 07				jne	loc_593			; Jump if not equal
020A:4BC7  80 36 15D0 01			xor	data_159,1		; (020A:15D0=0)
020A:4BCC  EB 09				jmp	short loc_594		; (4BD7)
020A:4BCE			loc_593:
020A:4BCE  FE 06 15D0				inc	data_159		; (020A:15D0=0)
020A:4BD2  80 26 15D0 03			and	data_159,3		; (020A:15D0=0)
020A:4BD7			loc_594:
020A:4BD7  E8 10CA				call	sub_57			; (5CA4)
020A:4BDA  E8 F894				call	sub_33			; (4471)
020A:4BDD  E8 0874				call	sub_38			; (5454)
020A:4BE0  E9 EB38				jmp	loc_347			; (371B)
							                        ;* No entry point to code
020A:4BE3  F6 06 30A0 C0			test	data_315,0C0h		; (020A:30A0=45h)
020A:4BE8  75 36				jnz	loc_598			; Jump if not zero
020A:4BEA  8A 36 30B0				mov	dh,data_317		; (020A:30B0=44h)
020A:4BEE  F6 C6 1F				test	dh,1Fh
020A:4BF1  74 04				jz	loc_595			; Jump if zero
020A:4BF3  B6 00				mov	dh,0
020A:4BF5  EB 38				jmp	short loc_600		; (4C2F)
020A:4BF7			loc_595:
020A:4BF7  F6 06 30B2 80			test	data_318,80h		; (020A:30B2=54h)
020A:4BFC  75 07				jnz	loc_596			; Jump if not zero
020A:4BFE  80 0E 30B2 80			or	data_318,80h		; (020A:30B2=54h)
020A:4C03  EB 2E				jmp	short loc_601		; (4C33)
020A:4C05			loc_596:
020A:4C05  80 26 30B2 7F			and	data_318,7Fh		; (020A:30B2=54h)
020A:4C0A  B6 01				mov	dh,1
020A:4C0C  F6 06 30A0 10			test	data_315,10h		; (020A:30A0=45h)
020A:4C11  74 02				jz	loc_597			; Jump if zero
020A:4C13  B6 02				mov	dh,2
020A:4C15			loc_597:
020A:4C15  F6 06 30A0 20			test	data_315,20h		; (020A:30A0=45h) ' '
020A:4C1A  74 13				jz	loc_600			; Jump if zero
020A:4C1C  B6			data_477	db	0B6h			; Data table (indexed access)
020A:4C1D  04 EB				add	al,0EBh
020A:4C1F  0F			;*		pop	cs			; Dangerous-8088 only
020A:4C1F  0F					db	0Fh
020A:4C20			loc_598:
020A:4C20  F6 06 30A0 40			test	data_315,40h		; (020A:30A0=45h) '@'
020A:4C25  74 04				jz	loc_599			; Jump if zero
020A:4C27  B6 0C				mov	dh,0Ch
020A:4C29  EB 04				jmp	short loc_600		; (4C2F)
020A:4C2B			loc_599:
020A:4C2B  B6 14				mov	dh,14h
020A:4C2D  EB 00				jmp	short loc_600		; (4C2F)
020A:4C2F			loc_600:
020A:4C2F  88 36 30B0				mov	data_317,dh		; (020A:30B0=44h)
020A:4C33			loc_601:
020A:4C33  B6 01				mov	dh,1
020A:4C35  E8 0A60				call	sub_46			; (5698)
020A:4C38  E9 EAE0				jmp	loc_347			; (371B)
							                        ;* No entry point to code
020A:4C3B  80 3E 35E6 01			cmp	data_400,1		; (020A:35E6=9Ah)
020A:4C40  75 1C				jne	loc_602			; Jump if not equal
020A:4C42  FE 06 35E3				inc	byte ptr ds:[35E3h]	; (020A:35E3=15h)
020A:4C46  80 26 35E3 01			and	byte ptr ds:[35E3h],1	; (020A:35E3=15h)
020A:4C4B  8B 1E 1326				mov	bx,data_147		; (020A:1326=0)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 161

020A:4C4F  C6 47 4A 07				mov	byte ptr [bx+4Ah],7
020A:4C53  F6 06 35E3 01			test	byte ptr ds:[35E3h],1	; (020A:35E3=15h)
020A:4C58  74 04				jz	loc_602			; Jump if zero
020A:4C5A  C6 47 4A 00				mov	byte ptr [bx+4Ah],0
020A:4C5E			loc_602:
020A:4C5E  E8 07F3				call	sub_38			; (5454)
020A:4C61  E9 EAB7				jmp	loc_347			; (371B)
							                        ;* No entry point to code
020A:4C64  E8 0B39				call	sub_47			; (57A0)
020A:4C67  C6 47 68 00				mov	byte ptr [bx+68h],0
020A:4C6B  C6 47 67 0F				mov	byte ptr [bx+67h],0Fh
020A:4C6F  B4 03				mov	ah,3
020A:4C71  E8 0B88				call	sub_49			; (57FC)
020A:4C74  E8 06B9				call	sub_37			; (5330)
020A:4C77  B4 02				mov	ah,2
020A:4C79  32 FF				xor	bh,bh			; Zero register
020A:4C7B  BA 171A				mov	dx,171Ah
020A:4C7E  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:4C7E  9A					db	9Ah
020A:4C7F  2BA8 1510				dw	2BA8h, 1510h
020A:4C83  E8 0F3A				call	sub_54			; (5BC0)
020A:4C86  B1 28				mov	cl,28h			; '('
020A:4C88  B3 03				mov	bl,3
020A:4C8A  BE 07E0				mov	si,7E0h
020A:4C8D  9A 1510:0620		;*		call	far ptr sub_122		;*(1510:0620)
020A:4C8D  9A					db	9Ah
020A:4C8E  0620 1510				dw	620h, 1510h
020A:4C92  B3 28				mov	bl,28h			; '('
020A:4C94  2A D9				sub	bl,cl
020A:4C96  32 FF				xor	bh,bh			; Zero register
020A:4C98  83 FB 00				cmp	bx,0
020A:4C9B  74 13				je	loc_603			; Jump if equal
020A:4C9D  3C 1B				cmp	al,1Bh
020A:4C9F  74 0F				je	loc_603			; Jump if equal
020A:4CA1  E8 24F9				call	sub_78			; (719D)
020A:4CA4  BF 07E0				mov	di,7E0h
020A:4CA7  B0 20				mov	al,20h			; ' '
020A:4CA9  8B CB				mov	cx,bx
020A:4CAB  FC					cld				; Clear direction
020A:4CAC  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:4CAE  75 03				jnz	loc_604			; Jump if not zero
020A:4CB0			loc_603:
020A:4CB0  E9 0086				jmp	loc_608			; (4D39)
020A:4CB3			loc_604:
020A:4CB3  FC					cld				; Clear direction
020A:4CB4  BF 3233				mov	di,3233h
020A:4CB7  B9 0029				mov	cx,29h
020A:4CBA  B0 00				mov	al,0
020A:4CBC  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4CBE  BF 036A				mov	di,36Ah
020A:4CC1  B9 000C				mov	cx,0Ch
020A:4CC4  B0 20				mov	al,20h			; ' '
020A:4CC6  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4CC8  BE 07E0				mov	si,7E0h
020A:4CCB  BF 3233				mov	di,3233h
020A:4CCE  8B CB				mov	cx,bx
020A:4CD0  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 162

020A:4CD2  9A 1510:26A0		;*		call	far ptr sub_135		;*(1510:26A0)
020A:4CD2  9A					db	9Ah
020A:4CD3  26A0 1510				dw	26A0h, 1510h
020A:4CD7  83 C3 04				add	bx,4
020A:4CDA  47					inc	di
020A:4CDB  8B CB				mov	cx,bx
020A:4CDD			loc_605:
020A:4CDD  8A 05				mov	al,[di]
020A:4CDF  3C 3A				cmp	al,3Ah			; ':'
020A:4CE1  74 0D				je	loc_606			; Jump if equal
020A:4CE3  3C 5C				cmp	al,5Ch			; '\'
020A:4CE5  74 09				je	loc_606			; Jump if equal
020A:4CE7  83 F9 01				cmp	cx,1
020A:4CEA  76 05				jbe	loc_607			; Jump if below or =
020A:4CEC  49					dec	cx
020A:4CED  4F					dec	di
020A:4CEE  EB ED				jmp	short loc_605		; (4CDD)
020A:4CF0			loc_606:
020A:4CF0  47					inc	di
020A:4CF1			loc_607:
020A:4CF1  2B D9				sub	bx,cx
020A:4CF3  8B CB				mov	cx,bx
020A:4CF5  41					inc	cx
020A:4CF6  83 F9 0C				cmp	cx,0Ch
020A:4CF9  77 3E				ja	loc_608			; Jump if above
020A:4CFB  8B F7				mov	si,di
020A:4CFD  BF 036A				mov	di,36Ah
020A:4D00  FC			data_478	db	0FCh
020A:4D01  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:4D03  80 3E 3234 3A			cmp	byte ptr data_332,3Ah	; (020A:3234='RCHITECTURE=x86') ':'
020A:4D08  75 2F				jne	loc_608			; Jump if not equal
020A:4D0A  A0 3233				mov	al,data_331		; (020A:3233=41h)
020A:4D0D  24 5F				and	al,5Fh			; '_'
020A:4D0F  3C 41				cmp	al,41h			; 'A'
020A:4D11  72 26				jb	loc_608			; Jump if below
020A:4D13  3C 5A				cmp	al,5Ah			; 'Z'
020A:4D15  77 22				ja	loc_608			; Jump if above
020A:4D17  8A D0				mov	dl,al
020A:4D19  80 EA 41				sub	dl,41h			; 'A'
020A:4D1C  8A DA				mov	bl,dl
020A:4D1E  B4 0E				mov	ah,0Eh
020A:4D20  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:4D22  B4 19				mov	ah,19h
020A:4D24  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:4D26  A2 30CE				mov	data_325,al		; (020A:30CE=31h)
020A:4D29  04 61				add	al,61h			; 'a'
020A:4D2B  A2 066E				mov	byte ptr ds:[66Eh],al	; (020A:066E=0Eh)
020A:4D2E  E8 08AF				call	sub_45			; (55E0)
020A:4D31  8A 16 30CD				mov	dl,data_324		; (020A:30CD=7Eh)
020A:4D35  B4 0E				mov	ah,0Eh
020A:4D37  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:4D39			loc_608:
020A:4D39  E8 0A8C				call	sub_48			; (57C8)
020A:4D3C  C6 47 68 07				mov	byte ptr [bx+68h],7
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 163

020A:4D40  C6 47 67 00				mov	byte ptr [bx+67h],0
020A:4D44  8A			data_479	db	8Ah
020A:4D45  7D26			data_480	dw	7D26h
020A:4D47  32 E8				xor	ch,al
020A:4D49  B1			data_482	db	0B1h
020A:4D4A  0A			data_483	db	0Ah
020A:4D4B  E8			data_484	db	0E8h
020A:4D4C  66			data_485	db	66h
020A:4D4D  0E E8 0703				callf	sub_38			; (5454)
020A:4D51  E9 E9C7				jmp	loc_347			; (371B)
							                        ;* No entry point to code
020A:4D54  A0 2B3B				mov	al,data_231		; (020A:2B3B=0A0h)
020A:4D57  04 02				add	al,2
020A:4D59  3C 14				cmp	al,14h
020A:4D5B  72 02				jb	loc_609			; Jump if below
020A:4D5D  B0 04				mov	al,4
020A:4D5F			loc_609:
020A:4D5F  E8 121A				call	sub_62			; (5F7C)
020A:4D62  E9 E9B6				jmp	loc_347			; (371B)
020A:4D65			loc_610:
020A:4D65  B4 11				mov	ah,11h
020A:4D67  E9 1FCE				jmp	loc_1002		; (6D38)
							                        ;* No entry point to code
020A:4D6A  A0 16AB				mov	al,data_164		; (020A:16AB=41h)
020A:4D6D  BB 16AD				mov	bx,16ADh
020A:4D70  D7					xlat				; al=[al+[bx]] table
020A:4D71  A2 16AB				mov	data_164,al		; (020A:16AB=41h)
020A:4D74  E8 0FB9				call	sub_58			; (5D30)
020A:4D77  E8 06DA				call	sub_38			; (5454)
020A:4D7A  E9 E99E				jmp	loc_347			; (371B)
							                        ;* No entry point to code
020A:4D7D  80 3E 35E6 00			cmp	data_400,0		; (020A:35E6=9Ah)
020A:4D82  74 20				je	loc_614			; Jump if equal
020A:4D84  A0 35E4				mov	al,data_399		; (020A:35E4=8Ch)
020A:4D87  A8 01				test	al,1
020A:4D89  74 0C				jz	loc_612			; Jump if zero
020A:4D8B  A8 06				test	al,6
020A:4D8D  74 04				jz	loc_611			; Jump if zero
020A:4D8F  B0 09				mov	al,9
020A:4D91  EB 06				jmp	short loc_613		; (4D99)
020A:4D93			loc_611:
020A:4D93  B0 02				mov	al,2
020A:4D95  EB 02				jmp	short loc_613		; (4D99)
020A:4D97			loc_612:
020A:4D97  B0 03				mov	al,3
020A:4D99			loc_613:
020A:4D99  A2 35E4				mov	data_399,al		; (020A:35E4=8Ch)
020A:4D9C  9A 1510:09D8		;*		call	far ptr sub_130		;*(1510:09D8)
020A:4D9C  9A					db	9Ah
020A:4D9D  09D8 1510				dw	9D8h, 1510h
020A:4DA1  E8 06B0				call	sub_38			; (5454)
020A:4DA4			loc_614:
020A:4DA4  E9 E974				jmp	loc_347			; (371B)
							                        ;* No entry point to code
020A:4DA7  BF 13E8				mov	di,13E8h
020A:4DAA  A0 13E4				mov	al,data_152		; (020A:13E4=0)
020A:4DAD  32 C9				xor	cl,cl			; Zero register
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 164

020A:4DAF			loc_615:
020A:4DAF  3A 05				cmp	al,[di]
020A:4DB1  74 0C				je	loc_616			; Jump if equal
020A:4DB3  FE C1				inc	cl
020A:4DB5  80 F9 0D				cmp	cl,0Dh
020A:4DB8  73 05				jae	loc_616			; Jump if above or =
020A:4DBA  83 C7 10				add	di,10h
020A:4DBD  EB F0				jmp	short loc_615		; (4DAF)
020A:4DBF			loc_616:
020A:4DBF  80 F9 0C				cmp	cl,0Ch
020A:4DC2  72 03				jb	loc_617			; Jump if below
020A:4DC4  BF 13D8				mov	di,13D8h
020A:4DC7			loc_617:
020A:4DC7  83 C7 10				add	di,10h
020A:4DCA  8A 45 0D				mov	al,[di+0Dh]
020A:4DCD  A2 13E5				mov	data_153,al		; (020A:13E5=0)
020A:4DD0  8A 05				mov	al,[di]
020A:4DD2  A2 13E4				mov	data_152,al		; (020A:13E4=0)
020A:4DD5  8B 45 0B				mov	ax,[di+0Bh]
020A:4DD8  A3 13E6				mov	data_154,ax		; (020A:13E6=0)
020A:4DDB  9A 1510:2B34		;*		call	far ptr sub_141		;*(1510:2B34)
020A:4DDB  9A					db	9Ah
020A:4DDC  2B34 1510				dw	2B34h, 1510h
020A:4DE0  E8 0671				call	sub_38			; (5454)
020A:4DE3  E9 E935				jmp	loc_347			; (371B)
							                        ;* No entry point to code
020A:4DE6  01 02				add	[bp+si],ax
020A:4DE8  04 10				add	al,10h
020A:4DEA  18 20				sbb	[bx+si],ah
020A:4DEC  28 40 48				sub	[bx+si+48h],al
020A:4DEF  88 00				mov	[bx+si],al
020A:4DF1  8A 36 30A0				mov	dh,data_315		; (020A:30A0=45h)
020A:4DF5  B8 0000				mov	ax,0
020A:4DF8  56					push	si
020A:4DF9  BE 1926				mov	si,1926h
020A:4DFC			loc_618:
020A:4DFC  2E: 3A 34				cmp	dh,cs:[si]
020A:4DFF  74 11				je	loc_620			; Jump if equal
020A:4E01  46					inc	si
020A:4E02  802E			data_486	dw	802Eh
020A:4E04  3C			data_487	db	3Ch
020A:4E05  00 74 02				add	[si+2],dh
020A:4E08  EB			data_489	db	0EBh
020A:4E0A			loc_619:
020A:4E09  F2/ B6		data_490	db	0B6h
020A:4E0B  C601			data_491	dw	0C601h
020A:4E0D  B006			data_492	dw	0B006h
020A:4E0F  30			data_493	db	30h
020A:4E10  00			data_494	db	0
020A:4E11  4E			data_495	db	4Eh
020A:4E12			loc_620:
020A:4E12  46					inc	si
020A:4E13  2E: 80 3C 00				cmp	byte ptr cs:[si],0
020A:4E17  75			data_497	db	75h
020A:4E18  08 BE 1926				or	[bp+1926h],bh
020A:4E1C  06C6			data_499	dw	6C6h
020A:4E1E  30B0			data_500	dw	30B0h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 165

020A:4E20  2E00			data_501	dw	2E00h
020A:4E22  348A			data_502	dw	348Ah
020A:4E24  885E			data_503	dw	885Eh
020A:4E26  A036			data_504	dw	0A036h
020A:4E28  F630			data_505	dw	0F630h
020A:4E2A  B006			data_506	dw	0B006h
020A:4E2C  30			data_507	db	30h
020A:4E2D  741F			data_508	dw	741Fh
020A:4E2F  C61D			data_509	dw	0C61Dh
020A:4E31  B006			data_510	dw	0B006h
020A:4E33  0130			data_511	dw	130h
020A:4E35  C6F6			data_512	dw	0C6F6h
020A:4E37  7410			data_513	dw	7410h
020A:4E39  C607			data_514	dw	0C607h
020A:4E3B  B006			data_515	dw	0B006h
020A:4E3D  0230			data_516	dw	230h
020A:4E3F  0CEB			data_517	dw	0CEBh
020A:4E41			loc_622:
020A:4E41  C6F6			data_518	dw	0C6F6h
020A:4E43  7420			data_519	dw	7420h
020A:4E45  C607			data_520	dw	0C607h
020A:4E47  B006			data_521	dw	0B006h
020A:4E49  0430			data_522	dw	430h
020A:4E4B  18EB			data_523	dw	18EBh
020A:4E4D			loc_623:
020A:4E4D  06F6			data_524	dw	6F6h
020A:4E4F  30A0			data_525	dw	30A0h
020A:4E51  74C0			data_526	dw	74C0h
020A:4E53  C611			data_527	dw	0C611h
020A:4E55  B006			data_528	dw	0B006h
020A:4E57  0C30			data_529	dw	0C30h
020A:4E59  06F6			data_530	dw	6F6h
020A:4E5B  30A0			data_531	dw	30A0h
020A:4E5D  80			data_532	db	80h
020A:4E5E  0574			data_533	dw	574h
020A:4E60  06C6			data_534	dw	6C6h
020A:4E62  30B0			data_535	dw	30B0h
020A:4E64  B614			data_536	dw	0B614h
020A:4E66  E801			data_537	dw	0E801h
020A:4E68  2E					db	2Eh
020A:4E69  08 E9				or	cl,ch
020A:4E6B  AE					scasb				; Scan es:[di] for al
020A:4E6C  E8			data_538	db	0E8h
020A:4E6D  3E80			data_539	dw	3E80h
020A:4E6F  DF					db	0DFh
020A:4E70  35 7400				xor	ax,7400h
020A:4E73  C607			data_541	dw	0C607h
020A:4E75  DF06			data_542	dw	0DF06h
020A:4E77  35 EB00				xor	ax,0EB00h
020A:4E7A  05 06C6				add	ax,6C6h
020A:4E7D  DF					db	0DFh
020A:4E7E  35 E860				xor	ax,0E860h
020A:4E81  EE					out	dx,al			; port 457Eh ??I/O Non-standard
020A:4E82  E8F5			data_545	dw	0E8F5h
020A:4E84  CE					into				; Int 4 on overflow
020A:4E85  05 92E9				add	ax,92E9h
020A:4E88  E8 3E80				call	$+3E83h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 166

020A:4E8B  35E6			data_548	dw	35E6h
020A:4E8D  00			data_549	db	0
020A:4E8E  74			data_550	db	74h
020A:4E8F  23 8A 7F1E				and	cx,[bp+si+7F1Eh]
020A:4E93  4E					dec	si
020A:4E94  F6 C3 07				test	bl,7
020A:4E97  74 07				jz	loc_627			; Jump if zero
020A:4E99  C6 06 4E7F 00			mov	byte ptr ds:[4E7Fh],0	; (020A:4E7F=60h)
020A:4E9E  EB 0D				jmp	short loc_628		; (4EAD)
020A:4EA0			loc_627:
020A:4EA0  80 0E 4E7F 07			or	byte ptr ds:[4E7Fh],7	; (020A:4E7F=60h)
020A:4EA5  B0 0A				mov	al,0Ah
020A:4EA7  E8 10D2				call	sub_62			; (5F7C)
020A:4EAA  E9 E86E				jmp	loc_347			; (371B)
020A:4EAD			loc_628:
020A:4EAD  E8 0DA4				call	sub_56			; (5C54)
020A:4EB0  E9 E868				jmp	loc_347			; (371B)
020A:4EB3			loc_629:
020A:4EB3  E9 E8C0				jmp	loc_354			; (3776)
							                        ;* No entry point to code
020A:4EB6  E8 08E7				call	sub_47			; (57A0)
020A:4EB9  B4 18				mov	ah,18h
020A:4EBB  E8 093E				call	sub_49			; (57FC)
020A:4EBE  E8 0593				call	sub_38			; (5454)
020A:4EC1  9A 1510:0760		;*		call	far ptr sub_123		;*(1510:0760)
020A:4EC1  9A					db	9Ah
020A:4EC2  0760 1510				dw	760h, 1510h
020A:4EC6  2C 30				sub	al,30h			; '0'
020A:4EC8  3C 7F				cmp	al,7Fh
020A:4ECA  77 3A				ja	loc_632			; Jump if above
020A:4ECC  A2 35D3				mov	data_388,al		; (020A:35D3=9Ah)
020A:4ECF  A8 EB				test	al,0EBh
020A:4ED1  74 2F				jz	loc_631			; Jump if zero
020A:4ED3  80 3E 133E 01			cmp	data_150,1		; (020A:133E=0)
020A:4ED8  74 28				je	loc_631			; Jump if equal
020A:4EDA  50					push	ax
020A:4EDB  51					push	cx
020A:4EDC  57					push	di
020A:4EDD  06					push	es
020A:4EDE  1E					push	ds
020A:4EDF  07					pop	es
020A:4EE0  B9 001D				mov	cx,1Dh
020A:4EE3  B0 20				mov	al,20h			; ' '
020A:4EE5  BF 0708				mov	di,708h
020A:4EE8  FC					cld				; Clear direction
020A:4EE9  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:4EEB  BD 071C				mov	bp,71Ch
020A:4EEE  A1 4E82				mov	ax,data_545		; (020A:4E82=0E8F5h)
020A:4EF1  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:4EF1  9A					db	9Ah
020A:4EF2  021C 1510				dw	21Ch, 1510h
020A:4EF6  8B 3E 1326				mov	di,data_147		; (020A:1326=0)
020A:4EFA  C6 45 5D 07				mov	byte ptr [di+5Dh],7
020A:4EFE  07					pop	es
020A:4EFF  5F					pop	di
020A:4F00  59					pop	cx
020A:4F01  58					pop	ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 167

020A:4F02			loc_631:
020A:4F02  A8 08				test	al,8
020A:4F04  75 03				jnz	loc_633			; Jump if not zero
020A:4F06			loc_632:
020A:4F06  E9 00B3				jmp	loc_637			; (4FBC)
020A:4F09			loc_633:
020A:4F09  80 26 35D3 F7			and	data_388,0F7h		; (020A:35D3=9Ah)
020A:4F0E  B4 23				mov	ah,23h			; '#'
020A:4F10  E8 08E9				call	sub_49			; (57FC)
020A:4F13  E8			data_552	db	0E8h
020A:4F14  1A 04				sbb	al,[si]
020A:4F16  B4 02				mov	ah,2
020A:4F18  32 FF				xor	bh,bh			; Zero register
020A:4F1A  BA 1710				mov	dx,1710h
020A:4F1D  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:4F1D  9A					db	9Ah
020A:4F1E  2BA8 1510				dw	2BA8h, 1510h
020A:4F22  E8 0C9B				call	sub_54			; (5BC0)
020A:4F25  9A 1510:0760		;*		call	far ptr sub_123		;*(1510:0760)
020A:4F25  9A					db	9Ah
020A:4F26  0760 1510				dw	760h, 1510h
020A:4F2A  8A D0				mov	dl,al
020A:4F2C  2C 30				sub	al,30h			; '0'
020A:4F2E  3C 10				cmp	al,10h
020A:4F30  76 03				jbe	loc_634			; Jump if below or =
020A:4F32  E9 0087				jmp	loc_637			; (4FBC)
020A:4F35			loc_634:
020A:4F35  D0 E0				shl	al,1			; Shift w/zeros fill
020A:4F37  A2 35D4				mov	data_389,al		; (020A:35D4=8Ch)
020A:4F3A  9A 1510:07A0		;*		call	far ptr sub_125		;*(1510:07A0)
020A:4F3A  9A					db	9Ah
020A:4F3B  07A0 1510				dw	7A0h, 1510h
020A:4F3F  B4 02				mov	ah,2
020A:4F41  32 FF				xor	bh,bh			; Zero register
020A:4F43  BA 1727				mov	dx,1727h
020A:4F46  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:4F46  9A					db	9Ah
020A:4F47  2BA8 1510				dw	2BA8h, 1510h
020A:4F4B  B1 04				mov	cl,4
020A:4F4D  B3 02				mov	bl,2
020A:4F4F  BE 07ED				mov	si,7EDh
020A:4F52  9A 1510:0620		;*		call	far ptr sub_122		;*(1510:0620)
020A:4F52  9A					db	9Ah
020A:4F53  0620 1510				dw	620h, 1510h
020A:4F57  3C 1B				cmp	al,1Bh
020A:4F59  74 61				je	loc_637			; Jump if equal
020A:4F5B  3C 0D				cmp	al,0Dh
020A:4F5D  75 19				jne	loc_636			; Jump if not equal
020A:4F5F  A1 0699				mov	ax,word ptr ds:[699h]	; (020A:0699=0B050h)
020A:4F62  A3 07ED				mov	word ptr ds:[7EDh],ax	; (020A:07ED=2400h)
020A:4F65  A1 069B				mov	ax,word ptr ds:[69Bh]	; (020A:069B=47Fh)
020A:4F68  A3 07EF				mov	data_100,ax		; (020A:07EF=0C75h)
020A:4F6B  B9 0004				mov	cx,4

020A:4F6E			locloop_635:
020A:4F6E  8A 14				mov	dl,[si]
020A:4F70  46					inc	si
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 168

020A:4F71  9A 1510:07A0		;*		call	far ptr sub_125		;*(1510:07A0)
020A:4F71  9A					db	9Ah
020A:4F72  07A0 1510				dw	7A0h, 1510h
020A:4F76  E2 F6				loop	locloop_635		; Loop if cx > 0

020A:4F78			loc_636:
020A:4F78  80 F9 00				cmp	cl,0
020A:4F7B  75 3F				jne	loc_637			; Jump if not equal
020A:4F7D  B9 0080				mov	cx,80h
020A:4F80  BF 07ED				mov	di,7EDh
020A:4F83  E8 EC5A		;*		call	sub_30			;*(3BE0)
020A:4F83  E8 5A EC				db	0E8h, 5Ah,0ECh
020A:4F86  73 34				jnc	loc_637			; Jump if carry=0
020A:4F88  89 16 35D5				mov	data_390,dx		; (020A:35D5=1032h)
020A:4F8C  B2 3A				mov	dl,3Ah			; ':'
020A:4F8E  9A 1510:07A0		;*		call	far ptr sub_125		;*(1510:07A0)
020A:4F8E  9A					db	9Ah
020A:4F8F  07A0 1510				dw	7A0h, 1510h
020A:4F93  B1 04				mov	cl,4
020A:4F95  B3 02				mov	bl,2
020A:4F97  BE 07F2				mov	si,7F2h
020A:4F9A  9A 1510:0620		;*		call	far ptr sub_122		;*(1510:0620)
020A:4F9A  9A					db	9Ah
020A:4F9B  0620 1510				dw	620h, 1510h
020A:4F9F  3C 1B				cmp	al,1Bh
020A:4FA1  74 19				je	loc_637			; Jump if equal
020A:4FA3  80 F9 00				cmp	cl,0
020A:4FA6  75 14				jne	loc_637			; Jump if not equal
020A:4FA8  B9 0080				mov	cx,80h
020A:4FAB  BF 07F2				mov	di,7F2h
020A:4FAE  E8 EC2F		;*		call	sub_30			;*(3BE0)
020A:4FAE  E8 2F EC				db	0E8h, 2Fh,0ECh
020A:4FB1  73 09				jnc	loc_637			; Jump if carry=0
020A:4FB3  89 16 35D7				mov	data_391,dx		; (020A:35D7=0BF15h)
020A:4FB7  80 0E 35D3 08			or	data_388,8		; (020A:35D3=9Ah)
020A:4FBC			loc_637:
020A:4FBC  E8 0BF5				call	sub_53			; (5BB4)
020A:4FBF  E8 0806				call	sub_48			; (57C8)
020A:4FC2  E9 E738				jmp	loc_346			; (36FD)
020A:4FC5			loc_638:
020A:4FC5  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:4FCA  06					push	es
020A:4FCB  80 3E 1329 01			cmp	data_149,1		; (020A:1329=0)
020A:4FD0  75 37				jne	loc_642			; Jump if not equal
020A:4FD2  B4 02				mov	ah,2
020A:4FD4  32 FF				xor	bh,bh			; Zero register
020A:4FD6  BA			data_554	db	0BAh
020A:4FD7  00			data_555	db	0
020A:4FD8  05 A89A				add	ax,0A89Ah
020A:4FDB  2B 10				sub	dx,[bx+si]
020A:4FDD  15 33BE				adc	ax,33BEh
020A:4FE0  00 B9 0623				add	byte ptr ds:[623h][bx+di],bh	; (020A:0623=90h)
020A:4FE4  81 E9 0033				sub	cx,33h
020A:4FE8  49					dec	cx
020A:4FE9  E8 21B4				call	sub_79			; (71A0)

020A:4FEC			locloop_639:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 169

020A:4FEC  26: 8A 14				mov	dl,es:[si]
020A:4FEF  80 EA 23				sub	dl,23h			; '#'
020A:4FF2  80 FA 23				cmp	dl,23h			; '#'
020A:4FF5  74 05				je	loc_640			; Jump if equal
020A:4FF7  80 FA 40				cmp	dl,40h			; '@'
020A:4FFA  75 02				jne	loc_641			; Jump if not equal
020A:4FFC			loc_640:
020A:4FFC  B2 20				mov	dl,20h			; ' '
020A:4FFE			loc_641:
020A:4FFE  9A 1510:07A0		;*		call	far ptr sub_125		;*(1510:07A0)
020A:4FFE  9A					db	9Ah
020A:4FFF  07A0 1510				dw	7A0h, 1510h
020A:5003  46					inc	si
020A:5004  E2 E6				loop	locloop_639		; Loop if cx > 0

020A:5006  E9 00C9				jmp	loc_652			; (50D2)
020A:5009			loc_642:
020A:5009  8E 06 131B				mov	es,data_143		; (020A:131B=0)
020A:500D  BE 0033				mov	si,33h
020A:5010  B9 0623				mov	cx,623h
020A:5013  81 E9 0033				sub	cx,33h
020A:5017  E8 047E				call	sub_41			; (5498)
020A:501A  B7 07				mov	bh,7
020A:501C  8A 16 1206				mov	dl,data_138		; (020A:1206=0)
020A:5020  BF 0320				mov	di,320h
020A:5023  03 3E 131D				add	di,data_144		; (020A:131D=0)
020A:5027  E8 215E				call	sub_75			; (7188)

020A:502A			locloop_643:
020A:502A  8A DF				mov	bl,bh
020A:502C  1E					push	ds
020A:502D  E8 2155				call	sub_74			; (7185)
020A:5030  80 3E 2B44 02			cmp	data_237,2		; (020A:2B44=0AEh)
020A:5035  1F					pop	ds
020A:5036  74 25				jz	loc_646			; Jump if zero
020A:5038  80 3C 63				cmp	byte ptr [si],63h	; 'c'
020A:503B  75 06				jne	loc_644			; Jump if not equal
020A:503D  B7 0F				mov	bh,0Fh
020A:503F  8A DF				mov	bl,bh
020A:5041  EB 0E				jmp	short loc_645		; (5051)
020A:5043			loc_644:
020A:5043  80 3C 46				cmp	byte ptr [si],46h	; 'F'
020A:5046  75 23				jne	loc_647			; Jump if not equal
020A:5048  1E					push	ds
020A:5049  E8 2139				call	sub_74			; (7185)
020A:504C  8A 1E 1207				mov	bl,data_139		; (020A:1207=0)
020A:5050  1F					pop	ds
020A:5051			loc_645:
020A:5051  FC					cld				; Clear direction
020A:5052  B0 20				mov	al,20h			; ' '
020A:5054  AA					stosb				; Store al to es:[di]
020A:5055  46					inc	si
020A:5056  26: 88 1D				mov	es:[di],bl
020A:5059  47					inc	di
020A:505A  49					dec	cx
020A:505B  EB 1C				jmp	short loc_649		; (5079)
020A:505D			loc_646:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 170

020A:505D  81 3C 207C				cmp	word ptr [si],207Ch
020A:5061  74 0D				je	loc_648			; Jump if equal
020A:5063  81 3C 7C7C				cmp	word ptr [si],7C7Ch
020A:5067  74 07				je	loc_648			; Jump if equal
020A:5069  EB 0E				jmp	short loc_649		; (5079)
020A:506B			loc_647:
020A:506B  80 3C A3				cmp	byte ptr [si],0A3h
020A:506E  72 09				jb	loc_649			; Jump if below
020A:5070			loc_648:
020A:5070  1E					push	ds
020A:5071  E8 2111				call	sub_74			; (7185)
020A:5074  8A 1E 1206				mov	bl,data_138		; (020A:1206=0)
020A:5078  1F					pop	ds
020A:5079			loc_649:
020A:5079  FC					cld				; Clear direction
020A:507A  50					push	ax
020A:507B  AC					lodsb				; String [si] to al
020A:507C  2C 23				sub	al,23h			; '#'
020A:507E  AA					stosb				; Store al to es:[di]
020A:507F  58					pop	ax
020A:5080  26: 88 1D				mov	es:[di],bl
020A:5083  47					inc	di
020A:5084  E2 A4				loop	locloop_643		; Loop if cx > 0

020A:5086  BE 0001				mov	si,1
020A:5089  B9 001A				mov	cx,1Ah
020A:508C  81 E9 0001				sub	cx,1
020A:5090  BF 016B				mov	di,16Bh
020A:5093  81 EF 0096				sub	di,96h
020A:5097  D1 E7				shl	di,1			; Shift w/zeros fill
020A:5099  1E					push	ds
020A:509A  E8 20E8				call	sub_74			; (7185)
020A:509D  03 3E 131D				add	di,data_144		; (020A:131D=0)
020A:50A1  1F					pop	ds
020A:50A2  FC					cld				; Clear direction

020A:50A3			locloop_650:
020A:50A3  A4					movsb				; Mov [si] to es:[di]
020A:50A4  47					inc	di
020A:50A5  E2 FC				loop	locloop_650		; Loop if cx > 0

020A:50A7  BE 001A				mov	si,1Ah
020A:50AA  B9 001A				mov	cx,1Ah
020A:50AD  81 E9 0001				sub	cx,1
020A:50B1  BF 016B				mov	di,16Bh
020A:50B4  81 EF 0096				sub	di,96h
020A:50B8  D1 E7				shl	di,1			; Shift w/zeros fill
020A:50BA  81 C7 00A0				add	di,0A0h
020A:50BE  1E					push	ds
020A:50BF  E8 20C3				call	sub_74			; (7185)
020A:50C2  03 3E 131D				add	di,data_144		; (020A:131D=0)
020A:50C6  1F					pop	ds
020A:50C7  FC					cld				; Clear direction

020A:50C8			locloop_651:
020A:50C8  A4					movsb				; Mov [si] to es:[di]
020A:50C9  47					inc	di
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 171

020A:50CA  E2 FC				loop	locloop_651		; Loop if cx > 0

020A:50CC  E8 20B6				call	sub_74			; (7185)
020A:50CF  E8 03EA				call	sub_42			; (54BC)
020A:50D2			loc_652:
020A:50D2  9A 1510:0760		;*		call	far ptr sub_123		;*(1510:0760)
020A:50D2  9A					db	9Ah
020A:50D3  0760 1510				dw	760h, 1510h
020A:50D7  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:50DC  9C					pushf				; Push flags
020A:50DD  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:50E2  5A					pop	dx
020A:50E3  8E C2				mov	es,dx
020A:50E5  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:50EA  5A					pop	dx
020A:50EB  75 0A				jnz	loc_653			; Jump if not zero
020A:50ED  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:50F2  74 03				je	loc_653			; Jump if equal
020A:50F4  E8 2405				call	sub_85			; (74FC)
020A:50F7			loc_653:
020A:50F7  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:50FC  9D					popf				; Pop flags
020A:50FD  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:5102  E9 E5F8				jmp	loc_346			; (36FD)
020A:5105			loc_654:
020A:5105  FE 06 14FA				inc	data_155		; (020A:14FA=0)
020A:5109  80 3E 14FA 03			cmp	data_155,3		; (020A:14FA=0)
020A:510E  72 05				jb	loc_655			; Jump if below
020A:5110  C6 06 14FA 00			mov	data_155,0		; (020A:14FA=0)
020A:5115			loc_655:
020A:5115  9A 1510:2B34		;*		call	far ptr sub_141		;*(1510:2B34)
020A:5115  9A					db	9Ah
020A:5116  2B34 1510				dw	2B34h, 1510h
020A:511A  E8 0337				call	sub_38			; (5454)
020A:511D  E9 E5FB				jmp	loc_347			; (371B)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_35		proc	near
020A:5120  F7 06 35E9 0008			test	data_402,8		; (020A:35E9=6E14h)
020A:5126  75 03				jnz	loc_656			; Jump if not zero
020A:5128  E9 0089				jmp	loc_660			; (51B4)
020A:512B			loc_656:
020A:512B  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:5131  75 08				jne	loc_657			; Jump if not equal
020A:5133  2E: 80 3E 3E64 00			cmp	byte ptr cs:[3E64h],0	; (020A:3E64=47h)
020A:5139  74 79				je	loc_660			; Jump if equal
020A:513B			loc_657:
020A:513B  50					push	ax
020A:513C  53					push	bx
020A:513D  51					push	cx
020A:513E  52					push	dx
020A:513F  56					push	si
020A:5140  57					push	di
020A:5141  55					push	bp
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 172

020A:5142  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:5147  1E					push	ds
020A:5148  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:514D  06					push	es
020A:514E  BB 1CF8				mov	bx,1CF8h
020A:5151  BA 0007				mov	dx,7
020A:5154  E8 D809		;*		call	sub_29			;*(2960)
020A:5154  E8 09 D8				db	0E8h, 09h,0D8h
020A:5157  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:515C  9C					pushf				; Push flags
020A:515D  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:5162  5A					pop	dx
020A:5163  8E C2				mov	es,dx
020A:5165  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:516A  5A					pop	dx
020A:516B  75 0A				jnz	loc_658			; Jump if not zero
020A:516D  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:5172  74 03				je	loc_658			; Jump if equal
020A:5174  E8 2385				call	sub_85			; (74FC)
020A:5177			loc_658:
020A:5177  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:517C  9D					popf				; Pop flags
020A:517D  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:5182  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:5187  9C					pushf				; Push flags
020A:5188  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:518D  5A					pop	dx
020A:518E  8E DA				mov	ds,dx
020A:5190  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:5195  5A					pop	dx
020A:5196  75 0A				jnz	loc_659			; Jump if not zero
020A:5198  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:519D  74 03				je	loc_659			; Jump if equal
020A:519F  E8 235A				call	sub_85			; (74FC)
020A:51A2			loc_659:
020A:51A2  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:51A7  9D					popf				; Pop flags
020A:51A8  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:51AD  5D					pop	bp
020A:51AE  5F					pop	di
020A:51AF  5E					pop	si
020A:51B0  5A					pop	dx
020A:51B1  59					pop	cx
020A:51B2  5B					pop	bx
020A:51B3  58					pop	ax
020A:51B4			loc_660:
020A:51B4  C3					retn
				sub_35		endp

							                        ;* No entry point to code
020A:51B5  87 DB				xchg	bx,bx
020A:51B7  90					nop
020A:51B8  50					push	ax
020A:51B9  53					push	bx
020A:51BA  51					push	cx
020A:51BB  52					push	dx
020A:51BC  56					push	si
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 173

020A:51BD  57					push	di
020A:51BE  55					push	bp
020A:51BF  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:51C4  1E					push	ds
020A:51C5  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:51CA  06					push	es
020A:51CB  26: 8B 2E 0000			mov	bp,word ptr es:[0]	; (020A:0000=1828h)
020A:51D0  BE 0008				mov	si,8
020A:51D3  E8 1FAF				call	sub_74			; (7185)
020A:51D6  83 3E 30BC 06			cmp	data_320,6		; (020A:30BC=454Dh)
020A:51DB  76 02				jbe	loc_661			; Jump if below or =
020A:51DD  EB 78				jmp	short loc_670		; (5257)
020A:51DF			loc_661:
020A:51DF  BF 789B				mov	di,789Bh
020A:51E2  BB 40C2				mov	bx,40C2h
020A:51E5  26: 8A 44 05				mov	al,es:[si+5]
020A:51E9  25 000F				and	ax,0Fh
020A:51EC  D7					xlat				; al=[al+[bx]] table
020A:51ED  0A C0				or	al,al			; Zero ?
020A:51EF  75 04				jnz	loc_662			; Jump if not zero
020A:51F1  26: 8A 44 06				mov	al,es:[si+6]
020A:51F5			loc_662:
020A:51F5  3D 0006				cmp	ax,6
020A:51F8  77 03				ja	loc_663			; Jump if above
020A:51FA  E9 00B8				jmp	loc_673			; (52B5)
020A:51FD			loc_663:
020A:51FD  8B C8				mov	cx,ax
020A:51FF  26: 8A 44 05				mov	al,es:[si+5]
020A:5203  24 0C				and	al,0Ch
020A:5205  83 FE 08				cmp	si,8
020A:5208  75 02				jne	loc_664			; Jump if not equal
020A:520A  8A D0				mov	dl,al
020A:520C			loc_664:
020A:520C  BF 78AA				mov	di,78AAh
020A:520F  3A C2				cmp	al,dl
020A:5211  74 03				je	loc_665			; Jump if equal
020A:5213  E9 009F				jmp	loc_673			; (52B5)
020A:5216			loc_665:
020A:5216  3C 08				cmp	al,8
020A:5218  74 0B				je	loc_666			; Jump if equal
020A:521A  3C 04				cmp	al,4
020A:521C  74 07				je	loc_666			; Jump if equal
020A:521E  3C 00				cmp	al,0
020A:5220  74 03				je	loc_666			; Jump if equal
020A:5222  E9 0090				jmp	loc_673			; (52B5)
020A:5225			loc_666:
020A:5225  BF 787D				mov	di,787Dh
020A:5228  26: 8B 1C				mov	bx,es:[si]
020A:522B  26: 8B 44 02				mov	ax,es:[si+2]
020A:522F  83 FB FF				cmp	bx,0FFFFh
020A:5232  75 07				jne	loc_667			; Jump if not equal
020A:5234  3D FFFF				cmp	ax,0FFFFh
020A:5237  75 02				jne	loc_667			; Jump if not equal
020A:5239  EB 13				jmp	short loc_669		; (524E)
020A:523B			loc_667:
020A:523B  03 F1				add	si,cx
020A:523D  26: 3B 1C				cmp	bx,es:[si]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 174

020A:5240  72 0A				jb	loc_668			; Jump if below
020A:5242  77 71				ja	loc_673			; Jump if above
020A:5244  26: 3B 44 02				cmp	ax,es:[si+2]
020A:5248  76 02				jbe	loc_668			; Jump if below or =
020A:524A  77 69				ja	loc_673			; Jump if above
020A:524C			loc_668:
020A:524C  EB 91				jmp	short loc_661		; (51DF)
020A:524E			loc_669:
020A:524E  BF 788C				mov	di,788Ch
020A:5251  03 F1				add	si,cx
020A:5253  3B F5				cmp	si,bp
020A:5255  75 5E				jne	loc_673			; Jump if not equal
020A:5257			loc_670:
020A:5257  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:525C  9C					pushf				; Push flags
020A:525D  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:5262  5A					pop	dx
020A:5263  8E C2				mov	es,dx
020A:5265  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:526A  5A					pop	dx
020A:526B  75 0A				jnz	loc_671			; Jump if not zero
020A:526D  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:5272  74 03				je	loc_671			; Jump if equal
020A:5274  E8 2285				call	sub_85			; (74FC)
020A:5277			loc_671:
020A:5277  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:527C  9D					popf				; Pop flags
020A:527D  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:5282  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:5287  9C					pushf				; Push flags
020A:5288  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:528D  5A					pop	dx
020A:528E  8E DA				mov	ds,dx
020A:5290  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:5295  5A					pop	dx
020A:5296  75 0A				jnz	loc_672			; Jump if not zero
020A:5298  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:529D  74 03				je	loc_672			; Jump if equal
020A:529F  E8 225A				call	sub_85			; (74FC)
020A:52A2			loc_672:
020A:52A2  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:52A7  9D					popf				; Pop flags
020A:52A8  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:52AD  5D					pop	bp
020A:52AE  5F					pop	di
020A:52AF  5E					pop	si
020A:52B0  5A					pop	dx
020A:52B1  59					pop	cx
020A:52B2  5B					pop	bx
020A:52B3  58					pop	ax
020A:52B4  C3					retn
020A:52B5			loc_673:
020A:52B5  E8 1ECD				call	sub_74			; (7185)
020A:52B8  56					push	si
020A:52B9  BD 25B5				mov	bp,25B5h
020A:52BC  80 FA 08				cmp	dl,8
020A:52BF  74 0F				je	loc_674			; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 175

020A:52C1  80 FA 04				cmp	dl,4
020A:52C4  74 0F				je	loc_675			; Jump if equal
020A:52C6  80 FA 00				cmp	dl,0
020A:52C9  74 0F				je	loc_676			; Jump if equal
020A:52CB  BE 7851				mov	si,7851h
020A:52CE  EB 0F				jmp	short loc_677		; (52DF)
020A:52D0			loc_674:
020A:52D0  BE 7846				mov	si,7846h
020A:52D3  EB 0A				jmp	short loc_677		; (52DF)
020A:52D5			loc_675:
020A:52D5  BE 7830				mov	si,7830h
020A:52D8  EB 05				jmp	short loc_677		; (52DF)
020A:52DA			loc_676:
020A:52DA  BE 783B				mov	si,783Bh
020A:52DD  EB 00				jmp	short loc_677		; (52DF)
020A:52DF			loc_677:
020A:52DF  9A 1510:4160		;*		call	far ptr sub_157		;*(1510:4160)
020A:52DF  9A					db	9Ah
020A:52E0  4160 1510				dw	4160h, 1510h
020A:52E4  BD 25C0				mov	bp,25C0h
020A:52E7  8C C0				mov	ax,es
020A:52E9  2E: 3B 06 38A1			cmp	ax,cs:data_428		; (020A:38A1=4B3h)
020A:52EE  75 09				jne	loc_678			; Jump if not equal
020A:52F0  BE 7867				mov	si,7867h
020A:52F3  2E: A1 38A3				mov	ax,cs:data_429		; (020A:38A3=0C88Ah)
020A:52F7  EB 03				jmp	short loc_679		; (52FC)
020A:52F9			loc_678:
020A:52F9  BE 7872				mov	si,7872h
020A:52FC			loc_679:
020A:52FC  50					push	ax
020A:52FD  9A 1510:4160		;*		call	far ptr sub_157		;*(1510:4160)
020A:52FD  9A					db	9Ah
020A:52FE  4160 1510				dw	4160h, 1510h
020A:5302  58					pop	ax
020A:5303  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:5303  9A					db	9Ah
020A:5304  021C 1510				dw	21Ch, 1510h
020A:5308  5E					pop	si
020A:5309  8B C6				mov	ax,si
020A:530B  BD 25DA				mov	bp,25DAh
020A:530E  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:530E  9A					db	9Ah
020A:530F  021C 1510				dw	21Ch, 1510h
020A:5313  BD 25E1				mov	bp,25E1h
020A:5316  A0 2B39				mov	al,byte ptr data_230	; (020A:2B39=20h)
020A:5319  9A 1510:022C		;*		call	far ptr sub_117		;*(1510:022C)
020A:5319  9A					db	9Ah
020A:531A  022C 1510				dw	22Ch, 1510h
020A:531E  8B F7				mov	si,di
020A:5320  BD			data_559	db	0BDh
020A:5321  E4 25				in	al,25h			; port 25h ??I/O Non-standard
020A:5323  9A 1510:4160		;*		call	far ptr sub_157		;*(1510:4160)
020A:5323  9A					db	9Ah
020A:5324  4160 1510				dw	4160h, 1510h
020A:5328  E9 19D8				jmp	loc_999			; (6D03)
020A:532B  90					nop

           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 176

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_36		proc	near
020A:532C  C3					retn
				sub_36		endp

020A:532D  00 00				add	[bx+si],al
020A:532F  00 50 53				add	[bx+si+53h],dl
020A:5332  51					push	cx
020A:5333  52					push	dx
020A:5334  55					push	bp
020A:5335  56					push	si
020A:5336  57					push	di
020A:5337  06					push	es
020A:5338  80 3E 1329 01			cmp	data_149,1		; (020A:1329=0)
020A:533D  74 6B				je	loc_687			; Jump if equal
020A:533F  8B 1E 1326				mov	bx,data_147		; (020A:1326=0)
020A:5343  8E 06 131B				mov	es,data_143		; (020A:131B=0)
020A:5347  BE 0096				mov	si,96h
020A:534A  36BA					dw	36BAh
020A:534C  0A 8B 1D3E				or	cl,[bp+di+1D3Eh]
020A:5350  13 E8				adc	bp,ax
020A:5352  44					inc	sp
020A:5353  01 B9 0866				add	word ptr ds:[866h][bx+di],di	; (020A:0866=0C4C4h)
020A:5357  3E80					dw	3E80h
020A:5359  44					inc	sp
020A:535A  2B 02				sub	ax,[bp+si]
020A:535C  75 03				jnz	loc_681			; Jump if not zero
020A:535E  B9 0816				mov	cx,816h
020A:5361			loc_681:
020A:5361  81 E9 0096				sub	cx,96h
020A:5365  FC					cld				; Clear direction

020A:5366			locloop_682:
020A:5366  80 3E 2B44 02			cmp	data_237,2		; (020A:2B44=0AEh)
020A:536B  75 28				jne	loc_685			; Jump if not equal
020A:536D  81 FE 036A				cmp	si,36Ah
020A:5371  72 12				jb	loc_683			; Jump if below
020A:5373  81 FE 0398				cmp	si,398h
020A:5377  76 1C				jbe	loc_685			; Jump if below or =
020A:5379  81 FE 0649				cmp	si,649h
020A:537D  72 06				jb	loc_683			; Jump if below
020A:537F  81 FE 0655				cmp	si,655h
020A:5383  76 10				jbe	loc_685			; Jump if below or =
020A:5385			loc_683:
020A:5385  AC					lodsb				; String [si] to al
020A:5386  3C 80				cmp	al,80h
020A:5388  72 08				jb	loc_684			; Jump if below
020A:538A  53					push	bx
020A:538B  BB 2B61				mov	bx,2B61h
020A:538E  2C 80				sub	al,80h
020A:5390  D7					xlat				; al=[al+[bx]] table
020A:5391  5B					pop	bx
020A:5392			loc_684:
020A:5392  AA					stosb				; Store al to es:[di]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 177

020A:5393  EB 01				jmp	short loc_686		; (5396)
020A:5395			loc_685:
020A:5395  A4					movsb				; Mov [si] to es:[di]
020A:5396			loc_686:
020A:5396  87 D6				xchg	dx,si
020A:5398  8A 04				mov	al,[si]
020A:539A  87 F2				xchg	si,dx
020A:539C  42					inc	dx
020A:539D  D7					xlat				; al=[al+[bx]] table
020A:539E  26: 88 05				mov	es:[di],al
020A:53A1  47					inc	di
020A:53A2  E2 C2				loop	locloop_682		; Loop if cx > 0

020A:53A4  E8 0115				call	sub_42			; (54BC)
020A:53A7  E9 009F				jmp	loc_698			; (5449)
020A:53AA			loc_687:
020A:53AA  33 ED				xor	bp,bp			; Zero register
020A:53AC  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (020A:2B40=1Bh)
020A:53B1  75 05				jne	loc_688			; Jump if not equal
020A:53B3  E8 0A0A				call	sub_59			; (5DC0)
020A:53B6  EB 0A				jmp	short loc_689		; (53C2)
020A:53B8			loc_688:
020A:53B8  B4 03				mov	ah,3
020A:53BA  32 FF				xor	bh,bh			; Zero register
020A:53BC  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:53BC  9A					db	9Ah
020A:53BD  2BA8 1510				dw	2BA8h, 1510h
020A:53C1  52					push	dx
020A:53C2			loc_689:
020A:53C2  B4 02				mov	ah,2
020A:53C4  32 FF				xor	bh,bh			; Zero register
020A:53C6  33 D2				xor	dx,dx			; Zero register
020A:53C8  80 3E 2B45 01			cmp	data_238,1		; (020A:2B45=0E1h)
020A:53CD  75 03				jne	loc_690			; Jump if not equal
020A:53CF  BA 1702				mov	dx,1702h
020A:53D2			loc_690:
020A:53D2  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:53D2  9A					db	9Ah
020A:53D3  2BA8 1510				dw	2BA8h, 1510h
020A:53D7  8B			data_562	db	8Bh
020A:53D8  1E			data_563	db	1Eh
020A:53D9  26			data_564	db	26h
020A:53DA  13 B9 0866				adc	di,word ptr ds:[866h][bx+di]	; (020A:0866=0C4C4h)
020A:53DE  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (020A:2B40=1Bh)
020A:53E3  75 03				jne	loc_691			; Jump if not equal
020A:53E5  B9 0816				mov	cx,816h
020A:53E8			loc_691:
020A:53E8  81 E9 0096				sub	cx,96h
020A:53EC  49					dec	cx
020A:53ED  BE 0096				mov	si,96h
020A:53F0  BF 0A36				mov	di,0A36h
020A:53F3  80 3E 2B45 01			cmp	data_238,1		; (020A:2B45=0E1h)
020A:53F8  75 09				jne	locloop_692		; Jump if not equal
020A:53FA  B9 004C				mov	cx,4Ch
020A:53FD  BE 07C8				mov	si,7C8h
020A:5400  BF 1168				mov	di,1168h

           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 178

020A:5403			locloop_692:
020A:5403  8A 05				mov	al,[di]
020A:5405  D7					xlat				; al=[al+[bx]] table
020A:5406  3C 00				cmp	al,0
020A:5408  75 04				jne	loc_693			; Jump if not equal
020A:540A  B2 20				mov	dl,20h			; ' '
020A:540C  EB 11				jmp	short loc_695		; (541F)
020A:540E			loc_693:
020A:540E  3C 0F				cmp	al,0Fh
020A:5410  75 0B				jne	loc_694			; Jump if not equal
020A:5412  C6 06 2B41 01			mov	data_235,1		; (020A:2B41=8Dh)
020A:5417  9A 1510:0770		;*		call	far ptr sub_124		;*(1510:0770)
020A:5417  9A					db	9Ah
020A:5418  0770 1510				dw	770h, 1510h
020A:541C  45					inc	bp
020A:541D			loc_694:
020A:541D  8A 14				mov	dl,[si]
020A:541F			loc_695:
020A:541F  9A 1510:07A0		;*		call	far ptr sub_125		;*(1510:07A0)
020A:541F  9A					db	9Ah
020A:5420  07A0 1510				dw	7A0h, 1510h
020A:5424  0B ED				or	bp,bp			; Zero ?
020A:5426  74 07				jz	loc_696			; Jump if zero
020A:5428  9A 1510:0770		;*		call	far ptr sub_124		;*(1510:0770)
020A:5428  9A					db	9Ah
020A:5429  0770 1510				dw	770h, 1510h
020A:542D  33 ED				xor	bp,bp			; Zero register
020A:542F			loc_696:
020A:542F  46					inc	si
020A:5430  47					inc	di
020A:5431  E2 D0				loop	locloop_692		; Loop if cx > 0

020A:5433  80 3E 2B40 01			cmp	byte ptr ds:[2B40h],1	; (020A:2B40=1Bh)
020A:5438  75 05				jne	loc_697			; Jump if not equal
020A:543A  E8 09C3				call	sub_60			; (5E00)
020A:543D  EB 0A				jmp	short loc_698		; (5449)
020A:543F			loc_697:
020A:543F  B4 02				mov	ah,2
020A:5441  32 FF				xor	bh,bh			; Zero register
020A:5443  5A					pop	dx
020A:5444  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:5444  9A					db	9Ah
020A:5445  2BA8 1510				dw	2BA8h, 1510h
020A:5449			loc_698:
020A:5449  07					pop	es
020A:544A  5F					pop	di
020A:544B  5E					pop	si
020A:544C  5D					pop	bp
020A:544D  5A					pop	dx
020A:544E  59					pop	cx
020A:544F  5B					pop	bx
020A:5450  58					pop	ax
020A:5451  C3					retn
020A:5452  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 179

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_38		proc	near
020A:5454  E8 FED9		;*		call	sub_37			;*(5330)
020A:5454  E8 D9 FE				db	0E8h,0D9h,0FEh
020A:5457  50					push	ax
020A:5458  53					push	bx
020A:5459  52					push	dx
020A:545A  B4 02				mov	ah,2
020A:545C  32 FF				xor	bh,bh			; Zero register
020A:545E  BA 184F				mov	dx,184Fh
020A:5461  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:5461  9A					db	9Ah
020A:5462  2BA8 1510				dw	2BA8h, 1510h
020A:5466  5A					pop	dx
020A:5467  5B					pop	bx
020A:5468  58					pop	ax
020A:5469  C3					retn
				sub_38		endp

020A:546A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_39		proc	near
020A:546C			loc_699:
020A:546C  80 3E 1329 01			cmp	data_149,1		; (020A:1329=0)
020A:5471  75 05				jne	loc_700			; Jump if not equal
020A:5473  C6 06 2B45 01			mov	data_238,1		; (020A:2B45=0E1h)
020A:5478			loc_700:
020A:5478  E8 FFD9				call	sub_38			; (5454)
020A:547B  C6 06 2B45 00			mov	data_238,0		; (020A:2B45=0E1h)
020A:5480  C3					retn
				sub_39		endp

020A:5481  87 DB				xchg	bx,bx
020A:5483  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_40		proc	near
020A:5484  80 3E 4394 01			cmp	byte ptr ds:[4394h],1	; (ss:4394=0E7h)
020A:5489  74 0A				je	loc_701			; Jump if equal
020A:548B  80 3E 4394 15			cmp	byte ptr ds:[4394h],15h	; (ss:4394=0E7h)
020A:5490  74 03				je	loc_701			; Jump if equal
020A:5492  E9 FE9B		;*		jmp	loc_680			;*(5330)
020A:5492  E9 9B FE				db	0E9h, 9Bh,0FEh
020A:5495			loc_701:
020A:5495  EB D5				jmp	short loc_699		; (546C)
				sub_40		endp

020A:5497  90					nop

           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 180

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_41		proc	near
020A:5498  80 3E 1328 01			cmp	byte ptr ds:[1328h],1	; (ss:1328=80h)
020A:549D  74 1C				je	loc_703			; Jump if equal
020A:549F  52					push	dx
020A:54A0  BA 03DA				mov	dx,3DAh
020A:54A3			loc_702:
020A:54A3  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:54A4  A8 08				test	al,8
020A:54A6  75 FB				jnz	loc_702			; Jump if not zero
020A:54A8  BA 03D8				mov	dx,3D8h
020A:54AB  1E					push	ds
020A:54AC  33 C0				xor	ax,ax			; Zero register
020A:54AE  8E D8				mov	ds,ax
020A:54B0  A0 0465				mov	al,byte ptr ds:[465h]	; (0000:0465=29h)
020A:54B3  24 F7				and	al,0F7h
020A:54B5  A2 0465				mov	byte ptr ds:[465h],al	; (0000:0465=29h)
020A:54B8  EE					out	dx,al			; port 3D8h, CGA video control
020A:54B9  1F					pop	ds
020A:54BA  5A					pop	dx
020A:54BB			loc_703:
020A:54BB  C3					retn
				sub_41		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_42		proc	near
020A:54BC  80 3E 2B44 02			cmp	byte ptr ds:[2B44h],2	; (ss:2B44=0FAh)
020A:54C1  75 17				jne	loc_704			; Jump if not equal
020A:54C3  0E					push	cs
020A:54C4  57					push	di
020A:54C5  06					push	es
020A:54C6  B4 FF				mov	ah,0FFh
020A:54C8  B9 07D0				mov	cx,7D0h
020A:54CB  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=19F9h)
020A:54CF  8B 3E 131D				mov	di,word ptr ds:[131Dh]	; (ss:131D=777h)
020A:54D3  CD 10				int	10h			; Video display   ah=functn FFh
										;  update video buffer   Topview
020A:54D5  07					pop	es
020A:54D6  5F					pop	di
020A:54D7  59					pop	cx
020A:54D8  EB 1B				jmp	short loc_705		; (54F5)
020A:54DA			loc_704:
020A:54DA  80 3E 1328 01			cmp	byte ptr ds:[1328h],1	; (ss:1328=80h)
020A:54DF  74 14				je	loc_705			; Jump if equal
020A:54E1  52					push	dx
020A:54E2  BA 03D8				mov	dx,3D8h
020A:54E5  1E					push	ds
020A:54E6  33 C0				xor	ax,ax			; Zero register
020A:54E8  8E D8				mov	ds,ax
020A:54EA  A0 0465				mov	al,byte ptr ds:[465h]	; (0000:0465=29h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 181

020A:54ED  0C 08				or	al,8
020A:54EF  A2 0465				mov	byte ptr ds:[465h],al	; (0000:0465=29h)
020A:54F2  EE					out	dx,al			; port 3D8h, CGA video control
020A:54F3  1F					pop	ds
020A:54F4  5A					pop	dx
020A:54F5			loc_705:
020A:54F5  C3					retn
				sub_42		endp

020A:54F6  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_43		proc	near
020A:54F8  80 3E 1328 01			cmp	data_148,1		; (020A:1328=0)
020A:54FD  75 22				jne	loc_707			; Jump if not equal
020A:54FF  80 3E 1329 01			cmp	data_149,1		; (020A:1329=0)
020A:5504  74 1B				je	loc_707			; Jump if equal
020A:5506  D1 E7				shl	di,1			; Shift w/zeros fill
020A:5508  26: 88 25				mov	es:[di],ah
020A:550B  80 3E 2B44 02			cmp	data_237,2		; (020A:2B44=0AEh)
020A:5510  74 03				je	loc_706			; Jump if equal
020A:5512  D1 EF				shr	di,1			; Shift w/zeros fill
020A:5514  C3					retn
020A:5515			loc_706:
020A:5515  51					push	cx
020A:5516  B4 FF				mov	ah,0FFh
020A:5518  B9 0001				mov	cx,1
020A:551B  CD 10				int	10h			; Video display   ah=functn FFh
										;  update video buffer   Topview
020A:551D  D1 EF				shr	di,1			; Shift w/zeros fill
020A:551F  59					pop	cx
020A:5520  C3					retn
020A:5521			loc_707:
020A:5521  51					push	cx
020A:5522  52					push	dx
020A:5523  50					push	ax
020A:5524  80 3E 1329 01			cmp	data_149,1		; (020A:1329=0)
020A:5529  74 20				je	loc_711			; Jump if equal
020A:552B  D1 E7				shl	di,1			; Shift w/zeros fill
020A:552D  BA 03DA				mov	dx,3DAh
020A:5530			loc_708:
020A:5530  FB					sti				; Enable interrupts
020A:5531  B5 09				mov	ch,9
020A:5533  FA					cli				; Disable interrupts
020A:5534  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:5535  A8 08				test	al,8
020A:5537  75 09				jnz	loc_710			; Jump if not zero
020A:5539  A8 01				test	al,1
020A:553B  75 F3				jnz	loc_708			; Jump if not zero
020A:553D			loc_709:
020A:553D  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:553E  84 C5				test	al,ch
020A:5540  74 FB				jz	loc_709			; Jump if zero
020A:5542			loc_710:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 182

020A:5542  FC					cld				; Clear direction
020A:5543  8A C4				mov	al,ah
020A:5545  AA					stosb				; Store al to es:[di]
020A:5546  FB					sti				; Enable interrupts
020A:5547  D1 EF				shr	di,1			; Shift w/zeros fill
020A:5549  EB 33				jmp	short loc_714		; (557E)
020A:554B			loc_711:
020A:554B  80 FC 20				cmp	ah,20h			; ' '
020A:554E  72 2E				jb	loc_714			; Jump if below
020A:5550  53					push	bx
020A:5551  50					push	ax
020A:5552  B2 50				mov	dl,50h			; 'P'
020A:5554  8B C7				mov	ax,di
020A:5556  F6 F2				div	dl			; al, ah rem = ax/reg
020A:5558  86 C4				xchg	al,ah
020A:555A  8B D0				mov	dx,ax
020A:555C  B4 02				mov	ah,2
020A:555E  32 FF				xor	bh,bh			; Zero register
020A:5560  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:5560  9A					db	9Ah
020A:5561  2BA8 1510				dw	2BA8h, 1510h
020A:5565  58					pop	ax
020A:5566  80 3E 2B41 01			cmp	data_235,1		; (020A:2B41=8Dh)
020A:556B  75 09				jne	loc_712			; Jump if not equal
020A:556D  8A C4				mov	al,ah
020A:556F  9A 1510:07C8		;*		call	far ptr sub_126		;*(1510:07C8)
020A:556F  9A					db	9Ah
020A:5570  07C8 1510				dw	7C8h, 1510h
020A:5574  EB 07				jmp	short loc_713		; (557D)
020A:5576			loc_712:
020A:5576  8A D4				mov	dl,ah
020A:5578  9A 1510:07A0		;*		call	far ptr sub_125		;*(1510:07A0)
020A:5578  9A					db	9Ah
020A:5579  07A0 1510				dw	7A0h, 1510h
020A:557D			loc_713:
020A:557D  5B					pop	bx
020A:557E			loc_714:
020A:557E  58					pop	ax
020A:557F  5A					pop	dx
020A:5580  59					pop	cx
020A:5581  C3					retn
				sub_43		endp

020A:5582  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_44		proc	near
020A:5584  80 3E 1328 01			cmp	data_148,1		; (020A:1328=0)
020A:5589  75 25				jne	loc_716			; Jump if not equal
020A:558B  80 3E 1329 01			cmp	data_149,1		; (020A:1329=0)
020A:5590  74 1E				je	loc_716			; Jump if equal
020A:5592  D1 E7				shl	di,1			; Shift w/zeros fill
020A:5594  26: 88 65 01				mov	es:[di+1],ah
020A:5598  80 3E 2B44 02			cmp	data_237,2		; (020A:2B44=0AEh)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 183

020A:559D  74 04				je	loc_715			; Jump if equal
020A:559F  D1 EF				shr	di,1			; Shift w/zeros fill
020A:55A1  47					inc	di
020A:55A2  C3					retn
020A:55A3			loc_715:
020A:55A3  51					push	cx
020A:55A4  B4 FF				mov	ah,0FFh
020A:55A6  B9 0001				mov	cx,1
020A:55A9  CD 10				int	10h			; Video display   ah=functn FFh
										;  update video buffer   Topview
020A:55AB  D1 EF				shr	di,1			; Shift w/zeros fill
020A:55AD  47					inc	di
020A:55AE  59					pop	cx
020A:55AF  C3					retn
020A:55B0			loc_716:
020A:55B0  51					push	cx
020A:55B1  52					push	dx
020A:55B2  50					push	ax
020A:55B3  80 3E 1329 01			cmp	data_149,1		; (020A:1329=0)
020A:55B8  74 20				je	loc_721			; Jump if equal
020A:55BA  D1 E7				shl	di,1			; Shift w/zeros fill
020A:55BC  47					inc	di
020A:55BD  BA 03DA				mov	dx,3DAh
020A:55C0			loc_717:
020A:55C0  FB					sti				; Enable interrupts
020A:55C1  B5 09				mov	ch,9
020A:55C3  FA					cli				; Disable interrupts
020A:55C4  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:55C5  A8 08				test	al,8
020A:55C7  75 09				jnz	loc_720			; Jump if not zero
020A:55C9  A8 01				test	al,1
020A:55CB  75 F3				jnz	loc_717			; Jump if not zero
020A:55CD			loc_718:
020A:55CD  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
020A:55CE  84 C5				test	al,ch
020A:55D0			loc_719:
020A:55D0  74 FB				jz	loc_718			; Jump if zero
020A:55D2			loc_720:
020A:55D2  FC					cld				; Clear direction
020A:55D3  8A C4				mov	al,ah
020A:55D5  AA					stosb				; Store al to es:[di]
020A:55D6  FB					sti				; Enable interrupts
020A:55D7  4F					dec	di
020A:55D8  D1 EF				shr	di,1			; Shift w/zeros fill
020A:55DA			loc_721:
020A:55DA  47					inc	di
020A:55DB  58					pop	ax
020A:55DC  5A					pop	dx
020A:55DD  59					pop	cx
020A:55DE  C3					retn
				sub_44		endp

020A:55DF  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 184


				sub_45		proc	near
020A:55E0  52					push	dx
020A:55E1  E8 1BB9				call	sub_78			; (719D)
020A:55E4  BF 06B9				mov	di,6B9h
020A:55E7  B9 000A				mov	cx,0Ah
020A:55EA  B0 20				mov	al,20h			; ' '
020A:55EC  FC					cld				; Clear direction
020A:55ED  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:55EF  B4 36				mov	ah,36h			; '6'
020A:55F1  32 D2				xor	dl,dl			; Zero register
020A:55F3  CD 21				int	21h			; DOS Services  ah=function 36h
										;  get drive info, drive dl,1=a:
										;   returns ax=sectors per clust
										;   bx=avail clust,cx=bytes/sect
										;   dx=clusters per drive
020A:55F5  3D FFFF				cmp	ax,0FFFFh
020A:55F8  75 03				jne	loc_722			; Jump if not equal
020A:55FA  E9 0096				jmp	loc_728			; (5693)
020A:55FD			loc_722:
020A:55FD  F7 E1				mul	cx			; dx:ax = reg * ax
020A:55FF  F7 E3				mul	bx			; dx:ax = reg * ax
020A:5601  81 FA 05F5				cmp	dx,5F5h
020A:5605  72 0F				jb	loc_723			; Jump if below
020A:5607  56					push	si
020A:5608  BD 06BE				mov	bp,6BEh
020A:560B  BE 564A				mov	si,564Ah
020A:560E  9A 1510:4160		;*		call	far ptr sub_157		;*(1510:4160)
020A:560E  9A					db	9Ah
020A:560F  4160 1510				dw	4160h, 1510h
020A:5613  5E			data_566	db	5Eh
020A:5614  EB			data_567	db	0EBh
020A:5615  7D B9				jge	loc_719			; Jump if > or =
020A:5617  10 27				adc	[bx],ah
020A:5619  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:561B  50					push	ax
020A:561C  BD 06BE				mov	bp,6BEh
020A:561F  B3 01				mov	bl,1
020A:5621  8B C2				mov	ax,dx
020A:5623  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:5623  9A					db	9Ah
020A:5624  0288 1510				dw	288h, 1510h
020A:5628  83 ED 04				sub	bp,4
020A:562B  3E: 8A 4E 00				mov	cl,ds:[bp]
020A:562F  58					pop	ax
020A:5630  3D 0000				cmp	ax,0
020A:5633  75 11				jne	loc_724			; Jump if not equal
020A:5635  80 F9 20				cmp	cl,20h			; ' '
020A:5638  74 59				je	loc_728			; Jump if equal
020A:563A  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:563F  4D					dec	bp
020A:5640  3E: 88 4E 00				mov	ds:[bp],cl
020A:5644  EB 4D				jmp	short loc_728		; (5693)
020A:5646			loc_724:
020A:5646  80 F9 20				cmp	cl,20h			; ' '
020A:5649  75 02				jne	loc_725			; Jump if not equal
020A:564B  B1 30				mov	cl,30h			; '0'
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 185

020A:564D			loc_725:
020A:564D  3E: C6 46 00 2C			mov	byte ptr ds:[bp],2Ch	; ','
020A:5652  4D					dec	bp
020A:5653  3E: 88 4E 00				mov	ds:[bp],cl
020A:5657  83 C5 02				add	bp,2
020A:565A  3E: 80 7E 00 20			cmp	byte ptr ds:[bp],20h	; ' '
020A:565F  75 05				jne	loc_726			; Jump if not equal
020A:5661  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020A:5666			loc_726:
020A:5666  45					inc	bp
020A:5667  3E: 80 7E 00 20			cmp	byte ptr ds:[bp],20h	; ' '
020A:566C  75 05				jne	loc_727			; Jump if not equal
020A:566E  3E: C6 46 00 30			mov	byte ptr ds:[bp],30h	; '0'
020A:5673			loc_727:
020A:5673  BD 06B9				mov	bp,6B9h
020A:5676  B3 01				mov	bl,1
020A:5678  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:5678  9A					db	9Ah
020A:5679  0288 1510				dw	288h, 1510h
020A:567D  83 ED 04				sub	bp,4
020A:5680  3E: 8B 46 00				mov	ax,ds:[bp]
020A:5684  80 FC 20				cmp	ah,20h			; ' '
020A:5687  74 0A				je	loc_728			; Jump if equal
020A:5689  3E: C6 46 01 2C			mov	byte ptr ds:[bp+1],2Ch	; ','
020A:568E  4D					dec	bp
020A:568F  3E: 89 46 00				mov	ds:[bp],ax
020A:5693			loc_728:
020A:5693  5A					pop	dx
020A:5694  C3					retn
				sub_45		endp

020A:5695  87 DB				xchg	bx,bx
020A:5697  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_46		proc	near
020A:5698  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:569D  06					push	es
020A:569E  E8 1AFC				call	sub_78			; (719D)
020A:56A1  8A E6				mov	ah,dh
020A:56A3  8A 36 30A0				mov	dh,byte ptr ds:[30A0h]	; (ss:30A0=15h)
020A:56A7  BE 1349				mov	si,1349h
020A:56AA  BF 0739				mov	di,739h
020A:56AD  B9 1355				mov	cx,1355h
020A:56B0  81 E9 1349				sub	cx,1349h
020A:56B4  BB 1926				mov	bx,1926h
020A:56B7			loc_729:
020A:56B7  3A2E			data_571	dw	3A2Eh
020A:56B9  7437			data_572	dw	7437h
020A:56BB  430B			data_573	dw	430Bh
020A:56BD  F103			data_574	dw	0F103h
020A:56BF  2E			data_575	db	2Eh
020A:56C0  80			data_576	db	80h
020A:56C1  3F			data_577	db	3Fh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 186

020A:56C2  00			data_578	db	0
020A:56C3  74 02				jz	loc_730			; Jump if zero
020A:56C5  EB F0				jmp	short loc_729		; (56B7)
020A:56C7			loc_730:
020A:56C7  FC					cld				; Clear direction
020A:56C8  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:56CA  8A 36 30B0				mov	dh,byte ptr ds:[30B0h]	; (ss:30B0=3Eh)
020A:56CE  BE 13C1				mov	si,13C1h
020A:56D1  BF 072E				mov	di,72Eh
020A:56D4  B9 13C6				mov	cx,13C6h
020A:56D7  81 E9 13C1				sub	cx,13C1h
020A:56DB  F6 C6 1F				test	dh,1Fh
020A:56DE  75 0B				jnz	loc_731			; Jump if not zero
020A:56E0  F6 06 30B2 80			test	byte ptr ds:[30B2h],80h	; (ss:30B2=4Dh)
020A:56E5  74 36				jz	loc_733			; Jump if zero
020A:56E7  03 F1				add	si,cx
020A:56E9  EB 32				jmp	short loc_733		; (571D)
020A:56EB			loc_731:
020A:56EB  03 F1				add	si,cx
020A:56ED  03 F1				add	si,cx
020A:56EF  F6 C6 01				test	dh,1
020A:56F2  75 29				jnz	loc_733			; Jump if not zero
020A:56F4  03 F1				add	si,cx
020A:56F6  F6 C6 02				test	dh,2
020A:56F9  75 22				jnz	loc_733			; Jump if not zero
020A:56FB  03 F1				add	si,cx
020A:56FD  52					push	dx
020A:56FE  8A D6				mov	dl,dh
020A:5700  80 E2 FB				and	dl,0FBh
020A:5703  F6 C2 14				test	dl,14h
020A:5706  5A					pop	dx
020A:5707  74 06				jz	loc_732			; Jump if zero
020A:5709  03			data_579	db	3
020A:570A  F1					db	0F1h
020A:570B  03 F1				add	si,cx
020A:570D  EB 0E				jmp	short loc_733		; (571D)
020A:570F			loc_732:
020A:570F  52					push	dx
020A:5710  8A D6				mov	dl,dh
020A:5712  80 E2 FB				and	dl,0FBh
020A:5715  F6 C2 0C				test	dl,0Ch
020A:5718  5A					pop	dx
020A:5719  74 02				jz	loc_733			; Jump if zero
020A:571B  03 F1				add	si,cx
020A:571D			loc_733:
020A:571D  FC					cld				; Clear direction
020A:571E  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5720  80 FC 00				cmp	ah,0
020A:5723  74 4C				je	loc_737			; Jump if equal
020A:5725  80 3E 1329 01			cmp	byte ptr ds:[1329h],1	; (ss:1329=0E9h)
020A:572A  74 05				je	loc_734			; Jump if equal
020A:572C  E8 FD55				call	sub_40			; (5484)
020A:572F  EB 40				jmp	short loc_737		; (5771)
020A:5731			loc_734:
020A:5731  BE 0739				mov	si,739h
020A:5734  BF 0739				mov	di,739h
020A:5737  81 EF 0096				sub	di,96h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 187

020A:573B  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=777h)
020A:573F  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=19F9h)
020A:5743  B9 1355				mov	cx,1355h
020A:5746  81 E9 1349				sub	cx,1349h

020A:574A			locloop_735:
020A:574A  8A 24				mov	ah,[si]
020A:574C  E8 FDA9				call	sub_43			; (54F8)
020A:574F  47					inc	di
020A:5750  46					inc	si
020A:5751  E2 F7				loop	locloop_735		; Loop if cx > 0

020A:5753  BE 072E				mov	si,72Eh
020A:5756  BF 072E				mov	di,72Eh
020A:5759  81 EF 0096				sub	di,96h
020A:575D  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=777h)
020A:5761  B9 13C6				mov	cx,13C6h
020A:5764  81 E9 13C1				sub	cx,13C1h

020A:5768			locloop_736:
020A:5768  8A 24				mov	ah,[si]
020A:576A  E8 FD8B				call	sub_43			; (54F8)
020A:576D  47					inc	di
020A:576E  46					inc	si
020A:576F  E2 F7				loop	locloop_736		; Loop if cx > 0

020A:5771			loc_737:
020A:5771  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:5776  9C					pushf				; Push flags
020A:5777  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:577C  5A					pop	dx
020A:577D  8E C2				mov	es,dx
020A:577F  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:5784  5A					pop	dx
020A:5785  75 0A				jnz	loc_738			; Jump if not zero
020A:5787  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:578C  74 03				je	loc_738			; Jump if equal
020A:578E  E8 1D6B				call	sub_85			; (74FC)
020A:5791			loc_738:
020A:5791  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:5796  9D					popf				; Pop flags
020A:5797  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:579C  C3					retn
				sub_46		endp

020A:579D  87 DB				xchg	bx,bx
020A:579F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_47		proc	near
020A:57A0  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=41B5h)
020A:57A4  B9 0011				mov	cx,11h

020A:57A7			locloop_739:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 188

020A:57A7  C6 47 30 07				mov	byte ptr [bx+30h],7
020A:57AB  43					inc	bx
020A:57AC  E2 F9				loop	locloop_739		; Loop if cx > 0

020A:57AE  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=41B5h)
020A:57B2  80 3E 35E6 01			cmp	byte ptr ds:[35E6h],1	; (ss:35E6=52h)
020A:57B7  74 0C				je	loc_740			; Jump if equal
020A:57B9  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:57BD  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:57C1  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:57C5			loc_740:
020A:57C5  C3					retn
				sub_47		endp

020A:57C6  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_48		proc	near
020A:57C8  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=41B5h)
020A:57CC  B9 0011				mov	cx,11h

020A:57CF			locloop_741:
020A:57CF  C6 47 30 0F				mov	byte ptr [bx+30h],0Fh
020A:57D3  43					inc	bx
020A:57D4  E2 F9				loop	locloop_741		; Loop if cx > 0

020A:57D6  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=41B5h)
020A:57DA  80 3E 35E6 01			cmp	byte ptr ds:[35E6h],1	; (ss:35E6=52h)
020A:57DF  74 0C				je	loc_742			; Jump if equal
020A:57E1  C6 47 30 00				mov	byte ptr [bx+30h],0
020A:57E5  C6 47 33 00				mov	byte ptr [bx+33h],0
020A:57E9  C6 47 34 00				mov	byte ptr [bx+34h],0
020A:57ED			loc_742:
020A:57ED  2E: 80 3E 3E64 01			cmp	byte ptr cs:[3E64h],1	; (020A:3E64=47h)
020A:57F3  75 04				jne	loc_743			; Jump if not equal
020A:57F5  C6 47 38 07				mov	byte ptr [bx+38h],7
020A:57F9			loc_743:
020A:57F9  C3					retn
				sub_48		endp

020A:57FA  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_49		proc	near
020A:57FC  57					push	di
020A:57FD  56					push	si
020A:57FE  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:5803  06					push	es
020A:5804  E8 1996				call	sub_78			; (719D)
020A:5807  88			data_580	db	88h			; Data table (indexed access)
020A:5808  26: 32 17				xor	dl,es:[bx]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 189

020A:580B  B9 177E				mov	cx,177Eh
020A:580E  81 E9 1734				sub	cx,1734h
020A:5812  BE 1734				mov	si,1734h
020A:5815  8A C1				mov	al,cl
020A:5817  F6 E4				mul	ah			; ax = reg * al
020A:5819  03 F0				add	si,ax
020A:581B  BF 07C9				mov	di,7C9h
020A:581E  FC					cld				; Clear direction
020A:581F  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5821  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:5826  9C					pushf				; Push flags
020A:5827  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:582C  5A					pop	dx
020A:582D  8E C2				mov	es,dx
020A:582F  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:5834  5A					pop	dx
020A:5835  75 0A				jnz	loc_744			; Jump if not zero
020A:5837  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:583C  74 03				je	loc_744			; Jump if equal
020A:583E  E8 1CBB				call	sub_85			; (74FC)
020A:5841			loc_744:
020A:5841  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:5846  9D					popf				; Pop flags
020A:5847  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:584C  5E					pop	si
020A:584D  5F					pop	di
020A:584E  C3					retn
				sub_49		endp

020A:584F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_50		proc	near
020A:5850  50					push	ax
020A:5851  53					push	bx
020A:5852  51					push	cx
020A:5853  52					push	dx
020A:5854  56					push	si
020A:5855  57					push	di
020A:5856  55					push	bp
020A:5857  06					push	es
020A:5858  BD 06AE				mov	bp,6AEh
020A:585B  A1 3084				mov	ax,data_301		; (020A:3084=4F43h)
020A:585E  B3 01				mov	bl,1
020A:5860  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:5860  9A					db	9Ah
020A:5861  0288 1510				dw	288h, 1510h
020A:5865  BD 074E				mov	bp,74Eh
020A:5868  A1 3088				mov	ax,data_303		; (020A:3088=4C41h)
020A:586B  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:5871  75 04				jne	loc_745			; Jump if not equal
020A:5873  03 06 3098				add	ax,data_311		; (020A:3098=3A43h)
020A:5877			loc_745:
020A:5877  A3 3096				mov	data_310,ax		; (020A:3096=3D45h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 190

020A:587A  B3 01				mov	bl,1
020A:587C  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:587C  9A					db	9Ah
020A:587D  0288 1510				dw	288h, 1510h
020A:5881  BD 06FE				mov	bp,6FEh
020A:5884  A1 308C				mov	ax,data_305		; (020A:308C=4553h)
020A:5887  B3 01				mov	bl,1
020A:5889  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:5889  9A					db	9Ah
020A:588A  0288 1510				dw	288h, 1510h
020A:588E  8B 1E 1326				mov	bx,data_147		; (020A:1326=0)
020A:5892  80 7F 4E 00				cmp	byte ptr [bx+4Eh],0
020A:5896  75 03				jne	loc_746			; Jump if not equal
020A:5898  E9 00F7				jmp	loc_762			; (5992)
020A:589B			loc_746:
020A:589B  BE 06AE				mov	si,6AEh
020A:589E  B9 0005				mov	cx,5
020A:58A1  80 3E 1329 01			cmp	data_149,1		; (020A:1329=0)
020A:58A6  75 6F				jne	loc_754			; Jump if not equal
020A:58A8  B3 03				mov	bl,3
020A:58AA  BA 1328				mov	dx,1328h
020A:58AD			loc_747:
020A:58AD  F6 06 586E 80			test	byte ptr ds:[586Eh],80h	; (020A:586E=0A0h)
020A:58B2  74 0C				jz	loc_748			; Jump if zero
020A:58B4  A1 3054				mov	ax,data_293		; (020A:3054=7400h)
020A:58B7  39 06 344C				cmp	data_349,ax		; (020A:344C=5453h)
020A:58BB  74 32				je	loc_751			; Jump if equal
020A:58BD  E9 00D2				jmp	loc_762			; (5992)
020A:58C0			loc_748:
020A:58C0  80 FB 02				cmp	bl,2
020A:58C3  72 1E				jb	loc_750			; Jump if below
020A:58C5  74 0E				jz	loc_749			; Jump if zero
020A:58C7  A1 3084				mov	ax,data_301		; (020A:3084=4F43h)
020A:58CA  3B 06 3090				cmp	ax,data_307		; (020A:3090=5250h)
020A:58CE  74 3A				je	loc_753			; Jump if equal
020A:58D0  A3 3090				mov	data_307,ax		; (020A:3090=5250h)
020A:58D3  EB 1A				jmp	short loc_751		; (58EF)
020A:58D5			loc_749:
020A:58D5  A1 308C				mov	ax,data_305		; (020A:308C=4553h)
020A:58D8  3B 06 3092				cmp	ax,data_308		; (020A:3092=464Fh)
020A:58DC  74 2C				je	loc_753			; Jump if equal
020A:58DE  A3 3092				mov	data_308,ax		; (020A:3092=464Fh)
020A:58E1  EB 0C				jmp	short loc_751		; (58EF)
020A:58E3			loc_750:
020A:58E3  A1 3096				mov	ax,data_310		; (020A:3096=3D45h)
020A:58E6  3B 06 3094				cmp	ax,data_309		; (020A:3094=4C49h)
020A:58EA  74 1E				je	loc_753			; Jump if equal
020A:58EC  A3 3094				mov	data_309,ax		; (020A:3094=4C49h)
020A:58EF			loc_751:
020A:58EF  B4 02				mov	ah,2
020A:58F1  32 FF				xor	bh,bh			; Zero register
020A:58F3  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:58F3  9A					db	9Ah
020A:58F4  2BA8 1510				dw	2BA8h, 1510h
020A:58F8  B9 0005				mov	cx,5
020A:58FB  52					push	dx
020A:58FC  56					push	si
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 191

020A:58FD  FC					cld				; Clear direction

020A:58FE			locloop_752:
020A:58FE  AC					lodsb				; String [si] to al
020A:58FF  8A D0				mov	dl,al
020A:5901  9A 1510:07A0		;*		call	far ptr sub_125		;*(1510:07A0)
020A:5901  9A					db	9Ah
020A:5902  07A0 1510				dw	7A0h, 1510h
020A:5906  E2 F6				loop	locloop_752		; Loop if cx > 0

020A:5908  5E					pop	si
020A:5909  5A					pop	dx
020A:590A			loc_753:
020A:590A  83 C6 50				add	si,50h
020A:590D  81 C2 0100				add	dx,100h
020A:5911  FE CB				dec	bl
020A:5913  75 98				jnz	loc_747			; Jump if not zero
020A:5915  EB 7B				jmp	short loc_762		; (5992)
020A:5917			loc_754:
020A:5917  8E 06 131B				mov	es,data_143		; (020A:131B=0)
020A:591B  A1 3084				mov	ax,data_301		; (020A:3084=4F43h)
020A:591E  3B 06 3090				cmp	ax,data_307		; (020A:3090=5250h)
020A:5922  74 18				je	loc_756			; Jump if equal
020A:5924  A3 3090				mov	data_307,ax		; (020A:3090=5250h)
020A:5927  BF 06AE				mov	di,6AEh
020A:592A  81 EF 0096				sub	di,96h
020A:592E  03 3E 131D				add	di,data_144		; (020A:131D=0)

020A:5932			locloop_755:
020A:5932  FC					cld				; Clear direction
020A:5933  AC					lodsb				; String [si] to al
020A:5934  8A E0				mov	ah,al
020A:5936  E8 FBBF				call	sub_43			; (54F8)
020A:5939  47					inc	di
020A:593A  E2 F6				loop	locloop_755		; Loop if cx > 0

020A:593C			loc_756:
020A:593C  A1 308C				mov	ax,data_305		; (020A:308C=4553h)
020A:593F  3B 06 3092				cmp	ax,data_308		; (020A:3092=464Fh)
020A:5943  74 27				je	loc_760			; Jump if equal
020A:5945  A3 3092				mov	data_308,ax		; (020A:3092=464Fh)
020A:5948  BE 06FE				mov	si,6FEh
020A:594B  BF 06FE				mov	di,6FEh
020A:594E  81 EF 0096				sub	di,96h
020A:5952  03 3E 131D				add	di,data_144		; (020A:131D=0)
020A:5956  B9 0005				mov	cx,5

020A:5959			locloop_757:
020A:5959  AC					lodsb				; String [si] to al
020A:595A  83 F9 01				cmp	cx,1
020A:595D  76 05				jbe	loc_758			; Jump if below or =
020A:595F  80 3C 20				cmp	byte ptr [si],20h	; ' '
020A:5962  74 05				je	loc_759			; Jump if equal
020A:5964			loc_758:
020A:5964  8A E0				mov	ah,al
020A:5966  E8 FB8F				call	sub_43			; (54F8)
020A:5969			loc_759:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 192

020A:5969  47					inc	di
020A:596A  E2 ED				loop	locloop_757		; Loop if cx > 0

020A:596C			loc_760:
020A:596C  A1 3096				mov	ax,data_310		; (020A:3096=3D45h)
020A:596F  3B 06 3094				cmp	ax,data_309		; (020A:3094=4C49h)
020A:5973  74 1D				je	loc_762			; Jump if equal
020A:5975  A3 3094				mov	data_309,ax		; (020A:3094=4C49h)
020A:5978  BE 074E				mov	si,74Eh
020A:597B  BF 074E				mov	di,74Eh
020A:597E  81 EF 0096				sub	di,96h
020A:5982  03 3E 131D				add	di,data_144		; (020A:131D=0)
020A:5986  B9 0005				mov	cx,5

020A:5989			locloop_761:
020A:5989  AC					lodsb				; String [si] to al
020A:598A  8A E0				mov	ah,al
020A:598C  E8 FB69				call	sub_43			; (54F8)
020A:598F  47					inc	di
020A:5990  E2 F7				loop	locloop_761		; Loop if cx > 0

020A:5992			loc_762:
020A:5992  07					pop	es
020A:5993  5D					pop	bp
020A:5994  5F					pop	di
020A:5995  5E					pop	si
020A:5996  5A					pop	dx
020A:5997  59					pop	cx
020A:5998  5B					pop	bx
020A:5999  58					pop	ax
020A:599A  C3					retn
				sub_50		endp

							                        ;* No entry point to code
020A:599B  90					nop
020A:599C  50					push	ax
020A:599D  53					push	bx
020A:599E  51					push	cx
020A:599F  52					push	dx
020A:59A0  57					push	di
020A:59A1  55					push	bp
020A:59A2  06					push	es
020A:59A3  F6 06 586E 80			test	byte ptr ds:[586Eh],80h	; (020A:586E=0A0h)
020A:59A8  74 0B				jz	loc_763			; Jump if zero
020A:59AA  A1 3054				mov	ax,data_293		; (020A:3054=7400h)
020A:59AD  39 06 344C				cmp	data_349,ax		; (020A:344C=5453h)
020A:59B1  74 02				je	loc_763			; Jump if equal
020A:59B3  EB 74				jmp	short loc_765		; (5A29)
020A:59B5			loc_763:
020A:59B5  BD 07DC				mov	bp,7DCh
020A:59B8  56					push	si
020A:59B9  BE 405B				mov	si,405Bh
020A:59BC  9A 1510:4160		;*		call	far ptr sub_157		;*(1510:4160)
020A:59BC  9A					db	9Ah
020A:59BD  4160 1510				dw	4160h, 1510h
020A:59C1  5E					pop	si
020A:59C2  A1 344C				mov	ax,data_349		; (020A:344C=5453h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 193

020A:59C5  3E: 8B 56 00				mov	dx,ds:[bp]
020A:59C9  3E: 8B 5E 02				mov	bx,ds:[bp+2]
020A:59CD  53					push	bx
020A:59CE  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:59CE  9A					db	9Ah
020A:59CF  021C 1510				dw	21Ch, 1510h
020A:59D3  5B					pop	bx
020A:59D4  8E 06 131B				mov	es,data_143		; (020A:131B=0)
020A:59D8  BF 07C9				mov	di,7C9h
020A:59DB  83 C7 13				add	di,13h
020A:59DE  81 EF 0096				sub	di,96h
020A:59E2  03 3E 131D				add	di,data_144		; (020A:131D=0)
020A:59E6  BD 07DC				mov	bp,7DCh
020A:59E9  B9 0009				mov	cx,9
020A:59EC  A1 344A				mov	ax,data_348		; (020A:344A=414Ch)
020A:59EF  3B 06 344E				cmp	ax,data_350		; (020A:344E=5245h)
020A:59F3  A3 344E				mov	data_350,ax		; (020A:344E=5245h)
020A:59F6  75 21				jnz	locloop_764		; Jump if not zero
020A:59F8  83 C7 05				add	di,5
020A:59FB  83 C5 05				add	bp,5
020A:59FE  B9 0004				mov	cx,4
020A:5A01  3E: 3B 56 00				cmp	dx,ds:[bp]
020A:5A05  75 12				jne	locloop_764		; Jump if not equal
020A:5A07  83 C7 02				add	di,2
020A:5A0A  83 C5 02				add	bp,2
020A:5A0D  B9 0002				mov	cx,2
020A:5A10  3E: 3A 5E 00				cmp	bl,ds:[bp]
020A:5A14  75 03				jne	locloop_764		; Jump if not equal
020A:5A16  47					inc	di
020A:5A17  45					inc	bp
020A:5A18  49					dec	cx

020A:5A19			locloop_764:
020A:5A19  C6 06 2B41 01			mov	data_235,1		; (020A:2B41=8Dh)
020A:5A1E  3E: 8A 66 00				mov	ah,ds:[bp]
020A:5A22  E8 FAD3				call	sub_43			; (54F8)
020A:5A25  47					inc	di
020A:5A26  45					inc	bp
020A:5A27  E2 F0				loop	locloop_764		; Loop if cx > 0

020A:5A29			loc_765:
020A:5A29  8B 1E 3454				mov	bx,data_353		; (020A:3454=0A8ADh)
020A:5A2D  2B 1E 3452				sub	bx,data_352		; (020A:3452=0D30h)
020A:5A31  75 03				jnz	loc_766			; Jump if not zero
020A:5A33  E9 00B0				jmp	loc_772			; (5AE6)
020A:5A36			loc_766:
020A:5A36  A1 344C				mov	ax,data_349		; (020A:344C=5453h)
020A:5A39  2B 06 3452				sub	ax,data_352		; (020A:3452=0D30h)
020A:5A3D  B9 0040				mov	cx,40h
020A:5A40  F7 E1				mul	cx			; dx:ax = reg * ax
020A:5A42  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020A:5A44  8B 0E 344C				mov	cx,data_349		; (020A:344C=5453h)
020A:5A48  3B 0E 3054				cmp	cx,data_293		; (020A:3054=7400h)
020A:5A4C  74 31				je	loc_769			; Jump if equal
020A:5A4E  3B 06 3456				cmp	ax,data_354		; (020A:3456=20A5h)
020A:5A52  75 03				jne	loc_767			; Jump if not equal
020A:5A54  E9 008F				jmp	loc_772			; (5AE6)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 194

020A:5A57			loc_767:
020A:5A57  80 3E 1329 01			cmp	data_149,1		; (020A:1329=0)
020A:5A5C  75 21				jne	loc_769			; Jump if not equal
020A:5A5E  8B 1E 3454				mov	bx,data_353		; (020A:3454=0A8ADh)
020A:5A62  2B 1E 3452				sub	bx,data_352		; (020A:3452=0D30h)
020A:5A66  8B D0				mov	dx,ax
020A:5A68  81 FB 0200				cmp	bx,200h
020A:5A6C  77 08				ja	loc_768			; Jump if above
020A:5A6E  F7 C2 0003				test	dx,3
020A:5A72  74 0B				jz	loc_769			; Jump if zero
020A:5A74  EB 70				jmp	short loc_772		; (5AE6)
020A:5A76			loc_768:
020A:5A76  80 CA 01				or	dl,1
020A:5A79  3B 16 3456				cmp	dx,data_354		; (020A:3456=20A5h)
020A:5A7D  74 67				je	loc_772			; Jump if equal
020A:5A7F			loc_769:
020A:5A7F  8B D0				mov	dx,ax
020A:5A81  BF 07C9				mov	di,7C9h
020A:5A84  83 C7 1E				add	di,1Eh
020A:5A87  81 EF 0096				sub	di,96h
020A:5A8B  03 3E 131D				add	di,data_144		; (020A:131D=0)
020A:5A8F  A1 3456				mov	ax,data_354		; (020A:3456=20A5h)
020A:5A92  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:5A94  03 F8				add	di,ax
020A:5A96  B4 FA				mov	ah,0FAh
020A:5A98  80 3E 2B44 02			cmp	data_237,2		; (020A:2B44=0AEh)
020A:5A9D  75 02				jne	loc_770			; Jump if not equal
020A:5A9F  B4 2E				mov	ah,2Eh			; '.'
020A:5AA1			loc_770:
020A:5AA1  C6 06 2B41 01			mov	data_235,1		; (020A:2B41=8Dh)
020A:5AA6  E8 FA4F				call	sub_43			; (54F8)
020A:5AA9  B4 0F				mov	ah,0Fh
020A:5AAB  E8 FAD6				call	sub_44			; (5584)
020A:5AAE  89 16 3456				mov	data_354,dx		; (020A:3456=20A5h)
020A:5AB2  BF 07C9				mov	di,7C9h
020A:5AB5  83 C7 1E				add	di,1Eh
020A:5AB8  81 EF 0096				sub	di,96h
020A:5ABC  03 3E 131D				add	di,data_144		; (020A:131D=0)
020A:5AC0  B4 2A				mov	ah,2Ah			; '*'
020A:5AC2  80 3E 2B44 02			cmp	data_237,2		; (020A:2B44=0AEh)
020A:5AC7  74 0A				je	loc_771			; Jump if equal
020A:5AC9  B4 DD				mov	ah,0DDh
020A:5ACB  F7 C2 0001				test	dx,1
020A:5ACF  74 02				jz	loc_771			; Jump if zero
020A:5AD1  B4 DE				mov	ah,0DEh
020A:5AD3			loc_771:
020A:5AD3  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:5AD5  03 FA				add	di,dx
020A:5AD7  C6 06 2B41 01			mov	data_235,1		; (020A:2B41=8Dh)
020A:5ADC  E8 FA19				call	sub_43			; (54F8)
020A:5ADF  8A 26 1207				mov	ah,data_139		; (020A:1207=0)
020A:5AE3  E8 FA9E				call	sub_44			; (5584)
020A:5AE6			loc_772:
020A:5AE6  07					pop	es
020A:5AE7  5D					pop	bp
020A:5AE8  5F					pop	di
020A:5AE9  5A					pop	dx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 195

020A:5AEA  59					pop	cx
020A:5AEB  5B					pop	bx
020A:5AEC  58					pop	ax
020A:5AED  C3					retn
020A:5AEE  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_51		proc	near
020A:5AF0  52					push	dx
020A:5AF1  51					push	cx
020A:5AF2  56					push	si
020A:5AF3  57					push	di
020A:5AF4  06					push	es
020A:5AF5  E8 16A5				call	sub_78			; (719D)
020A:5AF8  BE 1716				mov	si,1716h
020A:5AFB  F6 06 1715 03			test	byte ptr ds:[1715h],3	; (ss:1715=15h)
020A:5B00  75 03				jnz	loc_773			; Jump if not zero
020A:5B02  BE 1724				mov	si,1724h
020A:5B05			loc_773:
020A:5B05  BF 06D9				mov	di,6D9h
020A:5B08  B9 1724				mov	cx,1724h
020A:5B0B  81 E9 1716				sub	cx,1716h
020A:5B0F  FC					cld				; Clear direction
020A:5B10  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5B12  32 D2				xor	dl,dl			; Zero register
020A:5B14  E8 167D				call	sub_76			; (7194)
020A:5B17  26: A1 0000				mov	ax,word ptr es:[0]	; (19F9:0000=545h)
020A:5B1B  3D FFFF				cmp	ax,0FFFFh
020A:5B1E  75 04				jne	loc_774			; Jump if not equal
020A:5B20  B2 01				mov	dl,1
020A:5B22  33 C0				xor	ax,ax			; Zero register
020A:5B24			loc_774:
020A:5B24  BD 0699				mov	bp,699h
020A:5B27  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:5B27  9A					db	9Ah
020A:5B28  021C 1510				dw	21Ch, 1510h
020A:5B2C  26: A1 0002				mov	ax,word ptr es:[2]	; (19F9:0002=740Fh)
020A:5B30  0A D2				or	dl,dl			; Zero ?
020A:5B32  74 02				jz	loc_775			; Jump if zero
020A:5B34  33 C0				xor	ax,ax			; Zero register
020A:5B36			loc_775:
020A:5B36  BD 069E				mov	bp,69Eh
020A:5B39  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:5B39  9A					db	9Ah
020A:5B3A  021C 1510				dw	21Ch, 1510h
020A:5B3E  BE 0000				mov	si,0
020A:5B41  F6 06 1715 03			test	byte ptr ds:[1715h],3	; (ss:1715=15h)
020A:5B46  75 0B				jnz	loc_776			; Jump if not zero
020A:5B48  A0 3040				mov	al,byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:5B4B  FE C8				dec	al
020A:5B4D  B3 15				mov	bl,15h
020A:5B4F  F6 E3				mul	bl			; ax = reg * al
020A:5B51  03 F0				add	si,ax
020A:5B53			loc_776:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 196

020A:5B53  26: 8B 04				mov	ax,es:[si]
020A:5B56  0A D2				or	dl,dl			; Zero ?
020A:5B58  74 02				jz	loc_777			; Jump if zero
020A:5B5A  33 C0				xor	ax,ax			; Zero register
020A:5B5C			loc_777:
020A:5B5C  BD 06E9				mov	bp,6E9h
020A:5B5F  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:5B5F  9A					db	9Ah
020A:5B60  021C 1510				dw	21Ch, 1510h
020A:5B64  26: 8B 44 04				mov	ax,es:[si+4]
020A:5B68  BD 06EE				mov	bp,6EEh
020A:5B6B  0A D2				or	dl,dl			; Zero ?
020A:5B6D  74 02				jz	loc_778			; Jump if zero
020A:5B6F  33 C0				xor	ax,ax			; Zero register
020A:5B71			loc_778:
020A:5B71  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:5B71  9A					db	9Ah
020A:5B72  021C 1510				dw	21Ch, 1510h
020A:5B76  07					pop	es
020A:5B77  5F					pop	di
020A:5B78  5E					pop	si
020A:5B79  5A					pop	dx
020A:5B7A  59					pop	cx
020A:5B7B  E8 1607				call	sub_74			; (7185)
020A:5B7E  C3					retn
				sub_51		endp

020A:5B7F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_52		proc	near
020A:5B80  BF 33FE				mov	di,33FEh
020A:5B83  57					push	di
020A:5B84  B9 003C				mov	cx,3Ch
020A:5B87  B3 00				mov	bl,0

020A:5B89			locloop_779:
020A:5B89  26: 8A 04				mov	al,es:[si]
020A:5B8C  3C 20				cmp	al,20h			; ' '
020A:5B8E  72 0B				jb	loc_780			; Jump if below
020A:5B90  3C 80				cmp	al,80h
020A:5B92  73 07				jae	loc_780			; Jump if above or =
020A:5B94  88 05				mov	[di],al
020A:5B96  FE C3				inc	bl
020A:5B98  47					inc	di
020A:5B99  EB 0E				jmp	short loc_781		; (5BA9)
020A:5B9B			loc_780:
020A:5B9B  80 FB 00				cmp	bl,0
020A:5B9E  74 09				je	loc_781			; Jump if equal
020A:5BA0  80 FB 08				cmp	bl,8
020A:5BA3  77 0C				ja	loc_782			; Jump if above
020A:5BA5  5F					pop	di
020A:5BA6  57					push	di
020A:5BA7  B3 00				mov	bl,0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 197

020A:5BA9			loc_781:
020A:5BA9  46					inc	si
020A:5BAA  80 FB 20				cmp	bl,20h			; ' '
020A:5BAD  77 02				ja	loc_782			; Jump if above
020A:5BAF  E2 D8				loop	locloop_779		; Loop if cx > 0

020A:5BB1			loc_782:
020A:5BB1  5F					pop	di
020A:5BB2  C3					retn
				sub_52		endp

020A:5BB3  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_53		proc	near
020A:5BB4  50					push	ax
020A:5BB5  B5 20				mov	ch,20h			; ' '
020A:5BB7  B4 01				mov	ah,1
020A:5BB9  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:5BB9  9A					db	9Ah
020A:5BBA  2BA8 1510				dw	2BA8h, 1510h
020A:5BBE  58					pop	ax
020A:5BBF  C3					retn
				sub_53		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_54		proc	near
020A:5BC0  50					push	ax
020A:5BC1  8B 0E 30CB				mov	cx,word ptr ds:[30CBh]	; (ss:30CB=46h)
020A:5BC5  B4 01				mov	ah,1
020A:5BC7  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:5BC7  9A					db	9Ah
020A:5BC8  2BA8 1510				dw	2BA8h, 1510h
020A:5BCC  58					pop	ax
020A:5BCD  C3					retn
				sub_54		endp

020A:5BCE  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_55		proc	near
020A:5BD0  06					push	es
020A:5BD1  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=19F9h)
020A:5BD5  BF 06C7				mov	di,6C7h
020A:5BD8  81 EF 0623				sub	di,623h
020A:5BDC  81 C7 0190				add	di,190h
020A:5BE0  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=777h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 198

020A:5BE4  B9 001A				mov	cx,1Ah
020A:5BE7  B2 41				mov	dl,41h			; 'A'
020A:5BE9  B6 61				mov	dh,61h			; 'a'

020A:5BEB			locloop_783:
020A:5BEB  8A E2				mov	ah,dl
020A:5BED  A0 1207				mov	al,byte ptr ds:[1207h]	; (ss:1207=6)
020A:5BF0  F7 C3 8000				test	bx,8000h
020A:5BF4  75 04				jnz	loc_784			; Jump if not zero
020A:5BF6  8A E6				mov	ah,dh
020A:5BF8  B0 07				mov	al,7
020A:5BFA			loc_784:
020A:5BFA  80 3E 1329 01			cmp	byte ptr ds:[1329h],1	; (ss:1329=0E9h)
020A:5BFF  75 0B				jne	loc_785			; Jump if not equal
020A:5C01  3A 06 1207				cmp	al,byte ptr ds:[1207h]	; (ss:1207=6)
020A:5C05  75 05				jne	loc_785			; Jump if not equal
020A:5C07  C6 06 2B41 01			mov	byte ptr ds:[2B41h],1	; (ss:2B41=0EBh)
020A:5C0C			loc_785:
020A:5C0C  E8 F8E9				call	sub_43			; (54F8)
020A:5C0F  8A E0				mov	ah,al
020A:5C11  E8 F970				call	sub_44			; (5584)
020A:5C14  83 C7 4F				add	di,4Fh
020A:5C17  FE C2				inc	dl
020A:5C19  FE C6				inc	dh
020A:5C1B  D1 C3				rol	bx,1			; Rotate
020A:5C1D  83 F9 0D				cmp	cx,0Dh
020A:5C20  75 0F				jne	loc_786			; Jump if not equal
020A:5C22  BF 06ED				mov	di,6EDh
020A:5C25  81 EF 0623				sub	di,623h
020A:5C29  81 C7 0190				add	di,190h
020A:5C2D  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=777h)
020A:5C31			loc_786:
020A:5C31  83 F9 0B				cmp	cx,0Bh
020A:5C34  75 0E				jne	loc_787			; Jump if not equal
020A:5C36  81 C7 00A0				add	di,0A0h
020A:5C3A  8A 3E 4E7F				mov	bh,byte ptr ds:[4E7Fh]	; (ss:4E7F=3)
020A:5C3E  D0 CF				ror	bh,1			; Rotate
020A:5C40  D0 CF				ror	bh,1			; Rotate
020A:5C42  D0 CF				ror	bh,1			; Rotate
020A:5C44			loc_787:
020A:5C44  83 F9 07				cmp	cx,7
020A:5C47  75 04				jne	loc_788			; Jump if not equal
020A:5C49  8A 3E 4E24				mov	bh,byte ptr ds:[4E24h]	; (ss:4E24=0)
020A:5C4D			loc_788:
020A:5C4D  E2 9C				loop	locloop_783		; Loop if cx > 0

020A:5C4F  07					pop	es
020A:5C50  C3					retn
				sub_55		endp

020A:5C51  87 DB				xchg	bx,bx
020A:5C53  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 199

				sub_56		proc	near
020A:5C54  53					push	bx
020A:5C55  51					push	cx
020A:5C56  52					push	dx
020A:5C57  57					push	di
020A:5C58  56					push	si
020A:5C59  06					push	es
020A:5C5A  E8 1540				call	sub_78			; (719D)
020A:5C5D  BE 15C8				mov	si,15C8h
020A:5C60  BF 030F				mov	di,30Fh
020A:5C63  B9 0003				mov	cx,3
020A:5C66  F6 06 4E7F 07			test	byte ptr ds:[4E7Fh],7	; (ss:4E7F=3)
020A:5C6B  75 02				jnz	loc_789			; Jump if not zero
020A:5C6D  03 F1				add	si,cx
020A:5C6F			loc_789:
020A:5C6F  FC					cld				; Clear direction
020A:5C70  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5C72  BE 030F				mov	si,30Fh
020A:5C75  BF 030F				mov	di,30Fh
020A:5C78  81 EF 0096				sub	di,96h
020A:5C7C  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=777h)
020A:5C80  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=19F9h)
020A:5C84  B9 0003				mov	cx,3

020A:5C87			locloop_790:
020A:5C87  8A 24				mov	ah,[si]
020A:5C89  E8 F86C				call	sub_43			; (54F8)
020A:5C8C  47					inc	di
020A:5C8D  46					inc	si
020A:5C8E  E2 F7				loop	locloop_790		; Loop if cx > 0

020A:5C90  B4 02				mov	ah,2
020A:5C92  32 FF				xor	bh,bh			; Zero register
020A:5C94  BA 184F				mov	dx,184Fh
020A:5C97  9A 1510:2BA8		;*		call	far ptr sub_143		;*(1510:2BA8)
020A:5C97  9A					db	9Ah
020A:5C98  2BA8 1510				dw	2BA8h, 1510h
020A:5C9C  07					pop	es
020A:5C9D  5E					pop	si
020A:5C9E  5F					pop	di
020A:5C9F  5A					pop	dx
020A:5CA0  59					pop	cx
020A:5CA1  5B					pop	bx
020A:5CA2  C3					retn
				sub_56		endp

020A:5CA3  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_57		proc	near
020A:5CA4  E8 14F6				call	sub_78			; (719D)
020A:5CA7  A0 15D0				mov	al,data_159		; (020A:15D0=0)
020A:5CAA  B9 15E8				mov	cx,15E8h
020A:5CAD  81 E9 15D1				sub	cx,15D1h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 200

020A:5CB1  F6 E1				mul	cl			; ax = reg * al
020A:5CB3  05 15D1				add	ax,15D1h
020A:5CB6  8B F0				mov	si,ax
020A:5CB8  80 3E 15D0 02			cmp	data_159,2		; (020A:15D0=0)
020A:5CBD  74 13				je	loc_791			; Jump if equal
020A:5CBF  80 3E 15D0 03			cmp	data_159,3		; (020A:15D0=0)
020A:5CC4  75 16				jne	loc_792			; Jump if not equal
020A:5CC6  F6 06 35E4 10			test	data_399,10h		; (020A:35E4=8Ch)
020A:5CCB  74 0F				jz	loc_792			; Jump if zero
020A:5CCD  BE 1644				mov	si,1644h
020A:5CD0  EB 0A				jmp	short loc_792		; (5CDC)
020A:5CD2			loc_791:
020A:5CD2  F6 06 35E4 04			test	data_399,4		; (020A:35E4=8Ch)
020A:5CD7  74 03				jz	loc_792			; Jump if zero
020A:5CD9  BE 162D				mov	si,162Dh
020A:5CDC			loc_792:
020A:5CDC  BF 0480				mov	di,480h
020A:5CDF  B9 15DC				mov	cx,15DCh
020A:5CE2  81 E9 15D1				sub	cx,15D1h
020A:5CE6  FC					cld				; Clear direction
020A:5CE7  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5CE9  B9 15E8				mov	cx,15E8h
020A:5CEC  81 E9 15DC				sub	cx,15DCh
020A:5CF0  BF 0572				mov	di,572h
020A:5CF3  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5CF5  B9 166B				mov	cx,166Bh
020A:5CF8  81 E9 165B				sub	cx,165Bh
020A:5CFC  BE 165B				mov	si,165Bh
020A:5CFF  F6 06 35E4 02			test	data_399,2		; (020A:35E4=8Ch)
020A:5D04  75 17				jnz	loc_793			; Jump if not zero
020A:5D06  BE 167B				mov	si,167Bh
020A:5D09  F6 06 35E4 04			test	data_399,4		; (020A:35E4=8Ch)
020A:5D0E  75 0D				jnz	loc_793			; Jump if not zero
020A:5D10  BE 169B				mov	si,169Bh
020A:5D13  F6 06 35E4 08			test	data_399,8		; (020A:35E4=8Ch)
020A:5D18  75 03				jnz	loc_793			; Jump if not zero
020A:5D1A  BE 168B				mov	si,168Bh
020A:5D1D			loc_793:
020A:5D1D  BF 048F				mov	di,48Fh
020A:5D20  F6 06 15D0 02			test	data_159,2		; (020A:15D0=0)
020A:5D25  74 03				jz	loc_794			; Jump if zero
020A:5D27  BE 166B				mov	si,166Bh
020A:5D2A			loc_794:
020A:5D2A  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5D2C  C3					retn
				sub_57		endp

020A:5D2D  87 DB				xchg	bx,bx
020A:5D2F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_58		proc	near
020A:5D30  E8 146A				call	sub_78			; (719D)
020A:5D33  8B 1E 1326				mov	bx,data_147		; (020A:1326=0)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 201

020A:5D37  C6 47 6F 00				mov	byte ptr [bx+6Fh],0
020A:5D3B  C6 47 5C 00				mov	byte ptr [bx+5Ch],0
020A:5D3F  C6 47 6E 00				mov	byte ptr [bx+6Eh],0
020A:5D43  A0 16AB				mov	al,data_164		; (020A:16AB=41h)
020A:5D46  A8 01				test	al,1
020A:5D48  74 04				jz	loc_795			; Jump if zero
020A:5D4A  C6 47 6F 07				mov	byte ptr [bx+6Fh],7
020A:5D4E			loc_795:
020A:5D4E  A8 02				test	al,2
020A:5D50  74 04				jz	loc_796			; Jump if zero
020A:5D52  C6 47 5C 07				mov	byte ptr [bx+5Ch],7
020A:5D56			loc_796:
020A:5D56  A8 04				test	al,4
020A:5D58  74 04				jz	loc_797			; Jump if zero
020A:5D5A  C6 47 6E 07				mov	byte ptr [bx+6Eh],7
020A:5D5E			loc_797:
020A:5D5E  BB 16B5				mov	bx,16B5h
020A:5D61  D7					xlat				; al=[al+[bx]] table
020A:5D62  8A E0				mov	ah,al
020A:5D64  25 0FF0				and	ax,0FF0h
020A:5D67  B1 04				mov	cl,4
020A:5D69  D2 C8				ror	al,cl			; Rotate
020A:5D6B  8A DC				mov	bl,ah
020A:5D6D  32 E4				xor	ah,ah			; Zero register
020A:5D6F  B9 16C3				mov	cx,16C3h
020A:5D72  81 E9 16BD				sub	cx,16BDh
020A:5D76  F6 E1				mul	cl			; ax = reg * al
020A:5D78  05 16BD				add	ax,16BDh
020A:5D7B  8B F0				mov	si,ax
020A:5D7D  BF 053D				mov	di,53Dh
020A:5D80  FC					cld				; Clear direction
020A:5D81  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5D83  B8 16E5				mov	ax,16E5h
020A:5D86  2D 16D5				sub	ax,16D5h
020A:5D89  8B C8				mov	cx,ax
020A:5D8B  F6 E3				mul	bl			; ax = reg * al
020A:5D8D  8B F0				mov	si,ax
020A:5D8F  81 C6 16D5				add	si,16D5h
020A:5D93  BF 0583				mov	di,583h
020A:5D96  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5D98  C3					retn
				sub_58		endp

							                        ;* No entry point to code
020A:5D99  87 DB				xchg	bx,bx
020A:5D9B  90					nop
020A:5D9C  50					push	ax
020A:5D9D  53					push	bx
020A:5D9E  8A E0				mov	ah,al
020A:5DA0  8B 1E 1326				mov	bx,data_147		; (020A:1326=0)
020A:5DA4  A0 1208				mov	al,data_140		; (020A:1208=0)
020A:5DA7  88 47 52				mov	[bx+52h],al
020A:5DAA  E8 FA4F				call	sub_49			; (57FC)
020A:5DAD  E8 F580		;*		call	sub_37			;*(5330)
020A:5DAD  E8 80 F5				db	0E8h, 80h,0F5h
020A:5DB0  9A 1510:0760		;*		call	far ptr sub_123		;*(1510:0760)
020A:5DB0  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 202

020A:5DB1  0760 1510				dw	760h, 1510h
020A:5DB5  8B 1E 1326				mov	bx,data_147		; (020A:1326=0)
020A:5DB9  C6 47 52 0F				mov	byte ptr [bx+52h],0Fh
020A:5DBD  5B					pop	bx
020A:5DBE  58					pop	ax
020A:5DBF  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_59		proc	near
020A:5DC0  52					push	dx
020A:5DC1  50					push	ax
020A:5DC2  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:5DC7  1E					push	ds
020A:5DC8  E8 13BA				call	sub_74			; (7185)
020A:5DCB  BA 2B53				mov	dx,2B53h
020A:5DCE  B4 09				mov	ah,9
020A:5DD0  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:5DD2  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:5DD7  9C					pushf				; Push flags
020A:5DD8  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:5DDD  5A					pop	dx
020A:5DDE  8E DA				mov	ds,dx
020A:5DE0  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:5DE5  5A					pop	dx
020A:5DE6  75 0A				jnz	loc_798			; Jump if not zero
020A:5DE8  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:5DED  74 03				je	loc_798			; Jump if equal
020A:5DEF  E8 170A				call	sub_85			; (74FC)
020A:5DF2			loc_798:
020A:5DF2  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:5DF7  9D					popf				; Pop flags
020A:5DF8  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:5DFD  58					pop	ax
020A:5DFE  5A					pop	dx
020A:5DFF  C3					retn
				sub_59		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_60		proc	near
020A:5E00  52					push	dx
020A:5E01  50					push	ax
020A:5E02  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:5E07  1E					push	ds
020A:5E08  E8 137A				call	sub_74			; (7185)
020A:5E0B  BA 2B4F				mov	dx,2B4Fh
020A:5E0E  B4 09				mov	ah,9
020A:5E10  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:5E12  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 203

020A:5E17  9C					pushf				; Push flags
020A:5E18  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:5E1D  5A					pop	dx
020A:5E1E  8E DA				mov	ds,dx
020A:5E20  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:5E25  5A					pop	dx
020A:5E26  75 0A				jnz	loc_799			; Jump if not zero
020A:5E28  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:5E2D  74 03				je	loc_799			; Jump if equal
020A:5E2F  E8 16CA				call	sub_85			; (74FC)
020A:5E32			loc_799:
020A:5E32  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:5E37  9D					popf				; Pop flags
020A:5E38  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:5E3D  58					pop	ax
020A:5E3E  5A					pop	dx
020A:5E3F  C3					retn
				sub_60		endp

020A:5E40  50					push	ax
020A:5E41			loc_800:
020A:5E41  3E: 81 7E 00 2020			cmp	word ptr ds:[bp],2020h
020A:5E47  74 05				je	loc_801			; Jump if equal
020A:5E49  45					inc	bp
020A:5E4A  FE C8				dec	al
020A:5E4C  75 F3				jnz	loc_800			; Jump if not zero
020A:5E4E			loc_801:
020A:5E4E  58					pop	ax
020A:5E4F  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_61		proc	near
020A:5E50  E8 134A				call	sub_78			; (719D)
020A:5E53  8B 36 344C				mov	si,data_349		; (020A:344C=5453h)
020A:5E57  BF 2CCA				mov	di,2CCAh
020A:5E5A  A1 344A				mov	ax,data_348		; (020A:344A=414Ch)
020A:5E5D  8E D8				mov	ds,ax
020A:5E5F  0B F6				or	si,si			; Zero ?
020A:5E61  74 09				jz	loc_802			; Jump if zero
020A:5E63  33 C9				xor	cx,cx			; Zero register
020A:5E65  2B CE				sub	cx,si
020A:5E67  83 F9 28				cmp	cx,28h
020A:5E6A  72 03				jb	loc_803			; Jump if below
020A:5E6C			loc_802:
020A:5E6C  B9 0028				mov	cx,28h
020A:5E6F			loc_803:
020A:5E6F  FC					cld				; Clear direction
020A:5E70  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5E72  E8 1310				call	sub_74			; (7185)
020A:5E75  BE 2CCA				mov	si,2CCAh
020A:5E78  C3					retn
				sub_61		endp

							                        ;* No entry point to code
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 204

020A:5E79  87 DB				xchg	bx,bx
020A:5E7B  90					nop
020A:5E7C  06					push	es
020A:5E7D  F6 06 35D3 01			test	data_388,1		; (020A:35D3=9Ah)
020A:5E82  74 34				jz	loc_805			; Jump if zero
020A:5E84  BF 0708				mov	di,708h
020A:5E87  81 EF 0096				sub	di,96h
020A:5E8B  03 3E 131D				add	di,data_144		; (020A:131D=0)
020A:5E8F  8E 06 131B				mov	es,data_143		; (020A:131B=0)
020A:5E93  BE 2CCA				mov	si,2CCAh
020A:5E96  B9 0004				mov	cx,4

020A:5E99			locloop_804:
020A:5E99  8A 04				mov	al,[si]
020A:5E9B  9A 1510:00B0		;*		call	far ptr sub_112		;*(1510:00B0)
020A:5E9B  9A					db	9Ah
020A:5E9C  00B0 1510				dw	0B0h, 1510h
020A:5EA0  8A E3				mov	ah,bl
020A:5EA2  E8 F653				call	sub_43			; (54F8)
020A:5EA5  B4 0F				mov	ah,0Fh
020A:5EA7  E8 F6DA				call	sub_44			; (5584)
020A:5EAA  8A E7				mov	ah,bh
020A:5EAC  E8 F649				call	sub_43			; (54F8)
020A:5EAF  B4 0F				mov	ah,0Fh
020A:5EB1  E8 F6D0				call	sub_44			; (5584)
020A:5EB4  47					inc	di
020A:5EB5  46					inc	si
020A:5EB6  E2 E1				loop	locloop_804		; Loop if cx > 0

020A:5EB8			loc_805:
020A:5EB8  F6 06 35D3 02			test	data_388,2		; (020A:35D3=9Ah)
020A:5EBD  74 15				jz	loc_807			; Jump if zero
020A:5EBF  B9 5000				mov	cx,5000h
020A:5EC2  F6 06 30A1 F0			test	byte ptr data_316,0F0h	; (020A:30A1=' 1\ALLUSE 1')
020A:5EC7  75 03				jnz	locloop_806		; Jump if not zero
020A:5EC9  B9 1000				mov	cx,1000h

020A:5ECC			locloop_806:
020A:5ECC  EB 00				jmp	short $+2		; delay for I/O
020A:5ECE  EB 00				jmp	short $+2		; delay for I/O
020A:5ED0  EB 00				jmp	short $+2		; delay for I/O
020A:5ED2  E2 F8				loop	locloop_806		; Loop if cx > 0

020A:5ED4			loc_807:
020A:5ED4  F6 06 35D3 08			test	data_388,8		; (020A:35D3=9Ah)
020A:5ED9  74 2C				jz	loc_809			; Jump if zero
020A:5EDB  A0 35D4				mov	al,data_389		; (020A:35D4=8Ch)
020A:5EDE  3A 06 2B3B				cmp	al,data_231		; (020A:2B3B=0A0h)
020A:5EE2  77 06				ja	loc_808			; Jump if above
020A:5EE4  3A 06 2B36				cmp	al,data_227		; (020A:2B36=0ADh)
020A:5EE8  75 1D				jne	loc_809			; Jump if not equal
020A:5EEA			loc_808:
020A:5EEA  A1 35D5				mov	ax,data_390		; (020A:35D5=1032h)
020A:5EED  3B 06 344A				cmp	ax,data_348		; (020A:344A=414Ch)
020A:5EF1  75 14				jne	loc_809			; Jump if not equal
020A:5EF3  A1 35D7				mov	ax,data_391		; (020A:35D7=0BF15h)
020A:5EF6  3B 06 344C				cmp	ax,data_349		; (020A:344C=5453h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 205

020A:5EFA  75 0B				jne	loc_809			; Jump if not equal
020A:5EFC  9A 1510:2B10		;*		call	far ptr sub_140		;*(1510:2B10)
020A:5EFC  9A					db	9Ah
020A:5EFD  2B10 1510				dw	2B10h, 1510h
020A:5F01  9A 1510:0760		;*		call	far ptr sub_123		;*(1510:0760)
020A:5F01  9A					db	9Ah
020A:5F02  0760 1510				dw	760h, 1510h
020A:5F06  90					nop
020A:5F07			loc_809:
020A:5F07  07					pop	es
020A:5F08  C3					retn
							                        ;* No entry point to code
020A:5F09  87 DB				xchg	bx,bx
020A:5F0B  90					nop
020A:5F0C  F7 06 4E22 0100			test	data_502,100h		; (020A:4E22=348Ah)
020A:5F12  74 67				jz	loc_812			; Jump if zero
020A:5F14  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:5F19  75 60				jne	loc_812			; Jump if not equal
020A:5F1B  06					push	es
020A:5F1C  1E					push	ds
020A:5F1D  07					pop	es
020A:5F1E  A0 35DD				mov	al,data_394		; (020A:35DD=23h)
020A:5F21  B9 57DD				mov	cx,57DDh
020A:5F24  81 E9 57CD				sub	cx,57CDh
020A:5F28  F6 E1				mul	cl			; ax = reg * al
020A:5F2A  BF 7628				mov	di,7628h
020A:5F2D  BE 57CD				mov	si,57CDh
020A:5F30  03 F0				add	si,ax
020A:5F32  FC					cld				; Clear direction
020A:5F33  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:5F35  A1 361A				mov	ax,data_419		; (020A:361A=1E8Bh)
020A:5F38  3B 06 35D9				cmp	ax,data_392		; (020A:35D9=1141h)
020A:5F3C  74 17				je	loc_810			; Jump if equal
020A:5F3E  A3 35D9				mov	data_392,ax		; (020A:35D9=1141h)
020A:5F41  C6 06 763A 44			mov	byte ptr data_596,44h	; (020A:763A=74h) 'D'
020A:5F46  BD 7641				mov	bp,7641h
020A:5F49  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:5F49  9A					db	9Ah
020A:5F4A  021C 1510				dw	21Ch, 1510h
020A:5F4E  B0 52				mov	al,52h			; 'R'
020A:5F50  9A 1510:2280		;*		call	far ptr sub_133		;*(1510:2280)
020A:5F50  9A					db	9Ah
020A:5F51  2280 1510				dw	2280h, 1510h
020A:5F55			loc_810:
020A:5F55  A1 3618				mov	ax,data_418		; (020A:3618=0A4F3h)
020A:5F58  3B 06 35DB				cmp	ax,data_393		; (020A:35DB=0EF81h)
020A:5F5C  74 17				je	loc_811			; Jump if equal
020A:5F5E  A3 35DB				mov	data_393,ax		; (020A:35DB=0EF81h)
020A:5F61  C6 06 763A 45			mov	byte ptr data_596,45h	; (020A:763A=74h) 'E'
020A:5F66  BD 7641				mov	bp,7641h
020A:5F69  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:5F69  9A					db	9Ah
020A:5F6A  021C 1510				dw	21Ch, 1510h
020A:5F6E  B0 52				mov	al,52h			; 'R'
020A:5F70  9A 1510:2280		;*		call	far ptr sub_133		;*(1510:2280)
020A:5F70  9A					db	9Ah
020A:5F71  2280 1510				dw	2280h, 1510h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 206

020A:5F75			loc_811:
020A:5F75  C6 06 35DD 00			mov	data_394,0		; (020A:35DD=23h)
020A:5F7A  07					pop	es
020A:5F7B			loc_812:
020A:5F7B  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_62		proc	near
020A:5F7C  57					push	di
020A:5F7D  06					push	es
020A:5F7E  A2 2B3B				mov	byte ptr ds:[2B3Bh],al	; (ss:2B3B=0BAh)
020A:5F81  8A E0				mov	ah,al
020A:5F83  D0 EC				shr	ah,1			; Shift w/zeros fill
020A:5F85  80 C4 30				add	ah,30h			; '0'
020A:5F88  88 26 67A9				mov	byte ptr ds:[67A9h],ah	; (ss:67A9=3Eh)
020A:5F8C  BD 0772				mov	bp,772h
020A:5F8F  3E: 88 66 00				mov	ds:[bp],ah
020A:5F93  8E 06 131B				mov	es,word ptr ds:[131Bh]	; (ss:131B=19F9h)
020A:5F97  BF 0772				mov	di,772h
020A:5F9A  81 EF 0096				sub	di,96h
020A:5F9E  03 3E 131D				add	di,word ptr ds:[131Dh]	; (ss:131D=777h)
020A:5FA2  E8 F553				call	sub_43			; (54F8)
020A:5FA5  07					pop	es
020A:5FA6  80 3E 35E6 00			cmp	byte ptr ds:[35E6h],0	; (ss:35E6=52h)
020A:5FAB  74 1D				je	loc_815			; Jump if equal
020A:5FAD  80 3E 2B3B 0A			cmp	byte ptr ds:[2B3Bh],0Ah	; (ss:2B3B=0BAh)
020A:5FB2  72 0E				jb	loc_813			; Jump if below
020A:5FB4  F6 06 4E7F 07			test	byte ptr ds:[4E7Fh],7	; (ss:4E7F=3)
020A:5FB9  75 0C				jnz	loc_814			; Jump if not zero
020A:5FBB  80 0E 4E7F 07			or	byte ptr ds:[4E7Fh],7	; (ss:4E7F=3)
020A:5FC0  EB 05				jmp	short loc_814		; (5FC7)
020A:5FC2			loc_813:
020A:5FC2  80 26 4E7F F8			and	byte ptr ds:[4E7Fh],0F8h	; (ss:4E7F=3)
020A:5FC7			loc_814:
020A:5FC7  E8 FC8A				call	sub_56			; (5C54)
020A:5FCA			loc_815:
020A:5FCA  5F					pop	di
020A:5FCB  C3					retn
				sub_62		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_63		proc	near
020A:5FCC  50					push	ax
020A:5FCD  53					push	bx
020A:5FCE  56					push	si
020A:5FCF  55					push	bp
020A:5FD0  C6 06 53D6 00			mov	byte ptr ds:[53D6h],0	; (020A:53D6=15h)
020A:5FD5  BD 0002				mov	bp,2
020A:5FD8  8B F0				mov	si,ax
020A:5FDA  A3 40F7				mov	word ptr ds:[40F7h],ax	; (020A:40F7=3C0Bh)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 207

020A:5FDD  8B CB				mov	cx,bx
020A:5FDF  89 1E 40F5				mov	word ptr ds:[40F5h],bx	; (020A:40F5=744Ch)
020A:5FE3  83 FA 20				cmp	dx,20h
020A:5FE6  75 0B				jne	loc_816			; Jump if not equal
020A:5FE8  E8 11B2				call	sub_78			; (719D)
020A:5FEB  BA 002C				mov	dx,2Ch
020A:5FEE  BF 47C4				mov	di,47C4h
020A:5FF1  EB 64				jmp	short loc_823		; (6057)
020A:5FF3			loc_816:
020A:5FF3  83 FA 10				cmp	dx,10h
020A:5FF6  75 0B				jne	loc_817			; Jump if not equal
020A:5FF8  E8 1199				call	sub_76			; (7194)
020A:5FFB  BA 0015				mov	dx,15h
020A:5FFE  BF 0000				mov	di,0
020A:6001  EB 54				jmp	short loc_823		; (6057)
020A:6003			loc_817:
020A:6003  83 FA 01				cmp	dx,1
020A:6006  74 31				je	loc_820			; Jump if equal
020A:6008  83 FA 02				cmp	dx,2
020A:600B  74 3B				je	loc_822			; Jump if equal
020A:600D  83 FA 04				cmp	dx,4
020A:6010  74 0B				je	loc_818			; Jump if equal
020A:6012  83 FA 40				cmp	dx,40h
020A:6015  74 15				je	loc_819			; Jump if equal
020A:6017  BB 0004				mov	bx,4
020A:601A  E9 0BFB				jmp	loc_993			; (6C18)
020A:601D			loc_818:
020A:601D  E8 15F8				call	sub_88			; (7618)
020A:6020  BB 003B				mov	bx,3Bh
020A:6023  03 1E 2B42				add	bx,data_236		; (020A:2B42=0A4A5h)
020A:6027  BA 004A				mov	dx,4Ah
020A:602A  EB 5A				jmp	short loc_833		; (6086)
020A:602C			loc_819:
020A:602C  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:6032  74 05				je	loc_820			; Jump if equal
020A:6034  E8 116F				call	sub_80			; (71A6)
020A:6037  EB 03				jmp	short loc_821		; (603C)
020A:6039			loc_820:
020A:6039  E8 1568				call	sub_87			; (75A4)
020A:603C			loc_821:
020A:603C  BB 0007				mov	bx,7
020A:603F  03 1E 2B42				add	bx,data_236		; (020A:2B42=0A4A5h)
020A:6043  BA 0016				mov	dx,16h
020A:6046  EB 3E				jmp	short loc_833		; (6086)
020A:6048			loc_822:
020A:6048  E8 14E5				call	sub_86			; (7530)
020A:604B  BB 000A				mov	bx,0Ah
020A:604E  BA 0019				mov	dx,19h
020A:6051  03 16 2B42				add	dx,data_236		; (020A:2B42=0A4A5h)
020A:6055  EB 2F				jmp	short loc_833		; (6086)
020A:6057			loc_823:
020A:6057  33 ED				xor	bp,bp			; Zero register
020A:6059  06					push	es
020A:605A  8C D8				mov	ax,ds
020A:605C  8E C0				mov	es,ax
020A:605E  1F					pop	ds
020A:605F  BB FFFF				mov	bx,0FFFFh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 208

020A:6062			loc_824:
020A:6062  39 75 02				cmp	[di+2],si
020A:6065  74 09				je	loc_827			; Jump if equal
020A:6067			loc_825:
020A:6067  39 1D				cmp	[di],bx
020A:6069  74 0B				je	loc_828			; Jump if equal
020A:606B			loc_826:
020A:606B  03 FA				add	di,dx
020A:606D  45					inc	bp
020A:606E  EB F2				jmp	short loc_824		; (6062)
020A:6070			loc_827:
020A:6070  39 0D				cmp	[di],cx
020A:6072  75 F3				jne	loc_825			; Jump if not equal
020A:6074  EB 09				jmp	short loc_830		; (607F)
020A:6076			loc_828:
020A:6076  39 5D 02				cmp	[di+2],bx
020A:6079  75 02				jne	loc_829			; Jump if not equal
020A:607B  EB 05				jmp	short loc_831		; (6082)
020A:607D			loc_829:
020A:607D  EB EC				jmp	short loc_826		; (606B)
020A:607F			loc_830:
020A:607F  F9					stc				; Set carry flag
020A:6080  EB 01				jmp	short loc_832		; (6083)
020A:6082			loc_831:
020A:6082  F8					clc				; Clear carry flag
020A:6083			loc_832:
020A:6083  E9 0297				jmp	loc_880			; (631D)
020A:6086			loc_833:
020A:6086  BF 0008				mov	di,8
020A:6089  26: A1 0002				mov	ax,word ptr es:[2]	; (020A:0002=10h)
020A:608D  3B C1				cmp	ax,cx
020A:608F  77 0F				ja	loc_835			; Jump if above
020A:6091  72 08				jc	loc_834			; Jump if carry Set
020A:6093  26: A1 0004				mov	ax,word ptr es:[4]	; (020A:0004=808h)
020A:6097  3B C6				cmp	ax,si
020A:6099  77 05				ja	loc_835			; Jump if above
020A:609B			loc_834:
020A:609B  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (020A:0006=3)
020A:60A0			loc_835:
020A:60A0  06					push	es
020A:60A1  8C D8				mov	ax,ds
020A:60A3  8E C0				mov	es,ax
020A:60A5  1F					pop	ds
020A:60A6  B4 03				mov	ah,3
020A:60A8  26: 80 3E 15D0 01			cmp	es:data_159,1		; (020A:15D0=0)
020A:60AE  77 05				ja	loc_836			; Jump if above
020A:60B0  03 DD				add	bx,bp
020A:60B2  BDE9			data_587	dw	0BDE9h
020A:60B4  3900			data_588	dw	3900h
020A:60B6  0D 3573				or	ax,3573h
020A:60B9  8A 45 05				mov	al,[di+5]
020A:60BC  84 C4				test	al,ah
020A:60BE  75 11				jnz	loc_837			; Jump if not zero
020A:60C0  03 FB				add	di,bx
020A:60C2  39 0D				cmp	[di],cx
020A:60C4  73 28				jae	loc_840			; Jump if above or =
020A:60C6  8A 45 05				mov	al,[di+5]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 209

020A:60C9  84 C4				test	al,ah
020A:60CB  75 04				jnz	loc_837			; Jump if not zero
020A:60CD  03 FB				add	di,bx
020A:60CF  EB E4		;*		jmp	short loc_836		;*(60B5)
020A:60CF  EB E4				db	0EBh,0E4h
020A:60D1			loc_837:
020A:60D1  A8 02				test	al,2
020A:60D3  75 06				jnz	loc_838			; Jump if not zero
020A:60D5  03 FB				add	di,bx
020A:60D7  03 FD				add	di,bp
020A:60D9  EB DA		;*		jmp	short loc_836		;*(60B5)
020A:60D9  EB DA				db	0EBh,0DAh
020A:60DB			loc_838:
020A:60DB  A8 01				test	al,1
020A:60DD  75 04				jnz	loc_839			; Jump if not zero
020A:60DF  03 FA				add	di,dx
020A:60E1  EB D2		;*		jmp	short loc_836		;*(60B5)
020A:60E1  EB D2				db	0EBh,0D2h
020A:60E3			loc_839:
020A:60E3  8A 45 06				mov	al,[di+6]
020A:60E6  32 E4				xor	ah,ah			; Zero register
020A:60E8  03 F8				add	di,ax
020A:60EA  B4 03				mov	ah,3
020A:60EC  EB C7		;*		jmp	short loc_836		;*(60B5)
020A:60EC  EB C7				db	0EBh,0C7h
020A:60EE			loc_840:
020A:60EE  74 0B				jz	loc_841			; Jump if zero
020A:60F0  83 3D FF				cmp	word ptr [di],0FFFFh
020A:60F3  75 4B				jne	loc_847			; Jump if not equal
020A:60F5  3B 3E 0000				cmp	di,word ptr ds:[0]	; (020A:0000=1828h)
020A:60F9  73 45				jae	loc_847			; Jump if above or =
020A:60FB			loc_841:
020A:60FB  39 0D				cmp	[di],cx
020A:60FD  75 41				jne	loc_847			; Jump if not equal
020A:60FF  39 75 02				cmp	[di+2],si
020A:6102  73 3A				jae	loc_846			; Jump if above or =
020A:6104			loc_842:
020A:6104  8A 45 05				mov	al,[di+5]
020A:6107  84 C4				test	al,ah
020A:6109  75 16				jnz	loc_843			; Jump if not zero
020A:610B  03 FB				add	di,bx
020A:610D  39 0D				cmp	[di],cx
020A:610F  75 2F				jne	loc_847			; Jump if not equal
020A:6111  39 75 02				cmp	[di+2],si
020A:6114  73 28				jae	loc_846			; Jump if above or =
020A:6116  8A 45 05				mov	al,[di+5]
020A:6119  84 C4				test	al,ah
020A:611B  75 04				jnz	loc_843			; Jump if not zero
020A:611D  03 FB				add	di,bx
020A:611F  EB DA				jmp	short loc_841		; (60FB)
020A:6121			loc_843:
020A:6121  A8 02				test	al,2
020A:6123  75 06				jnz	loc_844			; Jump if not zero
020A:6125  03 FB				add	di,bx
020A:6127  03 FD				add	di,bp
020A:6129  EB D0				jmp	short loc_841		; (60FB)
020A:612B			loc_844:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 210

020A:612B  A8 01				test	al,1
020A:612D  75 04				jnz	loc_845			; Jump if not zero
020A:612F  03 FA				add	di,dx
020A:6131  EB C8				jmp	short loc_841		; (60FB)
020A:6133			loc_845:
020A:6133  8A 45 06				mov	al,[di+6]
020A:6136  32 E4				xor	ah,ah			; Zero register
020A:6138  03 F8				add	di,ax
020A:613A  B4 03				mov	ah,3
020A:613C  EB BD				jmp	short loc_841		; (60FB)
020A:613E			loc_846:
020A:613E  74 02				jz	loc_848			; Jump if zero
020A:6140			loc_847:
020A:6140  EB 2D				jmp	short loc_851		; (616F)
020A:6142			loc_848:
020A:6142  83 FA 16				cmp	dx,16h
020A:6145  75 25				jne	loc_850			; Jump if not equal
020A:6147  26: 80 3E 4D4B 01			cmp	es:data_484,1		; (020A:4D4B=0E8h)
020A:614D  74 1D				je	loc_850			; Jump if equal
020A:614F  26: 80 3E 53D6 00			cmp	byte ptr es:[53D6h],0	; (020A:53D6=15h)
020A:6155  75 0A				jne	loc_849			; Jump if not equal
020A:6157  89 3E 0006				mov	word ptr ds:[6],di	; (020A:0006=3)
020A:615B  26: C6 06 53D6 01			mov	byte ptr es:[53D6h],1	; (020A:53D6=15h)
020A:6161			loc_849:
020A:6161  8A 45 04				mov	al,[di+4]
020A:6164  24 1F				and	al,1Fh
020A:6166  3C 1F				cmp	al,1Fh
020A:6168  75 02				jne	loc_850			; Jump if not equal
020A:616A  EB 98				jmp	short loc_842		; (6104)
020A:616C			loc_850:
020A:616C  E9 00BF				jmp	loc_866			; (622E)
020A:616F			loc_851:
020A:616F  E9 014A				jmp	loc_874			; (62BC)
020A:6172			loc_852:
020A:6172  39 0D				cmp	[di],cx
020A:6174  73 37				jae	loc_856			; Jump if above or =
020A:6176  8A 45 05				mov	al,[di+5]
020A:6179  22 C4				and	al,ah
020A:617B  3C 01				cmp	al,1
020A:617D  75 13				jne	loc_853			; Jump if not equal
020A:617F  03 FB				add	di,bx
020A:6181  39 0D				cmp	[di],cx
020A:6183  73 28				jae	loc_856			; Jump if above or =
020A:6185  8A 45 05				mov	al,[di+5]
020A:6188  22 C4				and	al,ah
020A:618A  3C 01				cmp	al,1
020A:618C  75 04				jne	loc_853			; Jump if not equal
020A:618E  03 FB				add	di,bx
020A:6190  EB E0				jmp	short loc_852		; (6172)
020A:6192			loc_853:
020A:6192  77 06				ja	loc_854			; Jump if above
020A:6194  03 FB				add	di,bx
020A:6196  2B FD				sub	di,bp
020A:6198  EB D8				jmp	short loc_852		; (6172)
020A:619A			loc_854:
020A:619A  3C 02				cmp	al,2
020A:619C  75 04				jne	loc_855			; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 211

020A:619E  03 FA				add	di,dx
020A:61A0  EB D0				jmp	short loc_852		; (6172)
020A:61A2			loc_855:
020A:61A2  8A 45 06				mov	al,[di+6]
020A:61A5  32 E4				xor	ah,ah			; Zero register
020A:61A7  03 F8				add	di,ax
020A:61A9  B4 03				mov	ah,3
020A:61AB  EB C5				jmp	short loc_852		; (6172)
020A:61AD			loc_856:
020A:61AD  74 0B				jz	loc_857			; Jump if zero
020A:61AF  83 3D FF				cmp	word ptr [di],0FFFFh
020A:61B2  75 4D				jne	loc_863			; Jump if not equal
020A:61B4  3B 3E 0000				cmp	di,word ptr ds:[0]	; (020A:0000=1828h)
020A:61B8  73 47				jae	loc_863			; Jump if above or =
020A:61BA			loc_857:
020A:61BA  39 0D				cmp	[di],cx
020A:61BC  75 43				jne	loc_863			; Jump if not equal
020A:61BE  39 75 02				cmp	[di+2],si
020A:61C1  73 3C				jae	loc_862			; Jump if above or =
020A:61C3			loc_858:
020A:61C3  8A 45 05				mov	al,[di+5]
020A:61C6  22 C4				and	al,ah
020A:61C8  3C 01				cmp	al,1
020A:61CA  75 18				jne	loc_859			; Jump if not equal
020A:61CC  03 FB				add	di,bx
020A:61CE  39 0D				cmp	[di],cx
020A:61D0  75 2F				jne	loc_863			; Jump if not equal
020A:61D2  39 75 02				cmp	[di+2],si
020A:61D5  73 28				jae	loc_862			; Jump if above or =
020A:61D7  8A 45 05				mov	al,[di+5]
020A:61DA  22 C4				and	al,ah
020A:61DC  3C 01				cmp	al,1
020A:61DE  75 04				jne	loc_859			; Jump if not equal
020A:61E0  03 FB				add	di,bx
020A:61E2  EB D6				jmp	short loc_857		; (61BA)
020A:61E4			loc_859:
020A:61E4  77 06				ja	loc_860			; Jump if above
020A:61E6  03 FB				add	di,bx
020A:61E8  2B FD				sub	di,bp
020A:61EA  EB CE				jmp	short loc_857		; (61BA)
020A:61EC			loc_860:
020A:61EC  3C 02				cmp	al,2
020A:61EE  75 04				jne	loc_861			; Jump if not equal
020A:61F0  03 FA				add	di,dx
020A:61F2  EB C6				jmp	short loc_857		; (61BA)
020A:61F4			loc_861:
020A:61F4  8A 45 06				mov	al,[di+6]
020A:61F7  32 E4				xor	ah,ah			; Zero register
020A:61F9  03 F8				add	di,ax
020A:61FB  B4 03				mov	ah,3
020A:61FD  EB BB				jmp	short loc_857		; (61BA)
020A:61FF			loc_862:
020A:61FF  74 03				jz	loc_864			; Jump if zero
020A:6201			loc_863:
020A:6201  E9 00B8				jmp	loc_874			; (62BC)
020A:6204			loc_864:
020A:6204  83 FA 16				cmp	dx,16h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 212

020A:6207  75 25				jne	loc_866			; Jump if not equal
020A:6209  26: 80 3E 4D4B 01			cmp	es:data_484,1		; (020A:4D4B=0E8h)
020A:620F  74 1D				je	loc_866			; Jump if equal
020A:6211  26: 80 3E 53D6 00			cmp	byte ptr es:[53D6h],0	; (020A:53D6=15h)
020A:6217  75 0A				jne	loc_865			; Jump if not equal
020A:6219  89 3E 0006				mov	word ptr ds:[6],di	; (020A:0006=3)
020A:621D  26: C6 06 53D6 01			mov	byte ptr es:[53D6h],1	; (020A:53D6=15h)
020A:6223			loc_865:
020A:6223  8A 45 04				mov	al,[di+4]
020A:6226  24 1F				and	al,1Fh
020A:6228  3C 1F				cmp	al,1Fh
020A:622A  75 02				jne	loc_866			; Jump if not equal
020A:622C  EB 95				jmp	short loc_858		; (61C3)
020A:622E			loc_866:
020A:622E  8B 05				mov	ax,[di]
020A:6230  A3 0002				mov	word ptr ds:[2],ax	; (020A:0002=10h)
020A:6233  8B 45 02				mov	ax,[di+2]
020A:6236  A3 0004				mov	word ptr ds:[4],ax	; (020A:0004=808h)
020A:6239  26: 80 3E 53D6 00			cmp	byte ptr es:[53D6h],0	; (020A:53D6=15h)
020A:623F  75 04				jne	loc_867			; Jump if not equal
020A:6241  89 3E 0006				mov	word ptr ds:[6],di	; (020A:0006=3)
020A:6245			loc_867:
020A:6245  26: A1 40F5				mov	ax,word ptr es:[40F5h]	; (020A:40F5=744Ch)
020A:6249  26: 3B 06 344A			cmp	ax,es:data_348		; (020A:344A=414Ch)
020A:624E  75 69				jne	loc_873			; Jump if not equal
020A:6250  26: A1 40F7				mov	ax,word ptr es:[40F7h]	; (020A:40F7=3C0Bh)
020A:6254  26: 3B 06 344C			cmp	ax,es:data_349		; (020A:344C=5453h)
020A:6259  75 5E				jne	loc_873			; Jump if not equal
020A:625B  BB 40C2				mov	bx,40C2h
020A:625E  8A 45 05				mov	al,[di+5]
020A:6261  25 000F				and	ax,0Fh
020A:6264  26: D7				xlat	es:[bx]			; al=[al+[bx]] table
020A:6266  0A C0				or	al,al			; Zero ?
020A:6268  75 03				jnz	loc_868			; Jump if not zero
020A:626A  8A 45 06				mov	al,[di+6]
020A:626D			loc_868:
020A:626D  8B D8				mov	bx,ax
020A:626F  8B 01				mov	ax,[bx+di]
020A:6271  26: 3B 06 344A			cmp	ax,es:data_348		; (020A:344A=414Ch)
020A:6276  8B 41 02				mov	ax,[bx+di+2]
020A:6279  74 03				jz	loc_869			; Jump if zero
020A:627B  B8 FFFF				mov	ax,0FFFFh
020A:627E			loc_869:
020A:627E  8A 51 05				mov	dl,[bx+di+5]
020A:6281  80 E2 0C				and	dl,0Ch
020A:6284  80 FA 00				cmp	dl,0
020A:6287  74 10				je	loc_870			; Jump if equal
020A:6289  80 FA 04				cmp	dl,4
020A:628C  74 27				je	loc_872			; Jump if equal
020A:628E  80 FA 08				cmp	dl,8
020A:6291  75 26				jne	loc_873			; Jump if not equal
020A:6293  26: A3 4E8B				mov	es:data_548,ax		; (020A:4E8B=35E6h)
020A:6297  EB 20				jmp	short loc_873		; (62B9)
020A:6299			loc_870:
020A:6299  26: A3 4E89				mov	word ptr es:[4E89h],ax	; (020A:4E89=3E80h)
020A:629D  8A 41 04				mov	al,[bx+di+4]
020A:62A0  26: A2 4E8D				mov	es:data_549,al		; (020A:4E8D=0)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 213

020A:62A4  32 C0				xor	al,al			; Zero register
020A:62A6  F6 41 05 0F				test	byte ptr [bx+di+5],0Fh
020A:62AA  74 03				jz	loc_871			; Jump if zero
020A:62AC  8A 41 09				mov	al,[bx+di+9]
020A:62AF			loc_871:
020A:62AF  26: A2 4E8E				mov	es:data_550,al		; (020A:4E8E=74h)
020A:62B3  EB 04				jmp	short loc_873		; (62B9)
020A:62B5			loc_872:
020A:62B5  26: A3 4E87				mov	word ptr es:[4E87h],ax	; (020A:4E87=0E892h)
020A:62B9			loc_873:
020A:62B9  F9					stc				; Set carry flag
020A:62BA  EB 61				jmp	short loc_880		; (631D)
020A:62BC			loc_874:
020A:62BC  26: A1 40F5				mov	ax,word ptr es:[40F5h]	; (020A:40F5=744Ch)
020A:62C0  26: 3B 06 344A			cmp	ax,es:data_348		; (020A:344A=414Ch)
020A:62C5  75 55				jne	loc_879			; Jump if not equal
020A:62C7  26: A1 40F7				mov	ax,word ptr es:[40F7h]	; (020A:40F7=3C0Bh)
020A:62CB  26: 3B 06 344C			cmp	ax,es:data_349		; (020A:344C=5453h)
020A:62D0  75 4A				jne	loc_879			; Jump if not equal
020A:62D2  B8 FFFF				mov	ax,0FFFFh
020A:62D5  8B 1D				mov	bx,[di]
020A:62D7  26: 3B 1E 344A			cmp	bx,es:data_348		; (020A:344A=414Ch)
020A:62DC  75 03				jne	loc_875			; Jump if not equal
020A:62DE  8B 45 02				mov	ax,[di+2]
020A:62E1			loc_875:
020A:62E1  8A 55 05				mov	dl,[di+5]
020A:62E4  80 E2 0C				and	dl,0Ch
020A:62E7  80 FA 00				cmp	dl,0
020A:62EA  74 10				je	loc_876			; Jump if equal
020A:62EC  80 FA 04				cmp	dl,4
020A:62EF  74 27				je	loc_878			; Jump if equal
020A:62F1  80 FA 08				cmp	dl,8
020A:62F4  75 26				jne	loc_879			; Jump if not equal
020A:62F6  26: A3 4E8B				mov	es:data_548,ax		; (020A:4E8B=35E6h)
020A:62FA  EB 20				jmp	short loc_879		; (631C)
020A:62FC			loc_876:
020A:62FC  26: A3 4E89				mov	word ptr es:[4E89h],ax	; (020A:4E89=3E80h)
020A:6300  8A 45 04				mov	al,[di+4]
020A:6303  26: A2 4E8D				mov	es:data_549,al		; (020A:4E8D=0)
020A:6307  32 C0				xor	al,al			; Zero register
020A:6309  F6 45 05 0F				test	byte ptr [di+5],0Fh
020A:630D  74 03				jz	loc_877			; Jump if zero
020A:630F  8A 45 09				mov	al,[di+9]
020A:6312			loc_877:
020A:6312  26: A2 4E8E				mov	es:data_550,al		; (020A:4E8E=74h)
020A:6316  EB 04				jmp	short loc_879		; (631C)
020A:6318			loc_878:
020A:6318  26: A3 4E87				mov	word ptr es:[4E87h],ax	; (020A:4E87=0E892h)
020A:631C			loc_879:
020A:631C  F8					clc				; Clear carry flag
020A:631D			loc_880:
020A:631D  1E					push	ds
020A:631E  8C C0				mov	ax,es
020A:6320  8E D8				mov	ds,ax
020A:6322  07					pop	es
020A:6323  8B CD				mov	cx,bp
020A:6325  5D					pop	bp
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 214

020A:6326  5E					pop	si
020A:6327  5B					pop	bx
020A:6328  58					pop	ax
020A:6329  C3					retn
				sub_63		endp

020A:632A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_64		proc	near

020A:632C			locloop_881:
020A:632C  8A 04				mov	al,[si]
020A:632E  A8 40				test	al,40h			; '@'
020A:6330  74 18				jz	loc_883			; Jump if zero
020A:6332  3C 40				cmp	al,40h			; '@'
020A:6334  74 14				je	loc_883			; Jump if equal
020A:6336  3C 5B				cmp	al,5Bh			; '['
020A:6338  72 08				jb	loc_882			; Jump if below
020A:633A  3C 7B				cmp	al,7Bh			; '{'
020A:633C  73 0C				jae	loc_883			; Jump if above or =
020A:633E  3C 60				cmp	al,60h			; '`'
020A:6340  76 08				jbe	loc_883			; Jump if below or =
020A:6342			loc_882:
020A:6342  24 DF				and	al,0DFh
020A:6344  0A 06 35DF				or	al,data_396		; (020A:35DF=9Ah)
020A:6348  88 04				mov	[si],al
020A:634A			loc_883:
020A:634A  46					inc	si
020A:634B  E2 DF				loop	locloop_881		; Loop if cx > 0

020A:634D  C3					retn
				sub_64		endp

							                        ;* No entry point to code
020A:634E  87 DB				xchg	bx,bx
020A:6350  C6 06 304A 00			mov	data_288,0		; (020A:304A=2Eh)
020A:6355  BA 0002				mov	dx,2
020A:6358  BB 2EA0				mov	bx,2EA0h
020A:635B  E8 C602		;*		call	sub_29			;*(2960)
020A:635B  E8 02 C6				db	0E8h, 02h,0C6h
020A:635E  C3					retn
							                        ;* No entry point to code
020A:635F  90					nop
020A:6360  BF 0008				mov	di,8
020A:6363  BE 0000				mov	si,0
020A:6366  E8 0E13				call	sub_73			; (717C)
020A:6369			loc_884:
020A:6369  8B 04				mov	ax,[si]
020A:636B  8B 5C 02				mov	bx,[si+2]
020A:636E  8B 4C 04				mov	cx,[si+4]
020A:6371  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:6376  73 64				jae	loc_886			; Jump if above or =
020A:6378  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 215

020A:637D  74 60				jz	loc_887			; Jump if zero
020A:637F  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:6384  75 59				jnz	loc_887			; Jump if not zero
020A:6386  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:638B  75 4D				jnz	loc_885			; Jump if not zero
020A:638D  26: 3B 05				cmp	ax,es:[di]
020A:6390  72 4F				jb	loc_888			; Jump if below
020A:6392  77 46				ja	loc_885			; Jump if above
020A:6394  26: 3B 5D 02				cmp	bx,es:[di+2]
020A:6398  77 40				ja	loc_885			; Jump if above
020A:639A  26: 3B 4D 02				cmp	cx,es:[di+2]
020A:639E  72 41				jb	loc_888			; Jump if below
020A:63A0  1E					push	ds
020A:63A1  E8 0DE1				call	sub_74			; (7185)
020A:63A4  F7 06 4E22 0200			test	data_502,200h		; (020A:4E22=348Ah)
020A:63AA  1F					pop	ds
020A:63AB  74 3F				jz	loc_889			; Jump if zero
020A:63AD  8B 54 0A				mov	dx,[si+0Ah]
020A:63B0  80 E2 03				and	dl,3
020A:63B3  80 FA 01				cmp	dl,1
020A:63B6  77 34				ja	loc_889			; Jump if above
020A:63B8  26: 8A 55 04				mov	dl,es:[di+4]
020A:63BC  F6 C2 80				test	dl,80h
020A:63BF  74 2B				jz	loc_889			; Jump if zero
020A:63C1  F6 C2 10				test	dl,10h
020A:63C4  75 26				jnz	loc_889			; Jump if not zero
020A:63C6  9A 1510:55E4		;*		call	far ptr sub_166		;*(1510:55E4)
020A:63C6  9A					db	9Ah
020A:63C7  55E4 1510				dw	55E4h, 1510h
020A:63CB  72 1F				jc	loc_889			; Jump if carry Set
020A:63CD  26: 81 7D 02 0100			cmp	word ptr es:[di+2],100h
020A:63D3  73 17				jae	loc_889			; Jump if above or =
020A:63D5  26: 80 65 04 BF			and	byte ptr es:[di+4],0BFh
020A:63DA			loc_885:
020A:63DA  EB 3C				jmp	short loc_891		; (6418)
020A:63DC			loc_886:
020A:63DC  E9 016A				jmp	loc_904			; (6549)
020A:63DF			loc_887:
020A:63DF  EB 0B				jmp	short loc_889		; (63EC)
020A:63E1			loc_888:
020A:63E1  83 C6 15				add	si,15h
020A:63E4  83 3C FF				cmp	word ptr [si],0FFFFh
020A:63E7  74 2F				je	loc_891			; Jump if equal
020A:63E9  E9 FF7D				jmp	loc_884			; (6369)
020A:63EC			loc_889:
020A:63EC  E8 0D8D				call	sub_73			; (717C)
020A:63EF  BB 40C2				mov	bx,40C2h
020A:63F2  26: 8A 45 05				mov	al,es:[di+5]
020A:63F6  25 000F				and	ax,0Fh
020A:63F9  1E					push	ds
020A:63FA  E8 0D88				call	sub_74			; (7185)
020A:63FD  D7					xlat				; al=[al+[bx]] table
020A:63FE  1F					pop	ds
020A:63FF  0A C0				or	al,al			; Zero ?
020A:6401  75 04				jnz	loc_890			; Jump if not zero
020A:6403  26: 8A 45 06				mov	al,es:[di+6]
020A:6407			loc_890:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 216

020A:6407  03 F8				add	di,ax
020A:6409  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:640E  73 CC				jae	loc_886			; Jump if above or =
020A:6410  83 3C FF				cmp	word ptr [si],0FFFFh
020A:6413  74 03				je	loc_891			; Jump if equal
020A:6415  E9 FF51				jmp	loc_884			; (6369)
020A:6418			loc_891:
020A:6418  E8 0D6A				call	sub_74			; (7185)
020A:641B  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:6420  74 CA				jz	loc_889			; Jump if zero
020A:6422  26: 80 4D 07 40			or	byte ptr es:[di+7],40h	; '@'
020A:6427  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:642C  26: 80 4D 05 40			or	byte ptr es:[di+5],40h	; '@'
020A:6431  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:6436  75 B4				jnz	loc_889			; Jump if not zero
020A:6438  E8 0401				call	sub_67			; (683C)
020A:643B  BD 2D20				mov	bp,2D20h
020A:643E  80 3E 35E3 01			cmp	byte ptr ds:[35E3h],1	; (020A:35E3=15h)
020A:6443  75 09				jne	loc_892			; Jump if not equal
020A:6445  4D					dec	bp
020A:6446  80 3E 35E4 00			cmp	data_399,0		; (020A:35E4=8Ch)
020A:644B  74 08				je	loc_893			; Jump if equal
020A:644D  4D					dec	bp
020A:644E			loc_892:
020A:644E  3E: C6 46 00 3D			mov	byte ptr ds:[bp],3Dh	; '='
020A:6453  45					inc	bp
020A:6454  45					inc	bp
020A:6455			loc_893:
020A:6455  26: 8B 45 02				mov	ax,es:[di+2]
020A:6459  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:6459  9A					db	9Ah
020A:645A  021C 1510				dw	21Ch, 1510h
020A:645E  BD 2D3B				mov	bp,2D3Bh
020A:6461  B9 000A				mov	cx,0Ah
020A:6464  9A 1510:2D70		;*		call	far ptr sub_145		;*(1510:2D70)
020A:6464  9A					db	9Ah
020A:6465  2D70 1510				dw	2D70h, 1510h
020A:6469  B1 00				mov	cl,0
020A:646B  C6 06 2D5B 65			mov	data_264,65h		; (020A:2D5B=43h) 'e'
020A:6470  C7 06 2D5C 7571			mov	data_265,7571h		; (020A:2D5C=5345h)
020A:6476  80 3E 35DF 00			cmp	data_396,0		; (020A:35DF=9Ah)
020A:647B  75 0B				jne	loc_894			; Jump if not equal
020A:647D  C6 06 2D5B 45			mov	data_264,45h		; (020A:2D5B=43h) 'E'
020A:6482  C7 06 2D5C 5551			mov	data_265,5551h		; (020A:2D5C=5345h)
020A:6488			loc_894:
020A:6488  BD 2D63				mov	bp,2D63h
020A:648B  26: 8B 45 02				mov	ax,es:[di+2]
020A:648F  9A 1510:023C		;*		call	far ptr sub_118		;*(1510:023C)
020A:648F  9A					db	9Ah
020A:6490  023C 1510				dw	23Ch, 1510h
020A:6494  B7 00				mov	bh,0
020A:6496  26: 8A 45 04				mov	al,es:[di+4]
020A:649A  24 3F				and	al,3Fh			; '?'
020A:649C  3C 02				cmp	al,2
020A:649E  74 0B				je	loc_895			; Jump if equal
020A:64A0  3C 00				cmp	al,0
020A:64A2  75 09				jne	loc_896			; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 217

020A:64A4  26: 83 7D 08 02			cmp	word ptr es:[di+8],2
020A:64A9  75 02				jne	loc_896			; Jump if not equal
020A:64AB			loc_895:
020A:64AB  B7 20				mov	bh,20h			; ' '
020A:64AD			loc_896:
020A:64AD  E8 009C				call	sub_65			; (654C)
020A:64B0  F7 06 4E24 0020			test	data_503,20h		; (020A:4E24=885Eh)
020A:64B6  75 42				jnz	loc_901			; Jump if not zero
020A:64B8  26: 8B 05				mov	ax,es:[di]
020A:64BB  26: 8B 5D 02				mov	bx,es:[di+2]
020A:64BF  3D A000				cmp	ax,0A000h
020A:64C2  73 36				jae	loc_901			; Jump if above or =
020A:64C4  0B C0				or	ax,ax			; Zero ?
020A:64C6  75 08				jnz	loc_897			; Jump if not zero
020A:64C8  81 FB 0500				cmp	bx,500h
020A:64CC  76 2C				jbe	loc_901			; Jump if below or =
020A:64CE  EB 24				jmp	short loc_900		; (64F4)
020A:64D0			loc_897:
020A:64D0  3D 0040				cmp	ax,40h
020A:64D3  75 08				jne	loc_898			; Jump if not equal
020A:64D5  81 FB 0100				cmp	bx,100h
020A:64D9  76 1F				jbe	loc_901			; Jump if below or =
020A:64DB  EB 17				jmp	short loc_900		; (64F4)
020A:64DD			loc_898:
020A:64DD  3D 0050				cmp	ax,50h
020A:64E0  75 06				jne	loc_899			; Jump if not equal
020A:64E2  0B DB				or	bx,bx			; Zero ?
020A:64E4  74 14				jz	loc_901			; Jump if zero
020A:64E6  EB 0C				jmp	short loc_900		; (64F4)
020A:64E8			loc_899:
020A:64E8  81 FB 00FF				cmp	bx,0FFh
020A:64EC  77 06				ja	loc_900			; Jump if above
020A:64EE  3B 06 3039				cmp	ax,data_280		; (020A:3039=4200h)
020A:64F2  74 06				je	loc_901			; Jump if equal
020A:64F4			loc_900:
020A:64F4  C7 06 2DAB 2A3B			mov	data_266,2A3Bh		; (020A:2DAB=6257h)
020A:64FA			loc_901:
020A:64FA  80 3E 586D 01			cmp	byte ptr ds:[586Dh],1	; (020A:586D=3Eh)
020A:64FF  74 0C				je	loc_902			; Jump if equal
020A:6501  C6 06 586D 01			mov	byte ptr ds:[586Dh],1	; (020A:586D=3Eh)
020A:6506  B0 58				mov	al,58h			; 'X'
020A:6508  9A 1510:2280		;*		call	far ptr sub_133		;*(1510:2280)
020A:6508  9A					db	9Ah
020A:6509  2280 1510				dw	2280h, 1510h
020A:650D			loc_902:
020A:650D  BA 2D1B				mov	dx,2D1Bh
020A:6510  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:6515  06					push	es
020A:6516  9A 1510:233C		;*		call	far ptr sub_134		;*(1510:233C)
020A:6516  9A					db	9Ah
020A:6517  233C 1510				dw	233Ch, 1510h
020A:651B  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6520  9C					pushf				; Push flags
020A:6521  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:6526  5A					pop	dx
020A:6527  8E C2				mov	es,dx
020A:6529  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 218

020A:652E  5A					pop	dx
020A:652F  75 0A				jnz	loc_903			; Jump if not zero
020A:6531  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:6536  74 03				je	loc_903			; Jump if equal
020A:6538  E8 0FC1				call	sub_85			; (74FC)
020A:653B			loc_903:
020A:653B  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:6540  9D					popf				; Pop flags
020A:6541  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6546  E9 FEA3				jmp	loc_889			; (63EC)
020A:6549			loc_904:
020A:6549  C3					retn
020A:654A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_65		proc	near
020A:654C  51					push	cx
020A:654D  52					push	dx
020A:654E  06					push	es
020A:654F  55					push	bp
020A:6550  80 3E 35E6 00			cmp	data_400,0		; (020A:35E6=9Ah)
020A:6555  75 0A				jne	loc_905			; Jump if not equal
020A:6557  26: 8A 45 04				mov	al,es:[di+4]
020A:655B  24 3F				and	al,3Fh			; '?'
020A:655D  3C 20				cmp	al,20h			; ' '
020A:655F  75 15				jne	loc_906			; Jump if not equal
020A:6561			loc_905:
020A:6561  F6 06 16AB 01			test	data_164,1		; (020A:16AB=41h)
020A:6566  74 0E				jz	loc_906			; Jump if zero
020A:6568  80 3E 16AC 01			cmp	byte ptr data_165,1	; (020A:16AC='AAAAAAAAAAAAAA')
020A:656D  74 07				je	loc_906			; Jump if equal
020A:656F  80 3E 4D49 01			cmp	data_482,1		; (020A:4D49=0B1h)
020A:6574  75 03				jne	loc_907			; Jump if not equal
020A:6576			loc_906:
020A:6576  E9 01D5				jmp	loc_939			; (674E)
020A:6579			loc_907:
020A:6579  E8 01DC				call	sub_66			; (6758)
020A:657C  32 C9				xor	cl,cl			; Zero register
020A:657E  B0 28				mov	al,28h			; '('
020A:6580  80 3E 304A 00			cmp	data_288,0		; (020A:304A=2Eh)
020A:6585  74 02				je	loc_908			; Jump if equal
020A:6587  B0 5B				mov	al,5Bh			; '['
020A:6589			loc_908:
020A:6589  3E: 88 46 00				mov	ds:[bp],al
020A:658D  45					inc	bp
020A:658E  80 3E 35E6 00			cmp	data_400,0		; (020A:35E6=9Ah)
020A:6593  75 03				jne	loc_909			; Jump if not equal
020A:6595  E9 0108				jmp	loc_926			; (66A0)
020A:6598			loc_909:
020A:6598  53					push	bx
020A:6599  8C C8				mov	ax,cs
020A:659B  26: 3B 05				cmp	ax,es:[di]
020A:659E  75 0A				jne	loc_910			; Jump if not equal
020A:65A0  3E: C7 46 00 7373			mov	word ptr ds:[bp],7373h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 219

020A:65A6  45					inc	bp
020A:65A7  45					inc	bp
020A:65A8  EB 59				jmp	short loc_916		; (6603)
020A:65AA			loc_910:
020A:65AA  26: 8B 05				mov	ax,es:[di]
020A:65AD  25 FFF0				and	ax,0FFF0h
020A:65B0  3D FBA0				cmp	ax,0FBA0h
020A:65B3  75 22				jne	loc_913			; Jump if not equal
020A:65B5  FE C1				inc	cl
020A:65B7  3E: C7 46 00 3F3F			mov	word ptr ds:[bp],3F3Fh
020A:65BD  45					inc	bp
020A:65BE  45					inc	bp
020A:65BF  26: 8B 05				mov	ax,es:[di]
020A:65C2  24 0F				and	al,0Fh
020A:65C4  3C 0F				cmp	al,0Fh
020A:65C6  74 0D				je	loc_912			; Jump if equal
020A:65C8  04 30				add	al,30h			; '0'
020A:65CA  3C 39				cmp	al,39h			; '9'
020A:65CC  76 02				jbe	loc_911			; Jump if below or =
020A:65CE  04 07				add	al,7
020A:65D0			loc_911:
020A:65D0  3E: 88 46 00				mov	ds:[bp],al
020A:65D4  45					inc	bp
020A:65D5			loc_912:
020A:65D5  EB 2C				jmp	short loc_916		; (6603)
020A:65D7			loc_913:
020A:65D7  9A 1510:55E4		;*		call	far ptr sub_166		;*(1510:55E4)
020A:65D7  9A					db	9Ah
020A:65D8  55E4 1510				dw	55E4h, 1510h
020A:65DC  72 10				jc	loc_914			; Jump if carry Set
020A:65DE  80 3E 15D0 02			cmp	data_159,2		; (020A:15D0=0)
020A:65E3  72 09				jb	loc_914			; Jump if below
020A:65E5  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:65EA  74 02				jz	loc_914			; Jump if zero
020A:65EC  EB 42				jmp	short loc_919		; (6630)
020A:65EE			loc_914:
020A:65EE  26: 8B 05				mov	ax,es:[di]
020A:65F1  83 3E 3450 FF			cmp	data_351,0FFFFh		; (020A:3450=413Dh)
020A:65F6  74 04				je	loc_915			; Jump if equal
020A:65F8  2B 06 3450				sub	ax,data_351		; (020A:3450=413Dh)
020A:65FC			loc_915:
020A:65FC  9A 1510:0118		;*		call	far ptr sub_115		;*(1510:0118)
020A:65FC  9A					db	9Ah
020A:65FD  0118 1510				dw	118h, 1510h
020A:6601  EB 06				jmp	short loc_917		; (6609)
020A:6603			loc_916:
020A:6603  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:6608  45					inc	bp
020A:6609			loc_917:
020A:6609  83 3E 3450 FF			cmp	data_351,0FFFFh		; (020A:3450=413Dh)
020A:660E  74 17				je	loc_918			; Jump if equal
020A:6610  A1 3450				mov	ax,data_351		; (020A:3450=413Dh)
020A:6613  0B C0				or	ax,ax			; Zero ?
020A:6615  74 10				jz	loc_918			; Jump if zero
020A:6617  51					push	cx
020A:6618  B1 0C				mov	cl,0Ch
020A:661A  D3 E8				shr	ax,cl			; Shift w/zeros fill
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 220

020A:661C  59					pop	cx
020A:661D  9A 1510:00B0		;*		call	far ptr sub_112		;*(1510:00B0)
020A:661D  9A					db	9Ah
020A:661E  00B0 1510				dw	0B0h, 1510h
020A:6622  3E: 88 7E 00				mov	ds:[bp],bh
020A:6626  45					inc	bp
020A:6627			loc_918:
020A:6627  26: 8B 45 02				mov	ax,es:[di+2]
020A:662B  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:662B  9A					db	9Ah
020A:662C  021C 1510				dw	21Ch, 1510h
020A:6630			loc_919:
020A:6630  5B					pop	bx
020A:6631  0A C9				or	cl,cl			; Zero ?
020A:6633  75 0C				jnz	loc_920			; Jump if not zero
020A:6635  F6 C7 30				test	bh,30h			; '0'
020A:6638  74 0A				jz	loc_921			; Jump if zero
020A:663A  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:663F  75 03				jne	loc_921			; Jump if not equal
020A:6641			loc_920:
020A:6641  E9 00FA				jmp	loc_937			; (673E)
020A:6644			loc_921:
020A:6644  3E: C6 46 00 3D			mov	byte ptr ds:[bp],3Dh	; '='
020A:6649  45					inc	bp
020A:664A  F6 C7 30				test	bh,30h			; '0'
020A:664D  74 3B				jz	loc_924			; Jump if zero
020A:664F  F6 C7 20				test	bh,20h			; ' '
020A:6652  74 24				jz	loc_923			; Jump if zero
020A:6654  F6 06 35EE 02			test	data_405,2		; (020A:35EE=2Bh)
020A:6659  74 1D				jz	loc_923			; Jump if zero
020A:665B  26: 83 7D 02 FC			cmp	word ptr es:[di+2],0FFFCh
020A:6660  77 13				ja	loc_922			; Jump if above
020A:6662  26: 8B 5D 02				mov	bx,es:[di+2]
020A:6666  26: 8E 05				mov	es,es:[di]
020A:6669  26: 8B 47 02				mov	ax,es:[bx+2]
020A:666D  26: 8B 1F				mov	bx,es:[bx]
020A:6670  9A 1510:039C		;*		call	far ptr sub_120		;*(1510:039C)
020A:6670  9A					db	9Ah
020A:6671  039C 1510				dw	39Ch, 1510h
020A:6675			loc_922:
020A:6675  E9 00C6				jmp	loc_937			; (673E)
020A:6678			loc_923:
020A:6678  26: 8B 5D 02				mov	bx,es:[di+2]
020A:667C  26: 8E 05				mov	es,es:[di]
020A:667F  26: 8B 07				mov	ax,es:[bx]
020A:6682  9A 1510:023C		;*		call	far ptr sub_118		;*(1510:023C)
020A:6682  9A					db	9Ah
020A:6683  023C 1510				dw	23Ch, 1510h
020A:6687  E9 00B4				jmp	loc_937			; (673E)
020A:668A			loc_924:
020A:668A  26: 8B 5D 02				mov	bx,es:[di+2]
020A:668E  26: 8A 45 04				mov	al,es:[di+4]
020A:6692  24 3F				and	al,3Fh			; '?'
020A:6694  3C 20				cmp	al,20h			; ' '
020A:6696  74 03				je	loc_925			; Jump if equal
020A:6698  E9 0098				jmp	loc_936			; (6733)
020A:669B			loc_925:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 221

020A:669B  BA 0010				mov	dx,10h
020A:669E  EB 07				jmp	short loc_927		; (66A7)
020A:66A0			loc_926:
020A:66A0  26: 8B 5D 02				mov	bx,es:[di+2]
020A:66A4  BA 0018				mov	dx,18h
020A:66A7			loc_927:
020A:66A7  26: 8B 4D 08				mov	cx,es:[di+8]
020A:66AB  3B CA				cmp	cx,dx
020A:66AD  72 02				jb	loc_928			; Jump if below
020A:66AF  8B CA				mov	cx,dx
020A:66B1			loc_928:
020A:66B1  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:66B6  45					inc	bp
020A:66B7  26: 8E 05				mov	es,es:[di]
020A:66BA  57					push	di
020A:66BB  8B FB				mov	di,bx
020A:66BD  BB 5413				mov	bx,5413h

020A:66C0			locloop_929:
020A:66C0  83 F9 01				cmp	cx,1
020A:66C3  76 31				jbe	loc_930			; Jump if below or =
020A:66C5  80 3E 53D9 00			cmp	data_564,0		; (020A:53D9=26h)
020A:66CA  74 2A				je	loc_930			; Jump if equal
020A:66CC  F7 06 4E22 0002			test	data_502,2		; (020A:4E22=348Ah)
020A:66D2  74 22				jz	loc_930			; Jump if zero
020A:66D4  26: 8B 05				mov	ax,es:[di]
020A:66D7  3C 00				cmp	al,0
020A:66D9  74 4F				je	loc_935			; Jump if equal
020A:66DB  50					push	ax
020A:66DC  86 E0				xchg	ah,al
020A:66DE  9A 1510:38EC		;*		call	far ptr sub_150		;*(1510:38EC)
020A:66DE  9A					db	9Ah
020A:66DF  38EC 1510				dw	38ECh, 1510h
020A:66E3  3D 0001				cmp	ax,1
020A:66E6  58					pop	ax
020A:66E7  72 41				jc	loc_935			; Jump if carry Set
020A:66E9  74 0E				jz	loc_931			; Jump if zero
020A:66EB  3E: 88 46 00				mov	ds:[bp],al
020A:66EF  45					inc	bp
020A:66F0  47					inc	di
020A:66F1  49					dec	cx
020A:66F2  8A C4				mov	al,ah
020A:66F4  EB 27				jmp	short loc_933		; (671D)
020A:66F6			loc_930:
020A:66F6  26: 8A 05				mov	al,es:[di]
020A:66F9			loc_931:
020A:66F9  0A C0				or	al,al			; Zero ?
020A:66FB  74 2D				jz	loc_935			; Jump if zero
020A:66FD  3C 0D				cmp	al,0Dh
020A:66FF  74 29				je	loc_935			; Jump if equal
020A:6701  3C 0A				cmp	al,0Ah
020A:6703  74 25				je	loc_935			; Jump if equal
020A:6705  80 3E 53D9 01			cmp	data_564,1		; (020A:53D9=26h)
020A:670A  74 04				je	loc_932			; Jump if equal
020A:670C  3C 7E				cmp	al,7Eh			; '~'
020A:670E  73 11				jae	loc_934			; Jump if above or =
020A:6710			loc_932:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 222

020A:6710  3C 20				cmp	al,20h			; ' '
020A:6712  72 0D				jb	loc_934			; Jump if below
020A:6714  83 F9 01				cmp	cx,1
020A:6717  77 04				ja	loc_933			; Jump if above
020A:6719  3C 24				cmp	al,24h			; '$'
020A:671B  74 0D				je	loc_935			; Jump if equal
020A:671D			loc_933:
020A:671D  3E: 88 46 00				mov	ds:[bp],al
020A:6721			loc_934:
020A:6721  83 FF FE				cmp	di,0FFFEh
020A:6724  73 04				jae	loc_935			; Jump if above or =
020A:6726  47					inc	di
020A:6727  45					inc	bp
020A:6728  E2 96				loop	locloop_929		; Loop if cx > 0

020A:672A			loc_935:
020A:672A  5F					pop	di
020A:672B  3E: C6 46 00 27			mov	byte ptr ds:[bp],27h	; '''
020A:6730  45					inc	bp
020A:6731  EB 0B				jmp	short loc_937		; (673E)
020A:6733			loc_936:
020A:6733  26: 8E 05				mov	es,es:[di]
020A:6736  26: 8A 07				mov	al,es:[bx]
020A:6739  9A 1510:00E4		;*		call	far ptr sub_114		;*(1510:00E4)
020A:6739  9A					db	9Ah
020A:673A  00E4 1510				dw	0E4h, 1510h
020A:673E			loc_937:
020A:673E  B0 29				mov	al,29h			; ')'
020A:6740  80 3E 304A 00			cmp	data_288,0		; (020A:304A=2Eh)
020A:6745  74 02				je	loc_938			; Jump if equal
020A:6747  B0 5D				mov	al,5Dh			; ']'
020A:6749			loc_938:
020A:6749  3E: 88 46 00				mov	ds:[bp],al
020A:674D  45					inc	bp
020A:674E			loc_939:
020A:674E  5D					pop	bp
020A:674F  07					pop	es
020A:6750  5A					pop	dx
020A:6751  59					pop	cx
020A:6752  C6 06 304A 00			mov	data_288,0		; (020A:304A=2Eh)
020A:6757  C3					retn
				sub_65		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_66		proc	near
020A:6758  50					push	ax
020A:6759  51					push	cx
020A:675A  57					push	di
020A:675B  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:6760  06					push	es
020A:6761  E8 0A39				call	sub_78			; (719D)
020A:6764  32 E4				xor	ah,ah			; Zero register
020A:6766  BF 2DCF				mov	di,2DCFh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 223

020A:6769  B9 0026				mov	cx,26h
020A:676C  B0 3B				mov	al,3Bh			; ';'
020A:676E  FD					std				; Set direction flag
020A:676F  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:6771  0B C9				or	cx,cx			; Zero ?
020A:6773  75 02				jnz	loc_940			; Jump if not zero
020A:6775  FE C4				inc	ah
020A:6777			loc_940:
020A:6777  BF 2DCF				mov	di,2DCFh
020A:677A  B9 0026				mov	cx,26h
020A:677D  B0 20				mov	al,20h			; ' '
020A:677F  FD					std				; Set direction flag
020A:6780  F3/ AE				repe	scasb			; Rep zf=1+cx >0 Scan es:[di] for al
020A:6782  47					inc	di
020A:6783  47					inc	di
020A:6784  0A E4				or	ah,ah			; Zero ?
020A:6786  74 04				jz	loc_941			; Jump if zero
020A:6788  C6 05 3B				mov	byte ptr [di],3Bh	; ';'
020A:678B  47					inc	di
020A:678C			loc_941:
020A:678C  47					inc	di
020A:678D  FC					cld				; Clear direction
020A:678E  8B EF				mov	bp,di
020A:6790  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:6795  9C					pushf				; Push flags
020A:6796  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:679B  5A					pop	dx
020A:679C  8E C2				mov	es,dx
020A:679E  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:67A3  5A					pop	dx
020A:67A4  75 0A				jnz	loc_942			; Jump if not zero
020A:67A6  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:67AB  74 03				je	loc_942			; Jump if equal
020A:67AD  E8 0D4C				call	sub_85			; (74FC)
020A:67B0			loc_942:
020A:67B0  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:67B5  9D					popf				; Pop flags
020A:67B6  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:67BB  5F					pop	di
020A:67BC  59					pop	cx
020A:67BD  58					pop	ax
020A:67BE  C3					retn
				sub_66		endp

							                        ;* No entry point to code
020A:67BF  90					nop
020A:67C0  80 3E 2B3B 06			cmp	data_231,6		; (020A:2B3B=0A0h)
020A:67C5  73 02				jae	loc_943			; Jump if above or =
020A:67C7  EB 19				jmp	short loc_945		; (67E2)
020A:67C9			loc_943:
020A:67C9  80 3E 2B36 04			cmp	data_227,4		; (020A:2B36=0ADh)
020A:67CE  76 12				jbe	loc_945			; Jump if below or =
020A:67D0  F6 06 2B36 01			test	data_227,1		; (020A:2B36=0ADh)
020A:67D5  75 02				jnz	loc_944			; Jump if not zero
020A:67D7  EB 09				jmp	short loc_945		; (67E2)
020A:67D9			loc_944:
020A:67D9  BA 0007				mov	dx,7
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 224

020A:67DC  BB 3324				mov	bx,3324h
020A:67DF  E8 C17E		;*		call	sub_29			;*(2960)
020A:67DF  E8 7E C1				db	0E8h, 7Eh,0C1h
020A:67E2			loc_945:
020A:67E2  C3					retn
							                        ;* No entry point to code
020A:67E3  90					nop
020A:67E4  50					push	ax
020A:67E5  53					push	bx
020A:67E6  51					push	cx
020A:67E7  52					push	dx
020A:67E8  56					push	si
020A:67E9  57					push	di
020A:67EA  55					push	bp
020A:67EB  BF 0008				mov	di,8
020A:67EE			loc_946:
020A:67EE  26: 39 3E 0000			cmp	word ptr es:[0],di	; (020A:0000=1828h)
020A:67F3  76 3E				jbe	loc_950			; Jump if below or =
020A:67F5  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:67FA  75 20				jnz	loc_948			; Jump if not zero
020A:67FC  26: 8A 65 05				mov	ah,es:[di+5]
020A:6800  80 E4 0C				and	ah,0Ch
020A:6803  80 FC 04				cmp	ah,4
020A:6806  75 07				jne	loc_947			; Jump if not equal
020A:6808  26: F6 45 04 20			test	byte ptr es:[di+4],20h	; ' '
020A:680D  75 0D				jnz	loc_948			; Jump if not zero
020A:680F			loc_947:
020A:680F  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:6813  74 07				je	loc_948			; Jump if equal
020A:6815  8B F7				mov	si,di
020A:6817  E8 1FAE				call	sub_93			; (87C8)
020A:681A  EB D2				jmp	short loc_946		; (67EE)
020A:681C			loc_948:
020A:681C  BB 40C2				mov	bx,40C2h
020A:681F  26: 8A 45 05				mov	al,es:[di+5]
020A:6823  25 000F				and	ax,0Fh
020A:6826  D7					xlat				; al=[al+[bx]] table
020A:6827  0A C0				or	al,al			; Zero ?
020A:6829  75 04				jnz	loc_949			; Jump if not zero
020A:682B  26: 8A 45 06				mov	al,es:[di+6]
020A:682F			loc_949:
020A:682F  03 F8				add	di,ax
020A:6831  EB BB				jmp	short loc_946		; (67EE)
020A:6833			loc_950:
020A:6833  5D					pop	bp
020A:6834  5F					pop	di
020A:6835  5E					pop	si
020A:6836  5A					pop	dx
020A:6837  59					pop	cx
020A:6838  5B					pop	bx
020A:6839  58					pop	ax
020A:683A  C3					retn
020A:683B  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 225


				sub_67		proc	near
020A:683C  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:6841  06					push	es
020A:6842  57					push	di
020A:6843  B0 20				mov	al,20h			; ' '
020A:6845  E8 0955				call	sub_78			; (719D)
020A:6848  BF 2D1B				mov	di,2D1Bh
020A:684B  B9 2DD1				mov	cx,2DD1h
020A:684E  81 E9 2D1B				sub	cx,2D1Bh
020A:6852  FC					cld				; Clear direction
020A:6853  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:6855  5F					pop	di
020A:6856  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:685B  9C					pushf				; Push flags
020A:685C  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:6861  5A					pop	dx
020A:6862  8E C2				mov	es,dx
020A:6864  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:6869  5A					pop	dx
020A:686A  75 0A				jnz	loc_951			; Jump if not zero
020A:686C  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:6871  74 03				je	loc_951			; Jump if equal
020A:6873  E8 0C86				call	sub_85			; (74FC)
020A:6876			loc_951:
020A:6876  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:687B  9D					popf				; Pop flags
020A:687C  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:6881  C3					retn
				sub_67		endp

020A:6882  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_68		proc	near
020A:6884  50					push	ax
020A:6885  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:688A  06					push	es
020A:688B  E8 0906				call	sub_76			; (7194)
020A:688E  C6 06 327D 01			mov	byte ptr ds:[327Dh],1	; (ss:327D=15h)
020A:6893  26: A1 0000				mov	ax,word ptr es:[0]	; (19F9:0000=545h)
020A:6897  3D 0000				cmp	ax,0
020A:689A  75 08				jne	loc_952			; Jump if not equal
020A:689C  26: 83 3E 0004 00			cmp	word ptr es:[4],0	; (19F9:0004=2632h)
020A:68A2  74 18				je	loc_953			; Jump if equal
020A:68A4			loc_952:
020A:68A4  26: 83 3E 0002 FF			cmp	word ptr es:[2],0FFFFh	; (19F9:0002=740Fh)
020A:68AA  74 10				je	loc_953			; Jump if equal
020A:68AC  26: A1 0002				mov	ax,word ptr es:[2]	; (19F9:0002=740Fh)
020A:68B0  26: 3B 06 0004			cmp	ax,word ptr es:[4]	; (19F9:0004=2632h)
020A:68B5  73 05				jae	loc_953			; Jump if above or =
020A:68B7  C6 06 327D 00			mov	byte ptr ds:[327Dh],0	; (ss:327D=15h)
020A:68BC			loc_953:
020A:68BC  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 226

020A:68C1  9C					pushf				; Push flags
020A:68C2  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:68C7  5A					pop	dx
020A:68C8  8E C2				mov	es,dx
020A:68CA  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:68CF  5A					pop	dx
020A:68D0  75 0A				jnz	loc_954			; Jump if not zero
020A:68D2  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:68D7  74 03				je	loc_954			; Jump if equal
020A:68D9  E8 0C20				call	sub_85			; (74FC)
020A:68DC			loc_954:
020A:68DC  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:68E1  9D					popf				; Pop flags
020A:68E2  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:68E7  58					pop	ax
020A:68E8  C3					retn
				sub_68		endp

							                        ;* No entry point to code
020A:68E9  87 DB				xchg	bx,bx
020A:68EB  90					nop
020A:68EC  E8 08BA				call	sub_81			; (71A9)
020A:68EF  BF 12D0				mov	di,12D0h
020A:68F2  BE 2CCA				mov	si,2CCAh
020A:68F5  8B 04				mov	ax,[si]
020A:68F7  0B C0				or	ax,ax			; Zero ?
020A:68F9  75 13				jnz	loc_955			; Jump if not zero
020A:68FB  80 3E 345C 01			cmp	byte ptr ds:[345Ch],1	; (020A:345C=0A1h)
020A:6900  74 0C				je	loc_955			; Jump if equal
020A:6902  83 3E 344C FC			cmp	data_349,0FFFCh		; (020A:344C=5453h)
020A:6907  73 05				jae	loc_955			; Jump if above or =
020A:6909  39 44 02				cmp	[si+2],ax
020A:690C  74 26				je	loc_957			; Jump if equal
020A:690E			loc_955:
020A:690E  24 F8				and	al,0F8h
020A:6910  D0 E8				shr	al,1			; Shift w/zeros fill
020A:6912  D0 E8				shr	al,1			; Shift w/zeros fill
020A:6914  32 E4				xor	ah,ah			; Zero register
020A:6916  03 F8				add	di,ax
020A:6918  26: 8B 3D				mov	di,es:[di]
020A:691B  8B 04				mov	ax,[si]
020A:691D			loc_956:
020A:691D  26: 3A 05				cmp	al,es:[di]
020A:6920  74 15				je	loc_958			; Jump if equal
020A:6922  72 10				jc	loc_957			; Jump if carry Set
020A:6924  50					push	ax
020A:6925  B8 1324				mov	ax,1324h
020A:6928  2D 1310				sub	ax,1310h
020A:692B  03 F8				add	di,ax
020A:692D  58					pop	ax
020A:692E  26: 83 3D 00				cmp	word ptr es:[di],0
020A:6932  75 E9				jne	loc_956			; Jump if not equal
020A:6934			loc_957:
020A:6934  F8					clc				; Clear carry flag
020A:6935  EB 01				jmp	short loc_959		; (6938)
020A:6937			loc_958:
020A:6937  F9					stc				; Set carry flag
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 227

020A:6938			loc_959:
020A:6938  C3					retn
							                        ;* No entry point to code
020A:6939  87 DB				xchg	bx,bx
020A:693B  90					nop
020A:693C  50					push	ax
020A:693D  51					push	cx
020A:693E  56					push	si
020A:693F  B9 1324				mov	cx,1324h
020A:6942  81 E9 1310				sub	cx,1310h
020A:6946  BE 2CF2				mov	si,2CF2h

020A:6949			locloop_960:
020A:6949  26: 8A 05				mov	al,es:[di]
020A:694C  88 04				mov	[si],al
020A:694E  47					inc	di
020A:694F  46					inc	si
020A:6950  E2 F7				loop	locloop_960		; Loop if cx > 0

020A:6952  BF 2CF2				mov	di,2CF2h
020A:6955  E8 0845				call	sub_78			; (719D)
020A:6958  5E					pop	si
020A:6959  59					pop	cx
020A:695A  58					pop	ax
020A:695B  C3					retn
							                        ;* No entry point to code
020A:695C  00 87 90DB				add	byte ptr data_622[bx],al	; (020A:90DB=2Eh)
020A:6960  06					push	es
020A:6961  57					push	di
020A:6962  2E: C4 3E 34DF			les	di,dword ptr cs:data_383	; (020A:34DF=202Eh) Load 32 bit ptr
020A:6967			loc_961:
020A:6967  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:696B  75 09				jne	loc_962			; Jump if not equal
020A:696D  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:6972  75 02				jne	loc_962			; Jump if not equal
020A:6974  EB 24				jmp	short loc_965		; (699A)
020A:6976			loc_962:
020A:6976  26: 39 1D				cmp	es:[di],bx
020A:6979  75 1A				jne	loc_964			; Jump if not equal
020A:697B  2E: 80 3E 349C 01			cmp	cs:data_381,1		; (020A:349C=0)
020A:6981  74 0C				je	loc_963			; Jump if equal
020A:6983  26: 3B 45 04				cmp	ax,es:[di+4]
020A:6987  77 0C				ja	loc_964			; Jump if above
020A:6989  26: 3B 45 02				cmp	ax,es:[di+2]
020A:698D  72 06				jb	loc_964			; Jump if below
020A:698F			loc_963:
020A:698F  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:6993  EB 07				jmp	short loc_966		; (699C)
020A:6995			loc_964:
020A:6995  83 C7 15				add	di,15h
020A:6998  EB CD				jmp	short loc_961		; (6967)
020A:699A			loc_965:
020A:699A  33 C0				xor	ax,ax			; Zero register
020A:699C			loc_966:
020A:699C  5F					pop	di
020A:699D  07					pop	es
020A:699E  C3					retn
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 228

020A:699F  00 00				add	[bx+si],al
020A:69A1  9C					pushf				; Push flags
020A:69A2  24 00				and	al,0
020A:69A4  000C[00]				db	12 dup (0)
020A:69B0			loc_967:
020A:69B0  80 3E 1329 01			cmp	data_149,1		; (020A:1329=0)
020A:69B5  74 57				je	loc_971			; Jump if equal
020A:69B7  BE 3233				mov	si,3233h
020A:69BA  BF 08C9				mov	di,8C9h
020A:69BD  B9 0040				mov	cx,40h
020A:69C0  E8 07DA				call	sub_78			; (719D)
020A:69C3  33 DB				xor	bx,bx			; Zero register
020A:69C5  FC					cld				; Clear direction

020A:69C6			locloop_968:
020A:69C6  80 3C 00				cmp	byte ptr [si],0
020A:69C9  74 04				je	loc_969			; Jump if equal
020A:69CB  43					inc	bx
020A:69CC  A4					movsb				; Mov [si] to es:[di]
020A:69CD  E2 F7				loop	locloop_968		; Loop if cx > 0

020A:69CF			loc_969:
020A:69CF  83 3E 3277 00			cmp	data_333,0		; (020A:3277=2067h)
020A:69D4  74 26				je	loc_970			; Jump if equal
020A:69D6  32 E4				xor	ah,ah			; Zero register
020A:69D8  A0 0906				mov	al,data_105		; (020A:0906=3Ch)
020A:69DB  2B C3				sub	ax,bx
020A:69DD  2D 0002				sub	ax,2
020A:69E0  2B C3				sub	ax,bx
020A:69E2  7C 18				jl	loc_970			; Jump if <
020A:69E4  B0 2C				mov	al,2Ch			; ','
020A:69E6  AA					stosb				; Store al to es:[di]
020A:69E7  B0 20				mov	al,20h			; ' '
020A:69E9  AA					stosb				; Store al to es:[di]
020A:69EA  8B CB				mov	cx,bx
020A:69EC  83 E9 03				sub	cx,3
020A:69EF  BE 3233				mov	si,3233h
020A:69F2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:69F4  BE 3274				mov	si,3274h
020A:69F7  B9 0003				mov	cx,3
020A:69FA  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:69FC			loc_970:
020A:69FC  BE 0866				mov	si,866h
020A:69FF  BF 01D6				mov	di,1D6h
020A:6A02  B9 00A0				mov	cx,0A0h
020A:6A05  FC					cld				; Clear direction
020A:6A06  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6A08  C7 06 1345 00A0			mov	data_151,0A0h		; (020A:1345=0)
020A:6A0E			loc_971:
020A:6A0E  80 3E 348E 00			cmp	byte ptr data_380,0	; (020A:348E=0)
020A:6A13  74 11				je	loc_972			; Jump if equal
020A:6A15  C7 06 19A8 6170			mov	data_176,6170h		; (020A:19A8=3EBh)
020A:6A1B  C7 06 19AA 6567			mov	data_177,6567h		; (020A:19AA=0EBFAh)
020A:6A21  A1 33FC				mov	ax,word ptr ds:[33FCh]	; (020A:33FC=0)
020A:6A24  EB 03				jmp	short loc_973		; (6A29)
020A:6A26			loc_972:
020A:6A26  A1 348C				mov	ax,word ptr ds:[348Ch]	; (020A:348C=0)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 229

020A:6A29			loc_973:
020A:6A29  BD 19B0				mov	bp,19B0h
020A:6A2C  B3 00				mov	bl,0
020A:6A2E  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:6A2E  9A					db	9Ah
020A:6A2F  0288 1510				dw	288h, 1510h
020A:6A33  80 3E 348E 00			cmp	byte ptr data_380,0	; (020A:348E=0)
020A:6A38  74 03				je	loc_974			; Jump if equal
020A:6A3A  E9 00B9				jmp	loc_981			; (6AF6)
020A:6A3D			loc_974:
020A:6A3D  B4 2C				mov	ah,2Ch
020A:6A3F  CD 21				int	21h			; DOS Services  ah=function 2Ch
										;  get time, cx=hrs/min, dx=sec
020A:6A41  8B 1E 4E73				mov	bx,data_541		; (020A:4E73=0C607h)
020A:6A45  3A FD				cmp	bh,ch
020A:6A47  76 03				jbe	loc_975			; Jump if below or =
020A:6A49  80 C5 18				add	ch,18h
020A:6A4C			loc_975:
020A:6A4C  8B DA				mov	bx,dx
020A:6A4E  B0 3C				mov	al,3Ch			; '<'
020A:6A50  F6 E5				mul	ch			; ax = reg * al
020A:6A52  32 ED				xor	ch,ch			; Zero register
020A:6A54  03 C1				add	ax,cx
020A:6A56  B9 003C				mov	cx,3Ch
020A:6A59  F7			data_592	db	0F7h
020A:6A5A  E1 53				loopz	locloop_979		; Loop if zf=1, cx>0

020A:6A5C  32 DB				xor	bl,bl			; Zero register
020A:6A5E  86 DF				xchg	bl,bh
020A:6A60  03 C3				add	ax,bx
020A:6A62  73 01				jnc	loc_976			; Jump if carry=0
020A:6A64  42					inc	dx
020A:6A65			loc_976:
020A:6A65  52					push	dx
020A:6A66  B9 000A				mov	cx,0Ah
020A:6A69  F7 E1				mul	cx			; dx:ax = reg * ax
020A:6A6B  59					pop	cx
020A:6A6C  03 D1				add	dx,cx
020A:6A6E  5B					pop	bx
020A:6A6F  52					push	dx
020A:6A70  50					push	ax
020A:6A71  32 FF				xor	bh,bh			; Zero register
020A:6A73  8B C3				mov	ax,bx
020A:6A75  33 D2				xor	dx,dx			; Zero register
020A:6A77  B9 000A				mov	cx,0Ah
020A:6A7A  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:6A7C  8B D8				mov	bx,ax
020A:6A7E  58					pop	ax
020A:6A7F  5A					pop	dx
020A:6A80  03 C3				add	ax,bx
020A:6A82  73 01				jnc	loc_977			; Jump if carry=0
020A:6A84  42					inc	dx
020A:6A85			loc_977:
020A:6A85  52					push	dx
020A:6A86  50					push	ax
020A:6A87  8B 0E 4E73				mov	cx,data_541		; (020A:4E73=0C607h)
020A:6A8B  8B 1E 4E75				mov	bx,data_542		; (020A:4E75=0DF06h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 230

020A:6A8F  B0 3C				mov	al,3Ch			; '<'
020A:6A91  F6 E5				mul	ch			; ax = reg * al
020A:6A93  32 ED				xor	ch,ch			; Zero register
020A:6A95  03 C1				add	ax,cx
020A:6A97  B9 003C				mov	cx,3Ch
020A:6A9A  F7 E1				mul	cx			; dx:ax = reg * ax
020A:6A9C  53					push	bx
020A:6A9D  32 DB				xor	bl,bl			; Zero register
020A:6A9F  86 DF				xchg	bl,bh
020A:6AA1  03 C3				add	ax,bx
020A:6AA3  73 01				jnc	loc_978			; Jump if carry=0
020A:6AA5  42					inc	dx
020A:6AA6			loc_978:
020A:6AA6  52					push	dx
020A:6AA7  B9 000A				mov	cx,0Ah
020A:6AAA  F7 E1				mul	cx			; dx:ax = reg * ax
020A:6AAC  59					pop	cx
020A:6AAD  03 D1				add	dx,cx

020A:6AAF			locloop_979:
020A:6AAF  5B					pop	bx
020A:6AB0  52					push	dx
020A:6AB1  50					push	ax
020A:6AB2  32 FF				xor	bh,bh			; Zero register
020A:6AB4  8B C3				mov	ax,bx
020A:6AB6  33 D2				xor	dx,dx			; Zero register
020A:6AB8  B9 000A				mov	cx,0Ah
020A:6ABB  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:6ABD  8B D8				mov	bx,ax
020A:6ABF  58					pop	ax
020A:6AC0  5A					pop	dx
020A:6AC1  03 C3				add	ax,bx
020A:6AC3  73 01				jnc	loc_980			; Jump if carry=0
020A:6AC5  42					inc	dx
020A:6AC6			loc_980:
020A:6AC6  5B					pop	bx
020A:6AC7  59					pop	cx
020A:6AC8  2B D8				sub	bx,ax
020A:6ACA  1B CA				sbb	cx,dx
020A:6ACC  75 28				jnz	loc_981			; Jump if not zero
020A:6ACE  0B DB				or	bx,bx			; Zero ?
020A:6AD0  74 24				jz	loc_981			; Jump if zero
020A:6AD2  33 D2				xor	dx,dx			; Zero register
020A:6AD4  8B CB				mov	cx,bx
020A:6AD6  A1 348C				mov	ax,word ptr ds:[348Ch]	; (020A:348C=0)
020A:6AD9  F7 F1				div	cx			; ax,dx rem=dx:ax/reg
020A:6ADB  B9 0258				mov	cx,258h
020A:6ADE  F7 E1				mul	cx			; dx:ax = reg * ax
020A:6AE0  0B C0				or	ax,ax			; Zero ?
020A:6AE2  74 12				jz	loc_981			; Jump if zero
020A:6AE4  BE 348F				mov	si,348Fh
020A:6AE7  BD 19B9				mov	bp,19B9h
020A:6AEA  9A 1510:4160		;*		call	far ptr sub_157		;*(1510:4160)
020A:6AEA  9A					db	9Ah
020A:6AEB  4160 1510				dw	4160h, 1510h
020A:6AEF  32 DB				xor	bl,bl			; Zero register
020A:6AF1  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 231

020A:6AF1  9A					db	9Ah
020A:6AF2  0288 1510				dw	288h, 1510h
020A:6AF6			loc_981:
020A:6AF6  B4 08				mov	ah,8
020A:6AF8  8B 1E 1326				mov	bx,data_147		; (020A:1326=0)
020A:6AFC  A0 120A				mov	al,data_142		; (020A:120A=0)
020A:6AFF  88 47 52				mov	[bx+52h],al
020A:6B02  E8 ECF7				call	sub_49			; (57FC)
020A:6B05  9A 1510:2AC0		;*		call	far ptr sub_139		;*(1510:2AC0)
020A:6B05  9A					db	9Ah
020A:6B06  2AC0 1510				dw	2AC0h, 1510h
020A:6B0A  8A 16 30CE				mov	dl,data_325		; (020A:30CE=31h)
020A:6B0E  B4 0E				mov	ah,0Eh
020A:6B10  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:6B12  E8 EACB				call	sub_45			; (55E0)
020A:6B15  EA 1510:3060		;*		jmp	far ptr loc_1923	;*(1510:3060)
020A:6B15  EA					db	0EAh
020A:6B16  3060 1510				dw	3060h, 1510h
020A:6B1A			loc_982:
020A:6B1A  B4 0E				mov	ah,0Eh
020A:6B1C  C6 06 35ED 01			mov	data_404,1		; (020A:35ED=44h)
020A:6B21  E9 0214				jmp	loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6B24  C6 06 35ED 02			mov	data_404,2		; (020A:35ED=44h)
020A:6B29  B4 38				mov	ah,38h			; '8'
020A:6B2B  E9 020A				jmp	loc_1002		; (6D38)
020A:6B2E			loc_983:
020A:6B2E  C6 06 35ED 02			mov	data_404,2		; (020A:35ED=44h)
020A:6B33  26: A0 000D				mov	al,byte ptr es:data_8+1	; (020A:000D=90h)
020A:6B37  24 0C				and	al,0Ch
020A:6B39  3C 04				cmp	al,4
020A:6B3B  74 19				je	loc_984			; Jump if equal
020A:6B3D  C7 06 1A4F 6F6C			mov	data_178,6F6Ch		; (020A:1A4F=2E83h)
020A:6B43  C7 06 1A51 2063			mov	data_179,2063h		; (020A:1A51=10h)
020A:6B49  72 0B				jc	loc_984			; Jump if carry Set
020A:6B4B  C7 06 1A4F 7573			mov	data_178,7573h		; (020A:1A4F=2E83h)
020A:6B51  C6 06 1A51 62			mov	byte ptr data_179,62h	; (020A:1A51=10h) 'b'
020A:6B56			loc_984:
020A:6B56  1E					push	ds
020A:6B57  B8 0556				mov	ax,556h
020A:6B5A  8E D8				mov	ds,ax
020A:6B5C  A1 38A3				mov	ax,word ptr ds:[38A3h]	; (ss:38A3=0FFFFh)
020A:6B5F  1F					pop	ds
020A:6B60  BD 1A5A				mov	bp,1A5Ah
020A:6B63  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:6B63  9A					db	9Ah
020A:6B64  021C 1510				dw	21Ch, 1510h
020A:6B68  B4 0A				mov	ah,0Ah
020A:6B6A  E9 01CB				jmp	loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6B6D  BD 1A0D				mov	bp,1A0Dh
020A:6B70  B6 09				mov	dh,9
020A:6B72  80 3E 4FD6 09			cmp	data_554,9		; (020A:4FD6=0BAh)
020A:6B77  74 57				je	loc_988			; Jump if equal
020A:6B79  80 3E 4FD6 31			cmp	data_554,31h		; (020A:4FD6=0BAh) '1'
020A:6B7E  74 39				je	loc_987			; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 232

020A:6B80  80 3E 4FD6 12			cmp	data_554,12h		; (020A:4FD6=0BAh)
020A:6B85  74 1B				je	loc_986			; Jump if equal
020A:6B87  80 3E 4FD6 00			cmp	data_554,0		; (020A:4FD6=0BAh)
020A:6B8C  74 42				je	loc_988			; Jump if equal
020A:6B8E  80 3E 4FD6 08			cmp	data_554,8		; (020A:4FD6=0BAh)
020A:6B93  74 07				je	loc_985			; Jump if equal
020A:6B95  BD 2B30				mov	bp,2B30h
020A:6B98  32 F6				xor	dh,dh			; Zero register
020A:6B9A  EB 40				jmp	short loc_989		; (6BDC)
020A:6B9C			loc_985:
020A:6B9C  B8 0008				mov	ax,8
020A:6B9F  E9 00A1				jmp	loc_994			; (6C43)
020A:6BA2			loc_986:
020A:6BA2  C6 06 35ED 13			mov	data_404,13h		; (020A:35ED=44h)
020A:6BA7  BD 1C89				mov	bp,1C89h
020A:6BAA  A1 4392				mov	ax,data_459		; (020A:4392=0B006h)
020A:6BAD  B3 00				mov	bl,0
020A:6BAF  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:6BAF  9A					db	9Ah
020A:6BB0  0288 1510				dw	288h, 1510h
020A:6BB4  B4 12				mov	ah,12h
020A:6BB6  E9 017F				jmp	loc_1002		; (6D38)
020A:6BB9			loc_987:
020A:6BB9  C6 06 35ED 0F			mov	data_404,0Fh		; (020A:35ED=44h)
020A:6BBE  BD 25A1				mov	bp,25A1h
020A:6BC1  A1 4392				mov	ax,data_459		; (020A:4392=0B006h)
020A:6BC4  B3 00				mov	bl,0
020A:6BC6  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:6BC6  9A					db	9Ah
020A:6BC7  0288 1510				dw	288h, 1510h
020A:6BCB  B4 31				mov	ah,31h			; '1'
020A:6BCD  E9 0168				jmp	loc_1002		; (6D38)
020A:6BD0			loc_988:
020A:6BD0  80 3E 4FD7 01			cmp	data_555,1		; (020A:4FD7=0)
020A:6BD5  75 05				jne	loc_989			; Jump if not equal
020A:6BD7  BD 2429				mov	bp,2429h
020A:6BDA  B6 2C				mov	dh,2Ch			; ','
020A:6BDC			loc_989:
020A:6BDC  A1 4392				mov	ax,data_459		; (020A:4392=0B006h)
020A:6BDF  B3 00				mov	bl,0
020A:6BE1  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:6BE1  9A					db	9Ah
020A:6BE2  0288 1510				dw	288h, 1510h
020A:6BE6  A0 4FD6				mov	al,data_554		; (020A:4FD6=0BAh)
020A:6BE9  32 E4				xor	ah,ah			; Zero register
020A:6BEB  0A F6				or	dh,dh			; Zero ?
020A:6BED  74 59				jz	loc_995			; Jump if zero
020A:6BEF  8A E6				mov	ah,dh
020A:6BF1  C6 06 35ED 03			mov	data_404,3		; (020A:35ED=44h)
020A:6BF6  E9 013F				jmp	loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6BF9  BD 1AE2				mov	bp,1AE2h
020A:6BFC  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:6BFC  9A					db	9Ah
020A:6BFD  021C 1510				dw	21Ch, 1510h
020A:6C01  B4 0C				mov	ah,0Ch
020A:6C03  C6 06 35ED 04			mov	data_404,4		; (020A:35ED=44h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 233

020A:6C08  E9 012D				jmp	loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6C0B  E8 0577				call	sub_74			; (7185)
020A:6C0E  B4 2E				mov	ah,2Eh			; '.'
020A:6C10  C6 06 35ED 05			mov	data_404,5		; (020A:35ED=44h)
020A:6C15  E9 0120				jmp	loc_1002		; (6D38)
020A:6C18			loc_993:
020A:6C18  E8 056A				call	sub_74			; (7185)
020A:6C1B  8B C3				mov	ax,bx
020A:6C1D  BD 1B3B				mov	bp,1B3Bh
020A:6C20  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:6C20  9A					db	9Ah
020A:6C21  021C 1510				dw	21Ch, 1510h
020A:6C25  B4 0D				mov	ah,0Dh
020A:6C27  C6 06 35ED 06			mov	data_404,6		; (020A:35ED=44h)
020A:6C2C  E9 0109				jmp	loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6C2F  BD 1BBC				mov	bp,1BBCh
020A:6C32  A1 2B39				mov	ax,data_230		; (020A:2B39=0A420h)
020A:6C35  8A 26 2B36				mov	ah,data_227		; (020A:2B36=0ADh)
020A:6C39  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:6C39  9A					db	9Ah
020A:6C3A  021C 1510				dw	21Ch, 1510h
020A:6C3E  B4 0F				mov	ah,0Fh
020A:6C40  E9 00F5				jmp	loc_1002		; (6D38)
020A:6C43			loc_994:
020A:6C43  C6 06 4FD6 00			mov	data_554,0		; (020A:4FD6=0BAh)
020A:6C48			loc_995:
020A:6C48  8B D8				mov	bx,ax
020A:6C4A  B4 14				mov	ah,14h
020A:6C4C  BD 1CFC				mov	bp,1CFCh
020A:6C4F  83 FB 02				cmp	bx,2
020A:6C52  74 2D				je	loc_996			; Jump if equal
020A:6C54  B4 15				mov	ah,15h
020A:6C56  BD 1D46				mov	bp,1D46h
020A:6C59  83 FB 05				cmp	bx,5
020A:6C5C  74 23				je	loc_996			; Jump if equal
020A:6C5E  B4 16				mov	ah,16h
020A:6C60  BD 1D90				mov	bp,1D90h
020A:6C63  83 FB 08				cmp	bx,8
020A:6C66  74 19				je	loc_996			; Jump if equal
020A:6C68  B4 1D				mov	ah,1Dh
020A:6C6A  BD 1F96				mov	bp,1F96h
020A:6C6D  83 FB 14				cmp	bx,14h
020A:6C70  74 0F				je	loc_996			; Jump if equal
020A:6C72  8A C3				mov	al,bl
020A:6C74  BD 1E0F				mov	bp,1E0Fh
020A:6C77  9A 1510:00D4		;*		call	far ptr sub_113		;*(1510:00D4)
020A:6C77  9A					db	9Ah
020A:6C78  00D4 1510				dw	0D4h, 1510h
020A:6C7C  B4 17				mov	ah,17h
020A:6C7E  BD 1DDA				mov	bp,1DDAh
020A:6C81			loc_996:
020A:6C81  80 3E 4FD6 00			cmp	data_554,0		; (020A:4FD6=0BAh)
020A:6C86  74 19				je	loc_997			; Jump if equal
020A:6C88  8B FD				mov	di,bp
020A:6C8A  1E					push	ds
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 234

020A:6C8B  E8 04F7				call	sub_74			; (7185)
020A:6C8E  1E					push	ds
020A:6C8F  07					pop	es
020A:6C90  1F					pop	ds
020A:6C91  83 C7 3B				add	di,3Bh
020A:6C94  BE 2B27				mov	si,2B27h
020A:6C97  B9 2B35				mov	cx,2B35h
020A:6C9A  81 E9 2B27				sub	cx,2B27h
020A:6C9E  FC					cld				; Clear direction
020A:6C9F  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6CA1			loc_997:
020A:6CA1  C6 06 35ED 08			mov	data_404,8		; (020A:35ED=44h)
020A:6CA6  E9 008F				jmp	loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6CA9  B4 1B				mov	ah,1Bh
020A:6CAB  C6 06 35ED 09			mov	data_404,9		; (020A:35ED=44h)
020A:6CB0  E9 0085				jmp	loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6CB3  B4 1C				mov	ah,1Ch
020A:6CB5  C6 06 35ED 0A			mov	data_404,0Ah		; (020A:35ED=44h)
020A:6CBA  EB 7C				jmp	short loc_1002		; (6D38)
020A:6CBC			loc_998:
020A:6CBC  B4 24				mov	ah,24h			; '$'
020A:6CBE  C6 06 35ED 0B			mov	data_404,0Bh		; (020A:35ED=44h)
020A:6CC3  EB 73				jmp	short loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6CC5  BD 22FF				mov	bp,22FFh
020A:6CC8  A1 4392				mov	ax,data_459		; (020A:4392=0B006h)
020A:6CCB  B3 00				mov	bl,0
020A:6CCD  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:6CCD  9A					db	9Ah
020A:6CCE  0288 1510				dw	288h, 1510h
020A:6CD2  B4 28				mov	ah,28h			; '('
020A:6CD4  C6 06 35ED 0C			mov	data_404,0Ch		; (020A:35ED=44h)
020A:6CD9  EB 5D				jmp	short loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6CDB  BD 234C				mov	bp,234Ch
020A:6CDE  A1 4392				mov	ax,data_459		; (020A:4392=0B006h)
020A:6CE1  B3 00				mov	bl,0
020A:6CE3  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:6CE3  9A					db	9Ah
020A:6CE4  0288 1510				dw	288h, 1510h
020A:6CE8  B4 29				mov	ah,29h			; ')'
020A:6CEA  C6 06 35ED 0D			mov	data_404,0Dh		; (020A:35ED=44h)
020A:6CEF  EB 47				jmp	short loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6CF1  B4 13				mov	ah,13h
020A:6CF3  C6 06 35ED 0E			mov	data_404,0Eh		; (020A:35ED=44h)
020A:6CF8  EB 3E				jmp	short loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6CFA  B4 11				mov	ah,11h
020A:6CFC  C6 06 35ED 0E			mov	data_404,0Eh		; (020A:35ED=44h)
020A:6D01  EB 35				jmp	short loc_1002		; (6D38)
020A:6D03			loc_999:
020A:6D03  B4 32				mov	ah,32h			; '2'
020A:6D05  C6 06 35ED 10			mov	data_404,10h		; (020A:35ED=44h)
020A:6D0A  EB 2C				jmp	short loc_1002		; (6D38)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 235

020A:6D0C			loc_1000:
020A:6D0C  B4 33				mov	ah,33h			; '3'
020A:6D0E  C6 06 35ED 11			mov	data_404,11h		; (020A:35ED=44h)
020A:6D13  EB 23				jmp	short loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6D15  C6 06 35ED 10			mov	data_404,10h		; (020A:35ED=44h)
020A:6D1A  EB 1C				jmp	short loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6D1C  B4 3B				mov	ah,3Bh			; ';'
020A:6D1E  EB 0A				jmp	short loc_1001		; (6D2A)
							                        ;* No entry point to code
020A:6D20  B4 3A				mov	ah,3Ah			; ':'
020A:6D22  EB 06				jmp	short loc_1001		; (6D2A)
							                        ;* No entry point to code
020A:6D24  B4 3C				mov	ah,3Ch			; '<'
020A:6D26  EB 02				jmp	short loc_1001		; (6D2A)
020A:6D28  B4 3D				mov	ah,3Dh			; '='
020A:6D2A			loc_1001:
020A:6D2A  C6 06 35ED 12			mov	data_404,12h		; (020A:35ED=44h)
020A:6D2F  EB 07				jmp	short loc_1002		; (6D38)
							                        ;* No entry point to code
020A:6D31  B4 11				mov	ah,11h
020A:6D33  C6 06 35ED 14			mov	data_404,14h		; (020A:35ED=44h)
020A:6D38			loc_1002:
020A:6D38  E8 044A				call	sub_74			; (7185)
020A:6D3B  E8 EABE				call	sub_49			; (57FC)
020A:6D3E  80 3E 1329 01			cmp	data_149,1		; (020A:1329=0)
020A:6D43  74 0A				je	loc_1003		; Jump if equal
020A:6D45  80 3E 35ED 14			cmp	data_404,14h		; (020A:35ED=44h)
020A:6D4A  74 03				je	loc_1003		; Jump if equal
020A:6D4C  E8 EA51				call	sub_47			; (57A0)
020A:6D4F			loc_1003:
020A:6D4F  A0 1208				mov	al,data_140		; (020A:1208=0)
020A:6D52  88 47 52				mov	[bx+52h],al
020A:6D55  9A 1510:2B10		;*		call	far ptr sub_140		;*(1510:2B10)
020A:6D55  9A					db	9Ah
020A:6D56  2B10 1510				dw	2B10h, 1510h
020A:6D5A  EA 1510:3060		;*		jmp	far ptr loc_1923	;*(1510:3060)
020A:6D5A  EA					db	0EAh
020A:6D5B  3060 1510				dw	3060h, 1510h
020A:6D5F  00					db	0
020A:6D60  00 00				add	[bx+si],al
020A:6D62  00 FF				add	bh,bh
020A:6D64  FF 14				call	word ptr [si]		;*
020A:6D66  6E					db	6Eh
020A:6D67  D9					db	0D9h
020A:6D68  70 CE				jo	loc_1002		; Jump if overflow=1
020A:6D6A  28 44 35				sub	[si+35h],al
020A:6D6D  00 00				add	[bx+si],al
020A:6D6F  9C					pushf				; Push flags
020A:6D70  24 4E				and	al,4Eh			; 'N'
020A:6D72  27					daa				; Decimal adjust
020A:6D73  FD					std				; Set direction flag
020A:6D74  1C FF				sbb	al,0FFh
020A:6D76  FF					db	0FFh
020A:6D77  FF					db	0FFh
020A:6D78  FF					db	0FFh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 236

020A:6D79  FF					db	0FFh
020A:6D7A  FF 90 41E8				call	data_457[bx+si]		;*(020A:41E8=6EA2h)
020A:6D7E  00 2E 168B				add	byte ptr data_161,ch	; (020A:168B='AAAAAAAAAAAAAA')
020A:6D82  AD					lodsw				; String [si] to ax
020A:6D83  38 B8 0001				cmp	byte ptr data_1+1[bx+si],bh	; (020A:0001=18h)
020A:6D87  E8 1B52				call	sub_94			; (88DC)
020A:6D8A  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:6D90  75 15				jne	loc_1004		; Jump if not equal
020A:6D92  BA FFFF				mov	dx,0FFFFh
020A:6D95  B8 0002				mov	ax,2
020A:6D98  E8 1B41				call	sub_94			; (88DC)
020A:6D9B  B8 0001				mov	ax,1
020A:6D9E  E8 1B3B				call	sub_94			; (88DC)
020A:6DA1  B8 0004				mov	ax,4
020A:6DA4  E8 1B35				call	sub_94			; (88DC)
020A:6DA7			loc_1004:
020A:6DA7  2E: C7 06 38AF 249C			mov	cs:data_435,249Ch	; (020A:38AF=0D2F6h)
020A:6DAE  2E: C7 06 38B1 274E			mov	cs:data_436,274Eh	; (020A:38B1=0D322h)
020A:6DB5  C3					retn
020A:6DB6  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_70		proc	near
020A:6DB8  2E: C7 06 38B3 1CFD			mov	cs:data_437,1CFDh	; (020A:38B3=0D3F6h)
020A:6DBF  C3					retn
				sub_70		endp

							                        ;* No entry point to code
020A:6DC0  50					push	ax
020A:6DC1  53					push	bx
020A:6DC2  51					push	cx
020A:6DC3  52					push	dx
020A:6DC4  56					push	si
020A:6DC5  57					push	di
020A:6DC6  55					push	bp
020A:6DC7  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:6DCC  1E					push	ds
020A:6DCD  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:6DD2  06					push	es
020A:6DD3  2E: 80 3E 38A0 FF			cmp	byte ptr cs:[38A0h],0FFh	; (020A:38A0=51h)
020A:6DD9  2E: C6 06 38A0 00			mov	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:6DDF  75 03				jnz	loc_1005		; Jump if not zero
020A:6DE1  E9 0220				jmp	loc_1025		; (7004)
020A:6DE4			loc_1005:
020A:6DE4  B8 1CFD				mov	ax,1CFDh
020A:6DE7  8E D8				mov	ds,ax
020A:6DE9  B8 3D00				mov	ax,3D00h
020A:6DEC  BA 78C0				mov	dx,78C0h
020A:6DEF  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:6DF1  73 03				jnc	loc_1006		; Jump if carry=0
020A:6DF3  E9 020E				jmp	loc_1025		; (7004)
020A:6DF6			loc_1006:
020A:6DF6  8B D8				mov	bx,ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 237

020A:6DF8  B4 44				mov	ah,44h			; 'D'
020A:6DFA  B0 07				mov	al,7
020A:6DFC  B9 0000				mov	cx,0
020A:6DFF  BA 78C9				mov	dx,78C9h
020A:6E02  CD 21				int	21h			; DOS Services  ah=function 44h
										;  IOctl-7 check output status
										;   bx=handle, returns al status
020A:6E04  50					push	ax
020A:6E05  B4 3E				mov	ah,3Eh
020A:6E07  CD 21				int	21h			; DOS Services  ah=function 3Eh
										;  close file, bx=file handle
020A:6E09  73 09				jnc	loc_1008		; Jump if carry=0
020A:6E0B  58					pop	ax
020A:6E0C			loc_1007:
020A:6E0C  9A 1510:3240		;*		call	far ptr sub_146		;*(1510:3240)
020A:6E0C  9A					db	9Ah
020A:6E0D  3240 1510				dw	3240h, 1510h
020A:6E11  E9 01F0				jmp	loc_1025		; (7004)
020A:6E14			loc_1008:
020A:6E14  58					pop	ax
020A:6E15  0A C0				or	al,al			; Zero ?
020A:6E17  74 F3				jz	loc_1007		; Jump if zero
020A:6E19  B4 40				mov	ah,40h
020A:6E1B  CD 67				int	67h			; EMS Memory        ah=func 40h
										;  get manager status in ah
020A:6E1D  80 FC 00				cmp	ah,0
020A:6E20  75 EA				jne	loc_1007		; Jump if not equal
020A:6E22  B4 42				mov	ah,42h
020A:6E24  CD 67				int	67h			; EMS Memory        ah=func 42h
										;  get pages, bx=unused,dx=total
020A:6E26  0A E4				or	ah,ah			; Zero ?
020A:6E28  75 E2				jnz	loc_1007		; Jump if not zero
020A:6E2A  83 FB 18				cmp	bx,18h
020A:6E2D  72 DD				jb	loc_1007		; Jump if below
020A:6E2F  B4 41				mov	ah,41h
020A:6E31  CD 67				int	67h			; EMS Memory        ah=func 41h
										;  get page frame segment in bx
020A:6E33  0A E4				or	ah,ah			; Zero ?
020A:6E35  75 D5				jnz	loc_1007		; Jump if not zero
020A:6E37  2E: 89 1E 38A1			mov	cs:data_428,bx		; (020A:38A1=4B3h)
020A:6E3C  C6 06 7911 01			mov	byte ptr ds:[7911h],1	; (1CFD:7911=0)
020A:6E41  B4 43				mov	ah,43h			; 'C'
020A:6E43  BB 0004				mov	bx,4
020A:6E46  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6E48  0A E4				or	ah,ah			; Zero ?
020A:6E4A  75 C0				jnz	loc_1007		; Jump if not zero
020A:6E4C  2E: 89 16 38AD			mov	cs:data_434,dx		; (020A:38AD=0D322h)
020A:6E51  89 16 7912				mov	word ptr ds:[7912h],dx	; (1CFD:7912=0FFFFh)
020A:6E55  B4 43				mov	ah,43h			; 'C'
020A:6E57  BB 0004				mov	bx,4
020A:6E5A  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6E5C  0A E4				or	ah,ah			; Zero ?
020A:6E5E  75 AC				jnz	loc_1007		; Jump if not zero
020A:6E60  2E: 89 16 38A9			mov	cs:data_432,dx		; (020A:38A9=4E7Fh)
020A:6E65  89 16 7914				mov	word ptr ds:[7914h],dx	; (1CFD:7914=0FFFFh)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 238

020A:6E69  B4 43				mov	ah,43h			; 'C'
020A:6E6B  BB 0004				mov	bx,4
020A:6E6E  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6E70  0A E4				or	ah,ah			; Zero ?
020A:6E72  75 98				jnz	loc_1007		; Jump if not zero
020A:6E74  2E: 89 16 38AB			mov	cs:data_433,dx		; (020A:38AB=0CA8Ah)
020A:6E79  89 16 7916				mov	word ptr ds:[7916h],dx	; (1CFD:7916=0FFFFh)
020A:6E7D  B4 43				mov	ah,43h			; 'C'
020A:6E7F  BB 0004				mov	bx,4
020A:6E82  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6E84  0A E4				or	ah,ah			; Zero ?
020A:6E86  75 84				jnz	loc_1007		; Jump if not zero
020A:6E88  89 16 7918				mov	word ptr ds:[7918h],dx	; (1CFD:7918=0FFFFh)
020A:6E8C  B4 43				mov	ah,43h			; 'C'
020A:6E8E  BB 0004				mov	bx,4
020A:6E91  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6E93  0A E4				or	ah,ah			; Zero ?
020A:6E95  74 03				jz	loc_1009		; Jump if zero
020A:6E97  E9 FF72				jmp	loc_1007		; (6E0C)
020A:6E9A			loc_1009:
020A:6E9A  89 16 791A				mov	word ptr ds:[791Ah],dx	; (1CFD:791A=0FFFFh)
020A:6E9E  B4 43				mov	ah,43h			; 'C'
020A:6EA0  BB 0004				mov	bx,4
020A:6EA3  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6EA5  0A E4				or	ah,ah			; Zero ?
020A:6EA7  75 11				jnz	loc_1010		; Jump if not zero
020A:6EA9  89 16 791C				mov	word ptr ds:[791Ch],dx	; (1CFD:791C=0FFFFh)
020A:6EAD  C6 06 79DA 03			mov	byte ptr ds:[79DAh],3	; (1CFD:79DA=0)
020A:6EB2  C6 06 79DB 01			mov	byte ptr ds:[79DBh],1	; (1CFD:79DB=0)
020A:6EB7  EB 09				jmp	short loc_1011		; (6EC2)
020A:6EB9  90					nop
020A:6EBA			loc_1010:
020A:6EBA  9A 1510:3240		;*		call	far ptr sub_146		;*(1510:3240)
020A:6EBA  9A					db	9Ah
020A:6EBB  3240 1510				dw	3240h, 1510h
020A:6EBF  E9 0142				jmp	loc_1025		; (7004)
020A:6EC2			loc_1011:
020A:6EC2  BA 5655				mov	dx,5655h
020A:6EC5  B4 09				mov	ah,9
020A:6EC7  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
020A:6EC9  B9 0004				mov	cx,4
020A:6ECC  BD 0000				mov	bp,0
020A:6ECF  8B 16 7912				mov	dx,word ptr ds:[7912h]	; (1CFD:7912=0FFFFh)
020A:6ED3  BE 78FB				mov	si,78FBh
020A:6ED6  E8 01F7				call	sub_71			; (70D0)
020A:6ED9  72 DF				jc	loc_1010		; Jump if carry Set
020A:6EDB  BA 28CE				mov	dx,28CEh
020A:6EDE  8E C2				mov	es,dx
020A:6EE0  8B 16 7914				mov	dx,word ptr ds:[7914h]	; (1CFD:7914=0FFFFh)
020A:6EE4  E8 024D				call	sub_72			; (7134)
020A:6EE7  72 D1				jc	loc_1010		; Jump if carry Set
020A:6EE9  BA 3544				mov	dx,3544h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 239

020A:6EEC  8E C2				mov	es,dx
020A:6EEE  8B 16 7916				mov	dx,word ptr ds:[7916h]	; (1CFD:7916=0FFFFh)
020A:6EF2  E8 023F				call	sub_72			; (7134)
020A:6EF5  72 C3				jc	loc_1010		; Jump if carry Set
020A:6EF7  8B 16 7918				mov	dx,word ptr ds:[7918h]	; (1CFD:7918=0FFFFh)
020A:6EFB  BE 78CB				mov	si,78CBh
020A:6EFE  E8 01CF				call	sub_71			; (70D0)
020A:6F01  72 B7				jc	loc_1010		; Jump if carry Set
020A:6F03  8B 16 791A				mov	dx,word ptr ds:[791Ah]	; (1CFD:791A=0FFFFh)
020A:6F07  BE 78EB				mov	si,78EBh
020A:6F0A  E8 01C3				call	sub_71			; (70D0)
020A:6F0D  72 AB				jc	loc_1010		; Jump if carry Set
020A:6F0F  8B 16 791C				mov	dx,word ptr ds:[791Ch]	; (1CFD:791C=0FFFFh)
020A:6F13  BE 78DB				mov	si,78DBh
020A:6F16  E8 01B7				call	sub_71			; (70D0)
020A:6F19  72 9F				jc	loc_1010		; Jump if carry Set
020A:6F1B  2E: C6 06 38A0 01			mov	byte ptr cs:[38A0h],1	; (020A:38A0=51h)
020A:6F21  B8 28CE				mov	ax,28CEh
020A:6F24  8E C0				mov	es,ax
020A:6F26  B8 6E14				mov	ax,6E14h
020A:6F29  8E D8				mov	ds,ax
020A:6F2B  33 FF				xor	di,di			; Zero register
020A:6F2D  8B F7				mov	si,di
020A:6F2F  FC					cld				; Clear direction
020A:6F30  B9 2C44				mov	cx,2C44h
020A:6F33  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:6F35  2E: 8C 06 38A5			mov	cs:data_430,es		; (020A:38A5=0CBD2h)
020A:6F3A  8C C0				mov	ax,es
020A:6F3C  BB 2C44				mov	bx,2C44h
020A:6F3F  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:6F41  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:6F43  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:6F45  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:6F47  03 C3				add	ax,bx
020A:6F49  40					inc	ax
020A:6F4A  2E: A3 38A7				mov	cs:data_431,ax		; (020A:38A7=168Ah)
020A:6F4E  B8 1CFD				mov	ax,1CFDh
020A:6F51  8E D8				mov	ds,ax
020A:6F53  B4 42				mov	ah,42h
020A:6F55  CD 67				int	67h			; EMS Memory        ah=func 42h
										;  get pages, bx=unused,dx=total
020A:6F57  0A E4				or	ah,ah			; Zero ?
020A:6F59  74 03				jz	loc_1012		; Jump if zero
020A:6F5B  E9 00D9				jmp	loc_1026		; (7037)
020A:6F5E			loc_1012:
020A:6F5E  F6 06 15CF 01			test	byte ptr ds:[15CFh],1	; (1CFD:15CF=0)
020A:6F63  75 4E				jnz	loc_1018		; Jump if not zero
020A:6F65  8B C3				mov	ax,bx
020A:6F67  B1 04				mov	cl,4
020A:6F69  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:6F6B  74 11				jz	loc_1014		; Jump if zero
020A:6F6D  3D 0004				cmp	ax,4
020A:6F70  76 03				jbe	loc_1013		; Jump if below or =
020A:6F72  B8 0004				mov	ax,4
020A:6F75			loc_1013:
020A:6F75  B1 02				mov	cl,2
020A:6F77  D3 E0				shl	ax,cl			; Shift w/zeros fill
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 240

020A:6F79  2B D8				sub	bx,ax
020A:6F7B  EB 05				jmp	short loc_1015		; (6F82)
020A:6F7D  90					nop
020A:6F7E			loc_1014:
020A:6F7E  8B C3				mov	ax,bx
020A:6F80  33 DB				xor	bx,bx			; Zero register
020A:6F82			loc_1015:
020A:6F82  8B EB				mov	bp,bx
020A:6F84  B1 02				mov	cl,2
020A:6F86  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:6F88  8B C8				mov	cx,ax
020A:6F8A  E3 25				jcxz	loc_1017		; Jump if cx=0
020A:6F8C  BF 00C0				mov	di,0C0h
020A:6F8F  89 3E 79DD				mov	word ptr ds:[79DDh],di	; (1CFD:79DD=0)

020A:6F93			locloop_1016:
020A:6F93  B4 43				mov	ah,43h			; 'C'
020A:6F95  BB 0004				mov	bx,4
020A:6F98  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6F9A  0A E4				or	ah,ah			; Zero ?
020A:6F9C  75 24				jnz	loc_1019		; Jump if not zero
020A:6F9E  89 95 7912				mov	word ptr ds:[7912h][di],dx	; (1CFD:7912=0FFFFh)
020A:6FA2  33 F6				xor	si,si			; Zero register
020A:6FA4  E8 0129				call	sub_71			; (70D0)
020A:6FA7  72 19				jc	loc_1019		; Jump if carry Set
020A:6FA9  FE 06 79DC				inc	byte ptr ds:[79DCh]	; (1CFD:79DC=0)
020A:6FAD  47					inc	di
020A:6FAE  47					inc	di
020A:6FAF  E2 E2				loop	locloop_1016		; Loop if cx > 0

020A:6FB1			loc_1017:
020A:6FB1  8B DD				mov	bx,bp
020A:6FB3			loc_1018:
020A:6FB3  83 FB 0C				cmp	bx,0Ch
020A:6FB6  72 0A				jb	loc_1019		; Jump if below
020A:6FB8  8B C3				mov	ax,bx
020A:6FBA  B3 0C				mov	bl,0Ch
020A:6FBC  F6 F3				div	bl			; al, ah rem = ax/reg
020A:6FBE  3C 00				cmp	al,0
020A:6FC0  75 03				jne	loc_1020		; Jump if not equal
020A:6FC2			loc_1019:
020A:6FC2  EB 73				jmp	short loc_1026		; (7037)
020A:6FC4  90					nop
020A:6FC5			loc_1020:
020A:6FC5  32 E4				xor	ah,ah			; Zero register
020A:6FC7  3D 001E				cmp	ax,1Eh
020A:6FCA  72 03				jb	loc_1021		; Jump if below
020A:6FCC  B8 001E				mov	ax,1Eh
020A:6FCF			loc_1021:
020A:6FCF  8B C8				mov	cx,ax
020A:6FD1  BF 000C				mov	di,0Ch

020A:6FD4			locloop_1022:
020A:6FD4  51					push	cx
020A:6FD5  B9 0003				mov	cx,3

           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 241

020A:6FD8			locloop_1023:
020A:6FD8  B4 43				mov	ah,43h			; 'C'
020A:6FDA  BB 0004				mov	bx,4
020A:6FDD  CD 67				int	67h			; EMS Memory        ah=func 43h
										;  get handle dx,allocate pgs bx
020A:6FDF  0A E4				or	ah,ah			; Zero ?
020A:6FE1  75 1D				jnz	loc_1024		; Jump if not zero
020A:6FE3  89 95 7912				mov	word ptr ds:[7912h][di],dx	; (1CFD:7912=0FFFFh)
020A:6FE7  FE 06 79DA				inc	byte ptr ds:[79DAh]	; (1CFD:79DA=0)
020A:6FEB  33 F6				xor	si,si			; Zero register
020A:6FED  E8 00E0				call	sub_71			; (70D0)
020A:6FF0  72 0E				jc	loc_1024		; Jump if carry Set
020A:6FF2  47					inc	di
020A:6FF3  47					inc	di
020A:6FF4  E2 E2				loop	locloop_1023		; Loop if cx > 0

020A:6FF6  59					pop	cx
020A:6FF7  FE 06 79DB				inc	byte ptr ds:[79DBh]	; (1CFD:79DB=0)
020A:6FFB  E2 D7				loop	locloop_1022		; Loop if cx > 0

020A:6FFD  EB 38				jmp	short loc_1026		; (7037)
020A:6FFF  90					nop
020A:7000			loc_1024:
020A:7000  59					pop	cx
020A:7001  EB 34				jmp	short loc_1026		; (7037)
020A:7003  90					nop
020A:7004			loc_1025:
020A:7004  2E: C7 06 38A5 6E14			mov	cs:data_430,6E14h	; (020A:38A5=0CBD2h)
020A:700B  B8 6E14				mov	ax,6E14h
020A:700E  BB 2C44				mov	bx,2C44h
020A:7011  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:7013  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:7015  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:7017  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:7019  03 C3				add	ax,bx
020A:701B  40					inc	ax
020A:701C  2E: A3 38A7				mov	cs:data_431,ax		; (020A:38A7=168Ah)
020A:7020  2E: C7 06 38A9 28CE			mov	cs:data_432,28CEh	; (020A:38A9=4E7Fh)
020A:7027  2E: C7 06 38AB 3544			mov	cs:data_433,3544h	; (020A:38AB=0CA8Ah)
020A:702E  2E: C6 06 38A0 00			mov	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:7034  EB 3A				jmp	short loc_1027		; (7070)
020A:7036  90					nop
020A:7037			loc_1026:
020A:7037  A0 79DA				mov	al,byte ptr ds:[79DAh]	; (1CFD:79DA=0)
020A:703A  02 06 79DC				add	al,byte ptr ds:[79DCh]	; (1CFD:79DC=0)
020A:703E  04 03				add	al,3
020A:7040  32 E4				xor	ah,ah			; Zero register
020A:7042  B1 06				mov	cl,6
020A:7044  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:7046  B3 62				mov	bl,62h			; 'b'
020A:7048  F6 F3				div	bl			; al, ah rem = ax/reg
020A:704A  32 E4				xor	ah,ah			; Zero register
020A:704C  B3 01				mov	bl,1
020A:704E  C6 06 0720 20			mov	byte ptr ds:[720h],20h	; (1CFD:0720=66h) ' '
020A:7053  BD 071D				mov	bp,71Dh
020A:7056  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:7056  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 242

020A:7057  0288 1510				dw	288h, 1510h
020A:705B  A1 0720				mov	ax,word ptr ds:[720h]	; (1CFD:0720=2066h)
020A:705E  A2 071D				mov	byte ptr ds:[71Dh],al	; (1CFD:071D=20h)
020A:7061  C6 06 071E 2E			mov	byte ptr ds:[71Eh],2Eh	; (1CFD:071E=6Fh) '.'
020A:7066  88 26 071F				mov	byte ptr ds:[71Fh],ah	; (1CFD:071F=66h)
020A:706A  C7 06 0720 424D			mov	word ptr ds:[720h],424Dh	; (1CFD:0720=2066h)
020A:7070			loc_1027:
020A:7070  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7075  9C					pushf				; Push flags
020A:7076  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:707B  5A					pop	dx
020A:707C  8E C2				mov	es,dx
020A:707E  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:7083  5A					pop	dx
020A:7084  75 0A				jnz	loc_1028		; Jump if not zero
020A:7086  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:708B  74 03				je	loc_1028		; Jump if equal
020A:708D  E8 046C				call	sub_85			; (74FC)
020A:7090			loc_1028:
020A:7090  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7095  9D					popf				; Pop flags
020A:7096  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:709B  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:70A0  9C					pushf				; Push flags
020A:70A1  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:70A6  5A					pop	dx
020A:70A7  8E DA				mov	ds,dx
020A:70A9  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:70AE  5A					pop	dx
020A:70AF  75 0A				jnz	loc_1029		; Jump if not zero
020A:70B1  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:70B6  74 03				je	loc_1029		; Jump if equal
020A:70B8  E8 0441				call	sub_85			; (74FC)
020A:70BB			loc_1029:
020A:70BB  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:70C0  9D					popf				; Pop flags
020A:70C1  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:70C6  5D					pop	bp
020A:70C7  5F					pop	di
020A:70C8  5E					pop	si
020A:70C9  5A					pop	dx
020A:70CA  59					pop	cx
020A:70CB  5B					pop	bx
020A:70CC  58					pop	ax
020A:70CD  C3					retn
020A:70CE  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_71		proc	near
020A:70D0  50					push	ax
020A:70D1  53					push	bx
020A:70D2  51					push	cx
020A:70D3  55					push	bp
020A:70D4  33 ED				xor	bp,bp			; Zero register
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 243

020A:70D6  B9 0004				mov	cx,4

020A:70D9			locloop_1030:
020A:70D9  B4 44				mov	ah,44h			; 'D'
020A:70DB  8B DD				mov	bx,bp
020A:70DD  8A C3				mov	al,bl
020A:70DF  CD 67				int	67h			; EMS Memory        ah=func 44h
										;  map memory, dx=handle
020A:70E1  0A E4				or	ah,ah			; Zero ?
020A:70E3  75 46				jnz	loc_1033		; Jump if not zero
020A:70E5  45					inc	bp
020A:70E6  E2 F1				loop	locloop_1030		; Loop if cx > 0

020A:70E8  06					push	es
020A:70E9  57					push	di
020A:70EA  2E: 8E 06 38A1			mov	es,cs:data_428		; (020A:38A1=4B3h)
020A:70EF  33 FF				xor	di,di			; Zero register
020A:70F1  B8 FFFF				mov	ax,0FFFFh
020A:70F4  B9 8000				mov	cx,8000h
020A:70F7  FC					cld				; Clear direction
020A:70F8  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:70FA  B9 0010				mov	cx,10h
020A:70FD  83 FE 00				cmp	si,0
020A:7100  74 08				je	loc_1031		; Jump if equal
020A:7102  BF FFF0				mov	di,0FFF0h
020A:7105  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:7107  EB 03				jmp	short loc_1032		; (710C)
020A:7109  90					nop
020A:710A			loc_1031:
020A:710A  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:710C			loc_1032:
020A:710C  1E					push	ds
020A:710D  2E: 8E 1E 38A1			mov	ds,cs:data_428		; (020A:38A1=4B3h)
020A:7112  BD FFFC				mov	bp,0FFFCh
020A:7115  8B C2				mov	ax,dx
020A:7117  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:7117  9A					db	9Ah
020A:7118  021C 1510				dw	21Ch, 1510h
020A:711C  1F					pop	ds
020A:711D  5F					pop	di
020A:711E  07					pop	es
020A:711F  B4 47				mov	ah,47h
020A:7121  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:7123  0A E4				or	ah,ah			; Zero ?
020A:7125  75 04				jnz	loc_1033		; Jump if not zero
020A:7127  F8					clc				; Clear carry flag
020A:7128  EB 02				jmp	short loc_1034		; (712C)
020A:712A  90					nop
020A:712B			loc_1033:
020A:712B  F9					stc				; Set carry flag
020A:712C			loc_1034:
020A:712C  5D					pop	bp
020A:712D  59					pop	cx
020A:712E  5B					pop	bx
020A:712F  58					pop	ax
020A:7130  C3					retn
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 244

				sub_71		endp

020A:7131  87 DB				xchg	bx,bx
020A:7133  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_72		proc	near
020A:7134  50					push	ax
020A:7135  53					push	bx
020A:7136  51					push	cx
020A:7137  55					push	bp
020A:7138  33 ED				xor	bp,bp			; Zero register
020A:713A  B9 0004				mov	cx,4

020A:713D			locloop_1035:
020A:713D  B4 44				mov	ah,44h			; 'D'
020A:713F  8B DD				mov	bx,bp
020A:7141  8A C3				mov	al,bl
020A:7143  CD 67				int	67h			; EMS Memory        ah=func 44h
										;  map memory, dx=handle
020A:7145  0A E4				or	ah,ah			; Zero ?
020A:7147  75 28				jnz	loc_1036		; Jump if not zero
020A:7149  45					inc	bp
020A:714A  E2 F1				loop	locloop_1035		; Loop if cx > 0

020A:714C  06					push	es
020A:714D  1E					push	ds
020A:714E  57					push	di
020A:714F  56					push	si
020A:7150  06					push	es
020A:7151  1F					pop	ds
020A:7152  2E: 8E 06 38A1			mov	es,cs:data_428		; (020A:38A1=4B3h)
020A:7157  33 FF				xor	di,di			; Zero register
020A:7159  8B F7				mov	si,di
020A:715B  B9 8000				mov	cx,8000h
020A:715E  FC					cld				; Clear direction
020A:715F  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
020A:7161  5E					pop	si
020A:7162  5F					pop	di
020A:7163  1F					pop	ds
020A:7164  07					pop	es
020A:7165  B4 47				mov	ah,47h
020A:7167  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:7169  0A E4				or	ah,ah			; Zero ?
020A:716B  75 04				jnz	loc_1036		; Jump if not zero
020A:716D  F8					clc				; Clear carry flag
020A:716E  EB 05				jmp	short loc_1037		; (7175)
020A:7170  90					nop
020A:7171			loc_1036:
020A:7171  F9					stc				; Set carry flag
020A:7172  EB 01				jmp	short loc_1037		; (7175)
020A:7174  90					nop
020A:7175			loc_1037:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 245

020A:7175  5D					pop	bp
020A:7176  59					pop	cx
020A:7177  5B					pop	bx
020A:7178  58					pop	ax
020A:7179  C3					retn
				sub_72		endp

020A:717A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_73		proc	near
020A:717C  EB 46				jmp	short loc_1038		; (71C4)
020A:717E  90					nop
020A:717F  EB 49				jmp	short loc_1039		; (71CA)
020A:7181  90					nop
020A:7182  EB 4C				jmp	short loc_1040		; (71D0)
020A:7184  90					nop

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_74:
020A:7185  EB 67				jmp	short loc_1042		; (71EE)
020A:7187  90					nop

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_75:
020A:7188  EB 6A				jmp	short loc_1043		; (71F4)
020A:718A  90					nop
020A:718B  EB 6D				jmp	short loc_1044		; (71FA)
020A:718D  90					nop
020A:718E  EB 70				jmp	short loc_1045		; (7200)
020A:7190  90					nop
020A:7191  E9 008C				jmp	loc_1047		; (7220)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_76:
020A:7194  E9 00A7				jmp	loc_1049		; (723E)
020A:7197  E9 00AA				jmp	loc_1050		; (7244)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_77:
020A:719A  E9 00AD				jmp	loc_1051		; (724A)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_78:
020A:719D  E9 00C8				jmp	loc_1053		; (7268)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_79:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 246

020A:71A0  E9 00CB				jmp	loc_1054		; (726E)
020A:71A3  E9 00CE				jmp	loc_1055		; (7274)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_80:
020A:71A6  E9 00D1				jmp	loc_1056		; (727A)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_81:
020A:71A9  E9 00EE				jmp	loc_1058		; (729A)
020A:71AC  E9 0109				jmp	loc_1060		; (72B8)
020A:71AF  E9 010B				jmp	loc_1061		; (72BD)
020A:71B2  E9 010D				jmp	loc_1062		; (72C2)
020A:71B5  E9 0126				jmp	loc_1064		; (72DE)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_82:
020A:71B8  E9 0128				jmp	loc_1065		; (72E3)

				;ßßßß External Entry into Subroutine ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

				sub_83:
020A:71BB  E9 012A				jmp	loc_1066		; (72E8)
020A:71BE  E9 012C				jmp	loc_1067		; (72ED)
020A:71C1  E9 0144				jmp	loc_1069		; (7308)
020A:71C4			loc_1038:
020A:71C4  2E: 8E 1E 38AF			mov	ds,cs:data_435		; (020A:38AF=0D2F6h)
020A:71C9  C3					retn
020A:71CA			loc_1039:
020A:71CA  2E: 8E 1E 38B1			mov	ds,cs:data_436		; (020A:38B1=0D322h)
020A:71CF  C3					retn
020A:71D0			loc_1040:
020A:71D0  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:71D6  75 06				jne	loc_1041		; Jump if not equal
020A:71D8  2E: 8E 1E 38A9			mov	ds,cs:data_432		; (020A:38A9=4E7Fh)
020A:71DD  C3					retn
020A:71DE			loc_1041:
020A:71DE  52					push	dx
020A:71DF  2E: 8B 16 38A9			mov	dx,cs:data_432		; (020A:38A9=4E7Fh)
020A:71E4  E8 0315				call	sub_85			; (74FC)
020A:71E7  2E: 8E 1E 38A1			mov	ds,cs:data_428		; (020A:38A1=4B3h)
020A:71EC  5A					pop	dx
020A:71ED  C3					retn
020A:71EE			loc_1042:
020A:71EE  2E: 8E 1E 38B3			mov	ds,cs:data_437		; (020A:38B3=0D3F6h)
020A:71F3  C3					retn
020A:71F4			loc_1043:
020A:71F4  2E: 8E 1E 38A5			mov	ds,cs:data_430		; (020A:38A5=0CBD2h)
020A:71F9  C3					retn
020A:71FA			loc_1044:
020A:71FA  2E: 8E 1E 38A7			mov	ds,cs:data_431		; (020A:38A7=168Ah)
020A:71FF  C3					retn
020A:7200			loc_1045:
020A:7200  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 247

020A:7206  75 08				jne	loc_1046		; Jump if not equal
020A:7208  50					push	ax
020A:7209  B8 5E14				mov	ax,5E14h
020A:720C  8E D8				mov	ds,ax
020A:720E  58					pop	ax
020A:720F  C3					retn
020A:7210			loc_1046:
020A:7210  52					push	dx
020A:7211  2E: 8B 16 38AD			mov	dx,cs:data_434		; (020A:38AD=0D322h)
020A:7216  E8 02E3				call	sub_85			; (74FC)
020A:7219  2E: 8E 1E 38A1			mov	ds,cs:data_428		; (020A:38A1=4B3h)
020A:721E  5A					pop	dx
020A:721F  C3					retn
020A:7220			loc_1047:
020A:7220  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:7226  75 06				jne	loc_1048		; Jump if not equal
020A:7228  2E: 8E 1E 38AB			mov	ds,cs:data_433		; (020A:38AB=0CA8Ah)
020A:722D  C3					retn
020A:722E			loc_1048:
020A:722E  52					push	dx
020A:722F  2E: 8B 16 38AB			mov	dx,cs:data_433		; (020A:38AB=0CA8Ah)
020A:7234  E8 02C5				call	sub_85			; (74FC)
020A:7237  2E: 8E 1E 38A1			mov	ds,cs:data_428		; (020A:38A1=4B3h)
020A:723C  5A					pop	dx
020A:723D  C3					retn
020A:723E			loc_1049:
020A:723E  2E: 8E 06 38AF			mov	es,cs:data_435		; (020A:38AF=0D2F6h)
020A:7243  C3					retn
020A:7244			loc_1050:
020A:7244  2E: 8E 06 38B1			mov	es,cs:data_436		; (020A:38B1=0D322h)
020A:7249  C3					retn
020A:724A			loc_1051:
020A:724A  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:7250  75 06				jne	loc_1052		; Jump if not equal
020A:7252  2E: 8E 06 38A9			mov	es,cs:data_432		; (020A:38A9=4E7Fh)
020A:7257  C3					retn
020A:7258			loc_1052:
020A:7258  52					push	dx
020A:7259  2E: 8B 16 38A9			mov	dx,cs:data_432		; (020A:38A9=4E7Fh)
020A:725E  E8 029B				call	sub_85			; (74FC)
020A:7261  2E: 8E 06 38A1			mov	es,cs:data_428		; (020A:38A1=4B3h)
020A:7266  5A					pop	dx
020A:7267  C3					retn
020A:7268			loc_1053:
020A:7268  2E: 8E 06 38B3			mov	es,cs:data_437		; (020A:38B3=0D3F6h)
020A:726D  C3					retn
020A:726E			loc_1054:
020A:726E  2E: 8E 06 38A5			mov	es,cs:data_430		; (020A:38A5=0CBD2h)
020A:7273  C3					retn
020A:7274			loc_1055:
020A:7274  2E: 8E 06 38A7			mov	es,cs:data_431		; (020A:38A7=168Ah)
020A:7279  C3					retn
020A:727A			loc_1056:
020A:727A  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:7280  75 08				jne	loc_1057		; Jump if not equal
020A:7282  50					push	ax
020A:7283  B8 5E14				mov	ax,5E14h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 248

020A:7286  8E C0				mov	es,ax
020A:7288  58					pop	ax
020A:7289  C3					retn
020A:728A			loc_1057:
020A:728A  52					push	dx
020A:728B  2E: 8B 16 38AD			mov	dx,cs:data_434		; (020A:38AD=0D322h)
020A:7290  E8 0269				call	sub_85			; (74FC)
020A:7293  2E: 8E 06 38A1			mov	es,cs:data_428		; (020A:38A1=4B3h)
020A:7298  5A					pop	dx
020A:7299  C3					retn
020A:729A			loc_1058:
020A:729A  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:72A0  75 06				jne	loc_1059		; Jump if not equal
020A:72A2  2E: 8E 06 38AB			mov	es,cs:data_433		; (020A:38AB=0CA8Ah)
020A:72A7  C3					retn
020A:72A8			loc_1059:
020A:72A8  52					push	dx
020A:72A9  2E: 8B 16 38AB			mov	dx,cs:data_433		; (020A:38AB=0CA8Ah)
020A:72AE  E8 024B				call	sub_85			; (74FC)
020A:72B1  2E: 8E 06 38A1			mov	es,cs:data_428		; (020A:38A1=4B3h)
020A:72B6  5A					pop	dx
020A:72B7  C3					retn
020A:72B8			loc_1060:
020A:72B8  2E: A1 38AF				mov	ax,cs:data_435		; (020A:38AF=0D2F6h)
020A:72BC  C3					retn
020A:72BD			loc_1061:
020A:72BD  2E: A1 38B1				mov	ax,cs:data_436		; (020A:38B1=0D322h)
020A:72C1  C3					retn
020A:72C2			loc_1062:
020A:72C2  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:72C8  75 05				jne	loc_1063		; Jump if not equal
020A:72CA  2E: A1 38A9				mov	ax,cs:data_432		; (020A:38A9=4E7Fh)
020A:72CE  C3					retn
020A:72CF			loc_1063:
020A:72CF  52					push	dx
020A:72D0  2E: 8B 16 38A9			mov	dx,cs:data_432		; (020A:38A9=4E7Fh)
020A:72D5  E8 0224				call	sub_85			; (74FC)
020A:72D8  2E: A1 38A1				mov	ax,cs:data_428		; (020A:38A1=4B3h)
020A:72DC  5A					pop	dx
020A:72DD  C3					retn
020A:72DE			loc_1064:
020A:72DE  2E: A1 38B3				mov	ax,cs:data_437		; (020A:38B3=0D3F6h)
020A:72E2  C3					retn
020A:72E3			loc_1065:
020A:72E3  2E: A1 38A5				mov	ax,cs:data_430		; (020A:38A5=0CBD2h)
020A:72E7  C3					retn
020A:72E8			loc_1066:
020A:72E8  2E: A1 38A7				mov	ax,cs:data_431		; (020A:38A7=168Ah)
020A:72EC  C3					retn
020A:72ED			loc_1067:
020A:72ED  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:72F3  75 04				jne	loc_1068		; Jump if not equal
020A:72F5  B8 5E14				mov	ax,5E14h
020A:72F8  C3					retn
020A:72F9			loc_1068:
020A:72F9  52					push	dx
020A:72FA  2E: 8B 16 38AD			mov	dx,cs:data_434		; (020A:38AD=0D322h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 249

020A:72FF  E8 01FA				call	sub_85			; (74FC)
020A:7302  2E: A1 38A1				mov	ax,cs:data_428		; (020A:38A1=4B3h)
020A:7306  5A					pop	dx
020A:7307  C3					retn
020A:7308			loc_1069:
020A:7308  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:730E  75 05				jne	loc_1070		; Jump if not equal
020A:7310  2E: A1 38AB				mov	ax,cs:data_433		; (020A:38AB=0CA8Ah)
020A:7314  C3					retn
020A:7315			loc_1070:
020A:7315  52					push	dx
020A:7316  2E: 8B 16 38AB			mov	dx,cs:data_433		; (020A:38AB=0CA8Ah)
020A:731B  E8 01DE				call	sub_85			; (74FC)
020A:731E  2E: A1 38A1				mov	ax,cs:data_428		; (020A:38A1=4B3h)
020A:7322  5A					pop	dx
020A:7323  C3					retn
				sub_73		endp

020A:7324  01 87 90DB				add	data_622[bx],ax		; (020A:90DB=3B2Eh)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_84		proc	near
020A:7328  2E: 80 3E 3E64 00			cmp	byte ptr cs:[3E64h],0	; (020A:3E64=47h)
020A:732E  74 03				je	loc_1071		; Jump if equal
020A:7330  E9 01C5				jmp	loc_1088		; (74F8)
020A:7333			loc_1071:
020A:7333  2E: FE 06 3E64			inc	byte ptr cs:[3E64h]	; (020A:3E64=47h)
020A:7338  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:733E  75 03				jne	loc_1072		; Jump if not equal
020A:7340  E9 01B5				jmp	loc_1088		; (74F8)
020A:7343			loc_1072:
020A:7343  50					push	ax
020A:7344  53					push	bx
020A:7345  51					push	cx
020A:7346  52					push	dx
020A:7347  56					push	si
020A:7348  57					push	di
020A:7349  55					push	bp
020A:734A  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:734F  06					push	es
020A:7350  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:7355  1E					push	ds
020A:7356  E8 FE3B				call	sub_76			; (7194)
020A:7359  E8 FE29				call	sub_74			; (7185)
020A:735C  33 F6				xor	si,si			; Zero register
020A:735E  33 C9				xor	cx,cx			; Zero register
020A:7360  26: 8B 44 04				mov	ax,es:[si+4]
020A:7364  26: 3B 44 02				cmp	ax,es:[si+2]
020A:7368  75 09				jne	loc_1073		; Jump if not equal
020A:736A  2E: C6 06 3E64 00			mov	byte ptr cs:[3E64h],0	; (020A:3E64=47h)
020A:7370  E9 0128				jmp	loc_1085		; (749B)
020A:7373			loc_1073:
020A:7373  26: 8B 04				mov	ax,es:[si]
020A:7376  3D FFFF				cmp	ax,0FFFFh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 250

020A:7379  74 1C				je	loc_1074		; Jump if equal
020A:737B  26: 8B 54 04				mov	dx,es:[si+4]
020A:737F  26: 2B 54 02				sub	dx,es:[si+2]
020A:7383  01 16 790B				add	data_597,dx		; (020A:790B=0C006h)
020A:7387  83 16 790D 00			adc	data_598,0		; (020A:790D=1047h)
020A:738C  83 C6 15				add	si,15h
020A:738F  26: 3B 04				cmp	ax,es:[si]
020A:7392  74 DF				je	loc_1073		; Jump if equal
020A:7394  41					inc	cx
020A:7395  EB DC				jmp	short loc_1073		; (7373)
020A:7397			loc_1074:
020A:7397  89 0E 790F				mov	data_599,cx		; (020A:790F=3E80h)
020A:739B  3A 0E 79DB				cmp	cl,data_608		; (020A:79DB=12h)
020A:739F  77 49				ja	loc_1077		; Jump if above
020A:73A1  33 F6				xor	si,si			; Zero register
020A:73A3  BB 0006				mov	bx,6
020A:73A6			loc_1075:
020A:73A6  26: 8B 04				mov	ax,es:[si]
020A:73A9  3D FFFF				cmp	ax,0FFFFh
020A:73AC  74 39				je	loc_1076		; Jump if equal
020A:73AE  50					push	ax
020A:73AF  8B 97 7912				mov	dx,data_601[bx]		; (020A:7912=4F30h)
020A:73B3  26: 89 54 11				mov	es:[si+11h],dx
020A:73B7  B8 0002				mov	ax,2
020A:73BA  E8 151F				call	sub_94			; (88DC)
020A:73BD  8B 97 7914				mov	dx,data_602[bx]		; (020A:7914=574h)
020A:73C1  26: 89 54 13				mov	es:[si+13h],dx
020A:73C5  B8 0001				mov	ax,1
020A:73C8  E8 1511				call	sub_94			; (88DC)
020A:73CB  8B 97 7916				mov	dx,data_603[bx]		; (020A:7916=6C6h)
020A:73CF  26: 89 54 0F				mov	es:[si+0Fh],dx
020A:73D3  B8 0004				mov	ax,4
020A:73D6  E8 1503				call	sub_94			; (88DC)
020A:73D9  58					pop	ax
020A:73DA  83 C6 15				add	si,15h
020A:73DD  26: 3B 04				cmp	ax,es:[si]
020A:73E0  74 C4				je	loc_1075		; Jump if equal
020A:73E2  83 C3 06				add	bx,6
020A:73E5  EB BF				jmp	short loc_1075		; (73A6)
020A:73E7			loc_1076:
020A:73E7  E9 00B1				jmp	loc_1085		; (749B)
020A:73EA			loc_1077:
020A:73EA  32 FF				xor	bh,bh			; Zero register
020A:73EC  8A 1E 79DB				mov	bl,data_608		; (020A:79DB=12h)
020A:73F0  B8 FFFF				mov	ax,0FFFFh
020A:73F3  F7 E3				mul	bx			; dx:ax = reg * ax
020A:73F5  3B 16 790D				cmp	dx,data_598		; (020A:790D=1047h)
020A:73F9  77 0E				ja	loc_1079		; Jump if above
020A:73FB  72 06				jc	loc_1078		; Jump if carry Set
020A:73FD  3B 06 790B				cmp	ax,data_597		; (020A:790B=0C006h)
020A:7401  77 06				ja	loc_1079		; Jump if above
020A:7403			loc_1078:
020A:7403  B8 FFFF				mov	ax,0FFFFh
020A:7406  EB 10				jmp	short loc_1080		; (7418)
020A:7408  90					nop
020A:7409			loc_1079:
020A:7409  32 FF				xor	bh,bh			; Zero register
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 251

020A:740B  8A 1E 79DB				mov	bl,data_608		; (020A:79DB=12h)
020A:740F  8B 16 790D				mov	dx,data_598		; (020A:790D=1047h)
020A:7413  A1 790B				mov	ax,data_597		; (020A:790B=0C006h)
020A:7416  F7 F3				div	bx			; ax,dx rem=dx:ax/reg
020A:7418			loc_1080:
020A:7418  8B E8				mov	bp,ax
020A:741A  33 C9				xor	cx,cx			; Zero register
020A:741C  33 D2				xor	dx,dx			; Zero register
020A:741E  FE C6				inc	dh
020A:7420  33 F6				xor	si,si			; Zero register
020A:7422  BF 0006				mov	di,6
020A:7425			loc_1081:
020A:7425  26: 8B 1C				mov	bx,es:[si]
020A:7428  83 FB FF				cmp	bx,0FFFFh
020A:742B  74 6E				je	loc_1085		; Jump if equal
020A:742D  26: 8B 44 04				mov	ax,es:[si+4]
020A:7431  26: 2B 44 02				sub	ax,es:[si+2]
020A:7435  03 C8				add	cx,ax
020A:7437  9C					pushf				; Push flags
020A:7438  8B 85 7912				mov	ax,data_601[di]		; (020A:7912=4F30h)
020A:743C  26: 89 44 11				mov	es:[si+11h],ax
020A:7440  50					push	ax
020A:7441  52					push	dx
020A:7442  8B D0				mov	dx,ax
020A:7444  B8 0002				mov	ax,2
020A:7447  E8 1492				call	sub_94			; (88DC)
020A:744A  5A					pop	dx
020A:744B  58					pop	ax
020A:744C  8B 85 7914				mov	ax,data_602[di]		; (020A:7914=574h)
020A:7450  26: 89 44 13				mov	es:[si+13h],ax
020A:7454  50					push	ax
020A:7455  52					push	dx
020A:7456  8B D0				mov	dx,ax
020A:7458  B8 0001				mov	ax,1
020A:745B  E8 147E				call	sub_94			; (88DC)
020A:745E  5A					pop	dx
020A:745F  58					pop	ax
020A:7460  8B 85 7916				mov	ax,data_603[di]		; (020A:7916=6C6h)
020A:7464  26: 89 44 0F				mov	es:[si+0Fh],ax
020A:7468  50					push	ax
020A:7469  52					push	dx
020A:746A  8B D0				mov	dx,ax
020A:746C  B8 0004				mov	ax,4
020A:746F  E8 146A				call	sub_94			; (88DC)
020A:7472  5A					pop	dx
020A:7473  58					pop	ax
020A:7474  83 C6 15				add	si,15h
020A:7477  26: 3B 1C				cmp	bx,es:[si]
020A:747A  75 09				jne	loc_1082		; Jump if not equal
020A:747C  9D					popf				; Pop flags
020A:747D  73 1A				jnc	loc_1084		; Jump if carry=0
020A:747F  B9 FFFF				mov	cx,0FFFFh
020A:7482  EB 15				jmp	short loc_1084		; (7499)
020A:7484  90					nop
020A:7485			loc_1082:
020A:7485  9D					popf				; Pop flags
020A:7486  72 04				jc	loc_1083		; Jump if carry Set
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 252

020A:7488  3B CD				cmp	cx,bp
020A:748A  72 0D				jb	loc_1084		; Jump if below
020A:748C			loc_1083:
020A:748C  33 C9				xor	cx,cx			; Zero register
020A:748E  3A 36 79DB				cmp	dh,data_608		; (020A:79DB=12h)
020A:7492  73 05				jae	loc_1084		; Jump if above or =
020A:7494  83 C7 06				add	di,6
020A:7497  FE C6				inc	dh
020A:7499			loc_1084:
020A:7499  EB 8A				jmp	short loc_1081		; (7425)
020A:749B			loc_1085:
020A:749B  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:74A0  9C					pushf				; Push flags
020A:74A1  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:74A6  5A					pop	dx
020A:74A7  8E DA				mov	ds,dx
020A:74A9  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:74AE  5A					pop	dx
020A:74AF  75 0A				jnz	loc_1086		; Jump if not zero
020A:74B1  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:74B6  74 03				je	loc_1086		; Jump if equal
020A:74B8  E8 0041				call	sub_85			; (74FC)
020A:74BB			loc_1086:
020A:74BB  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:74C0  9D					popf				; Pop flags
020A:74C1  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:74C6  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:74CB  9C					pushf				; Push flags
020A:74CC  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:74D1  5A					pop	dx
020A:74D2  8E C2				mov	es,dx
020A:74D4  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:74D9  5A					pop	dx
020A:74DA  75 0A				jnz	loc_1087		; Jump if not zero
020A:74DC  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:74E1  74 03				je	loc_1087		; Jump if equal
020A:74E3  E8 0016				call	sub_85			; (74FC)
020A:74E6			loc_1087:
020A:74E6  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:74EB  9D					popf				; Pop flags
020A:74EC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:74F1  5D					pop	bp
020A:74F2  5F					pop	di
020A:74F3  5E					pop	si
020A:74F4  5A					pop	dx
020A:74F5  59					pop	cx
020A:74F6  5B					pop	bx
020A:74F7  58					pop	ax
020A:74F8			loc_1088:
020A:74F8  C3					retn
				sub_84		endp

020A:74F9  87 DB				xchg	bx,bx
020A:74FB  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 253

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_85		proc	near
020A:74FC  2E: 39 16 38A3			cmp	cs:data_429,dx		; (020A:38A3=0C88Ah)
020A:7501  74 19				je	loc_1089		; Jump if equal
020A:7503  2E: 89 16 38A3			mov	cs:data_429,dx		; (020A:38A3=0C88Ah)
020A:7508  50					push	ax
020A:7509  B4 48				mov	ah,48h
020A:750B  CD 67				int	67h			; EMS Memory        ah=func 48h
										;  restore map context,dx=handle
020A:750D  80 FC 00				cmp	ah,0
020A:7510  75 0B				jne	loc_1090		; Jump if not equal
020A:7512  B4 47				mov	ah,47h
020A:7514  CD 67				int	67h			; EMS Memory        ah=func 47h
										;  save map context, dx=handle
020A:7516  80 FC 00				cmp	ah,0
020A:7519  75 02				jne	loc_1090		; Jump if not equal
020A:751B  58					pop	ax
020A:751C			loc_1089:
020A:751C  C3					retn
020A:751D			loc_1090:
020A:751D  E8 FC65				call	sub_74			; (7185)
020A:7520  BD 2629				mov	bp,2629h
020A:7523  32 C0				xor	al,al			; Zero register
020A:7525  86 C4				xchg	al,ah
020A:7527  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:7527  9A					db	9Ah
020A:7528  021C 1510				dw	21Ch, 1510h
020A:752C  E9 F7DD				jmp	loc_1000		; (6D0C)
				sub_85		endp

020A:752F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_86		proc	near
020A:7530  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:7536  75 0A				jne	loc_1091		; Jump if not equal
020A:7538  50					push	ax
020A:7539  B8 4E14				mov	ax,4E14h
020A:753C  8E C0				mov	es,ax
020A:753E  58					pop	ax
020A:753F  EB 60				jmp	short loc_1100		; (75A1)
020A:7541  90					nop
020A:7542			loc_1091:
020A:7542  E8 FC58				call	sub_78			; (719D)
020A:7545  26: 3B 1E 344A			cmp	bx,word ptr es:[344Ah]	; (4E14:344A=0FFFFh)
020A:754A  75 1C				jne	loc_1093		; Jump if not equal
020A:754C  2E: 83 3E 38B5 FF			cmp	cs:data_438,0FFFFh	; (020A:38B5=0CB22h)
020A:7552  74 14				je	loc_1093		; Jump if equal
020A:7554  52					push	dx
020A:7555  2E: 8B 16 38B5			mov	dx,cs:data_438		; (020A:38B5=0CB22h)
020A:755A  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:755F  74 03				je	loc_1092		; Jump if equal
020A:7561  E8 FF98				call	sub_85			; (74FC)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 254

020A:7564			loc_1092:
020A:7564  5A					pop	dx
020A:7565  EB 35				jmp	short loc_1099		; (759C)
020A:7567  90					nop
020A:7568			loc_1093:
020A:7568  E8 FC29				call	sub_76			; (7194)
020A:756B  56					push	si
020A:756C  33 F6				xor	si,si			; Zero register
020A:756E			loc_1094:
020A:756E  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:7572  75 07				jne	loc_1095		; Jump if not equal
020A:7574  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:7579  74 0C				je	loc_1096		; Jump if equal
020A:757B			loc_1095:
020A:757B  26: 39 1C				cmp	es:[si],bx
020A:757E  77 07				ja	loc_1096		; Jump if above
020A:7580  74 10				jz	loc_1098		; Jump if zero
020A:7582  83 C6 15				add	si,15h
020A:7585  EB E7				jmp	short loc_1094		; (756E)
020A:7587			loc_1096:
020A:7587  83 FE 15				cmp	si,15h
020A:758A  73 03				jae	loc_1097		; Jump if above or =
020A:758C  BE 0015				mov	si,15h
020A:758F			loc_1097:
020A:758F  83 EE 15				sub	si,15h
020A:7592			loc_1098:
020A:7592  52					push	dx
020A:7593  26: 8B 54 11				mov	dx,es:[si+11h]
020A:7597  E8 FF62				call	sub_85			; (74FC)
020A:759A  5A					pop	dx
020A:759B  5E					pop	si
020A:759C			loc_1099:
020A:759C  2E: 8E 06 38A1			mov	es,cs:data_428		; (020A:38A1=4B3h)
020A:75A1			loc_1100:
020A:75A1  C3					retn
				sub_86		endp

020A:75A2  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_87		proc	near
020A:75A4  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:75AA  75 0A				jne	loc_1101		; Jump if not equal
020A:75AC  50					push	ax
020A:75AD  B8 5E14				mov	ax,5E14h
020A:75B0  8E C0				mov	es,ax
020A:75B2  58					pop	ax
020A:75B3  EB 60				jmp	short loc_1110		; (7615)
020A:75B5  90					nop
020A:75B6			loc_1101:
020A:75B6  E8 FBE4				call	sub_78			; (719D)
020A:75B9  26: 3B 1E 344A			cmp	bx,word ptr es:[344Ah]	; (5E14:344A=140h)
020A:75BE  75 1C				jne	loc_1103		; Jump if not equal
020A:75C0  2E: 83 3E 38B7 FF			cmp	cs:data_439,0FFFFh	; (020A:38B7=0CA0Ah)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 255

020A:75C6  74 14				je	loc_1103		; Jump if equal
020A:75C8  52					push	dx
020A:75C9  2E: 8B 16 38B7			mov	dx,cs:data_439		; (020A:38B7=0CA0Ah)
020A:75CE  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:75D3  74 03				je	loc_1102		; Jump if equal
020A:75D5  E8 FF24				call	sub_85			; (74FC)
020A:75D8			loc_1102:
020A:75D8  5A					pop	dx
020A:75D9  EB 35				jmp	short loc_1109		; (7610)
020A:75DB  90					nop
020A:75DC			loc_1103:
020A:75DC  E8 FBB5				call	sub_76			; (7194)
020A:75DF  56					push	si
020A:75E0  33 F6				xor	si,si			; Zero register
020A:75E2			loc_1104:
020A:75E2  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:75E6  75 07				jne	loc_1105		; Jump if not equal
020A:75E8  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:75ED  74 0C				je	loc_1106		; Jump if equal
020A:75EF			loc_1105:
020A:75EF  26: 39 1C				cmp	es:[si],bx
020A:75F2  77 07				ja	loc_1106		; Jump if above
020A:75F4  74 10				jz	loc_1108		; Jump if zero
020A:75F6  83 C6 15				add	si,15h
020A:75F9  EB E7				jmp	short loc_1104		; (75E2)
020A:75FB			loc_1106:
020A:75FB  83 FE 15				cmp	si,15h
020A:75FE  73 03				jae	loc_1107		; Jump if above or =
020A:7600  BE 0015				mov	si,15h
020A:7603			loc_1107:
020A:7603  83 EE 15				sub	si,15h
020A:7606			loc_1108:
020A:7606  52					push	dx
020A:7607  26: 8B 54 13				mov	dx,es:[si+13h]
020A:760B  E8 FEEE				call	sub_85			; (74FC)
020A:760E  5A					pop	dx
020A:760F  5E					pop	si
020A:7610			loc_1109:
020A:7610  2E: 8E 06 38A1			mov	es,cs:data_428		; (020A:38A1=4B3h)
020A:7615			loc_1110:
020A:7615  C3					retn
				sub_87		endp

020A:7616  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_88		proc	near
020A:7618  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:761E  75 0A				jne	loc_1111		; Jump if not equal
020A:7620  50					push	ax
020A:7621  B8 3E14				mov	ax,3E14h
020A:7624  8E C0				mov	es,ax
020A:7626  58					pop	ax
020A:7627  EB 60				jmp	short loc_1120		; (7689)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 256

020A:7629  90					nop
020A:762A			loc_1111:
020A:762A  E8 FB70				call	sub_78			; (719D)
020A:762D  26: 3B 1E 344A			cmp	bx,word ptr es:[344Ah]	; (3E14:344A=0FFFFh)
020A:7632  75 1C				jne	loc_1113		; Jump if not equal
020A:7634  2E: 83 3E 38B9 FF			cmp	cs:data_440,0FFFFh	; (020A:38B9=6F7h)
020A:763A  74			data_596	db	74h
020A:763B  14 52				adc	al,52h			; 'R'
020A:763D  2E: 8B 16 38B9			mov	dx,cs:data_440		; (020A:38B9=6F7h)
020A:7642  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:7647  74 03				je	loc_1112		; Jump if equal
020A:7649  E8 FEB0				call	sub_85			; (74FC)
020A:764C			loc_1112:
020A:764C  5A					pop	dx
020A:764D  EB 35				jmp	short loc_1119		; (7684)
020A:764F  90					nop
020A:7650			loc_1113:
020A:7650  E8 FB41				call	sub_76			; (7194)
020A:7653  56					push	si
020A:7654  33 F6				xor	si,si			; Zero register
020A:7656			loc_1114:
020A:7656  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:765A  75 07				jne	loc_1115		; Jump if not equal
020A:765C  26: 83 7C 02 FF			cmp	word ptr es:[si+2],0FFFFh
020A:7661  74 0C				je	loc_1116		; Jump if equal
020A:7663			loc_1115:
020A:7663  26: 39 1C				cmp	es:[si],bx
020A:7666  77 07				ja	loc_1116		; Jump if above
020A:7668  74 10				jz	loc_1118		; Jump if zero
020A:766A  83 C6 15				add	si,15h
020A:766D  EB E7				jmp	short loc_1114		; (7656)
020A:766F			loc_1116:
020A:766F  83 FE 15				cmp	si,15h
020A:7672  73 03				jae	loc_1117		; Jump if above or =
020A:7674  BE 0015				mov	si,15h
020A:7677			loc_1117:
020A:7677  83 EE 15				sub	si,15h
020A:767A			loc_1118:
020A:767A  52					push	dx
020A:767B  26: 8B 54 0F				mov	dx,es:[si+0Fh]
020A:767F  E8 FE7A				call	sub_85			; (74FC)
020A:7682  5A					pop	dx
020A:7683  5E					pop	si
020A:7684			loc_1119:
020A:7684  2E: 8E 06 38A1			mov	es,cs:data_428		; (020A:38A1=4B3h)
020A:7689			loc_1120:
020A:7689  C3					retn
				sub_88		endp

							                        ;* No entry point to code
020A:768A  87 DB				xchg	bx,bx
020A:768C  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:7692  75 0A				jne	loc_1121		; Jump if not equal
020A:7694  50					push	ax
020A:7695  B8 4E14				mov	ax,4E14h
020A:7698  8E D8				mov	ds,ax
020A:769A  58					pop	ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 257

020A:769B  EB 5B				jmp	short loc_1130		; (76F8)
020A:769D  90					nop
020A:769E			loc_1121:
020A:769E  E8 FAE4				call	sub_74			; (7185)
020A:76A1  3B 1E 344A				cmp	bx,word ptr ds:[344Ah]	; (4E14:344A=0FFFFh)
020A:76A5  75 1C				jne	loc_1123		; Jump if not equal
020A:76A7  2E: 83 3E 38B5 FF			cmp	cs:data_438,0FFFFh	; (020A:38B5=0CB22h)
020A:76AD  74 14				je	loc_1123		; Jump if equal
020A:76AF  52					push	dx
020A:76B0  2E: 8B 16 38B5			mov	dx,cs:data_438		; (020A:38B5=0CB22h)
020A:76B5  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:76BA  74 03				je	loc_1122		; Jump if equal
020A:76BC  E8 FE3D				call	sub_85			; (74FC)
020A:76BF			loc_1122:
020A:76BF  5A					pop	dx
020A:76C0  EB 31				jmp	short loc_1129		; (76F3)
020A:76C2  90					nop
020A:76C3			loc_1123:
020A:76C3  E8 FAB6				call	sub_73			; (717C)
020A:76C6  56					push	si
020A:76C7  33 F6				xor	si,si			; Zero register
020A:76C9			loc_1124:
020A:76C9  83 3C FF				cmp	word ptr [si],0FFFFh
020A:76CC  75 06				jne	loc_1125		; Jump if not equal
020A:76CE  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:76D2  74 0B				je	loc_1126		; Jump if equal
020A:76D4			loc_1125:
020A:76D4  39 1C				cmp	[si],bx
020A:76D6  77 07				ja	loc_1126		; Jump if above
020A:76D8  74 10				jz	loc_1128		; Jump if zero
020A:76DA  83 C6 15				add	si,15h
020A:76DD  EB EA				jmp	short loc_1124		; (76C9)
020A:76DF			loc_1126:
020A:76DF  83 FE 15				cmp	si,15h
020A:76E2  73 03				jae	loc_1127		; Jump if above or =
020A:76E4  BE 0015				mov	si,15h
020A:76E7			loc_1127:
020A:76E7  83 EE 15				sub	si,15h
020A:76EA			loc_1128:
020A:76EA  52					push	dx
020A:76EB  8B 54 11				mov	dx,[si+11h]
020A:76EE  E8 FE0B				call	sub_85			; (74FC)
020A:76F1  5A					pop	dx
020A:76F2  5E					pop	si
020A:76F3			loc_1129:
020A:76F3  2E: 8E 06 38A1			mov	es,cs:data_428		; (020A:38A1=4B3h)
020A:76F8			loc_1130:
020A:76F8  C3					retn
							                        ;* No entry point to code
020A:76F9  87 DB				xchg	bx,bx
020A:76FB  90					nop
020A:76FC  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:7702  75 0A				jne	loc_1131		; Jump if not equal
020A:7704  50					push	ax
020A:7705  B8 5E14				mov	ax,5E14h
020A:7708  8E D8				mov	ds,ax
020A:770A  58					pop	ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 258

020A:770B  EB 5B				jmp	short loc_1140		; (7768)
020A:770D  90					nop
020A:770E			loc_1131:
020A:770E  E8 FA74				call	sub_74			; (7185)
020A:7711  3B 1E 344A				cmp	bx,word ptr ds:[344Ah]	; (5E14:344A=140h)
020A:7715  75 1C				jne	loc_1133		; Jump if not equal
020A:7717  2E: 83 3E 38B7 FF			cmp	cs:data_439,0FFFFh	; (020A:38B7=0CA0Ah)
020A:771D  74 14				je	loc_1133		; Jump if equal
020A:771F  52					push	dx
020A:7720  2E: 8B 16 38B7			mov	dx,cs:data_439		; (020A:38B7=0CA0Ah)
020A:7725  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:772A  74 03				je	loc_1132		; Jump if equal
020A:772C  E8 FDCD				call	sub_85			; (74FC)
020A:772F			loc_1132:
020A:772F  5A					pop	dx
020A:7730  EB 31				jmp	short loc_1139		; (7763)
020A:7732  90					nop
020A:7733			loc_1133:
020A:7733  E8 FA46				call	sub_73			; (717C)
020A:7736  56					push	si
020A:7737  33 F6				xor	si,si			; Zero register
020A:7739			loc_1134:
020A:7739  83 3C FF				cmp	word ptr [si],0FFFFh
020A:773C  75 06				jne	loc_1135		; Jump if not equal
020A:773E  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:7742  74 0B				je	loc_1136		; Jump if equal
020A:7744			loc_1135:
020A:7744  39 1C				cmp	[si],bx
020A:7746  77 07				ja	loc_1136		; Jump if above
020A:7748  74 10				jz	loc_1138		; Jump if zero
020A:774A  83 C6 15				add	si,15h
020A:774D  EB EA				jmp	short loc_1134		; (7739)
020A:774F			loc_1136:
020A:774F  83 FE 15				cmp	si,15h
020A:7752  73 03				jae	loc_1137		; Jump if above or =
020A:7754  BE 0015				mov	si,15h
020A:7757			loc_1137:
020A:7757  83 EE 15				sub	si,15h
020A:775A			loc_1138:
020A:775A  52					push	dx
020A:775B  8B 54 13				mov	dx,[si+13h]
020A:775E  E8 FD9B				call	sub_85			; (74FC)
020A:7761  5A					pop	dx
020A:7762  5E					pop	si
020A:7763			loc_1139:
020A:7763  2E: 8E 06 38A1			mov	es,cs:data_428		; (020A:38A1=4B3h)
020A:7768			loc_1140:
020A:7768  C3					retn
							                        ;* No entry point to code
020A:7769  87 DB				xchg	bx,bx
020A:776B  90					nop
020A:776C  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:7772  75 0A				jne	loc_1141		; Jump if not equal
020A:7774  50					push	ax
020A:7775  B8 3E14				mov	ax,3E14h
020A:7778  8E D8				mov	ds,ax
020A:777A  58					pop	ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 259

020A:777B  EB 5B				jmp	short loc_1150		; (77D8)
020A:777D  90					nop
020A:777E			loc_1141:
020A:777E  E8 FA04				call	sub_74			; (7185)
020A:7781  3B 1E 344A				cmp	bx,word ptr ds:[344Ah]	; (3E14:344A=0FFFFh)
020A:7785  75 1C				jne	loc_1143		; Jump if not equal
020A:7787  2E: 83 3E 38B9 FF			cmp	cs:data_440,0FFFFh	; (020A:38B9=6F7h)
020A:778D  74 14				je	loc_1143		; Jump if equal
020A:778F  52					push	dx
020A:7790  2E: 8B 16 38B9			mov	dx,cs:data_440		; (020A:38B9=6F7h)
020A:7795  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:779A  74 03				je	loc_1142		; Jump if equal
020A:779C  E8 FD5D				call	sub_85			; (74FC)
020A:779F			loc_1142:
020A:779F  5A					pop	dx
020A:77A0  EB 31				jmp	short loc_1149		; (77D3)
020A:77A2  90					nop
020A:77A3			loc_1143:
020A:77A3  E8 F9D6				call	sub_73			; (717C)
020A:77A6  56					push	si
020A:77A7  33 F6				xor	si,si			; Zero register
020A:77A9			loc_1144:
020A:77A9  83 3C FF				cmp	word ptr [si],0FFFFh
020A:77AC  75 06				jne	loc_1145		; Jump if not equal
020A:77AE  83 7C 02 FF				cmp	word ptr [si+2],0FFFFh
020A:77B2  74 0B				je	loc_1146		; Jump if equal
020A:77B4			loc_1145:
020A:77B4  39 1C				cmp	[si],bx
020A:77B6  77 07				ja	loc_1146		; Jump if above
020A:77B8  74 10				jz	loc_1148		; Jump if zero
020A:77BA  83 C6 15				add	si,15h
020A:77BD  EB EA				jmp	short loc_1144		; (77A9)
020A:77BF			loc_1146:
020A:77BF  83 FE 15				cmp	si,15h
020A:77C2  73 03				jae	loc_1147		; Jump if above or =
020A:77C4  BE 0015				mov	si,15h
020A:77C7			loc_1147:
020A:77C7  83 EE 15				sub	si,15h
020A:77CA			loc_1148:
020A:77CA  52					push	dx
020A:77CB  8B 54 0F				mov	dx,[si+0Fh]
020A:77CE  E8 FD2B				call	sub_85			; (74FC)
020A:77D1  5A					pop	dx
020A:77D2  5E					pop	si
020A:77D3			loc_1149:
020A:77D3  2E: 8E 06 38A1			mov	es,cs:data_428		; (020A:38A1=4B3h)
020A:77D8			loc_1150:
020A:77D8  C3					retn
020A:77D9  87 DB				xchg	bx,bx
020A:77DB  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_89		proc	near
020A:77DC  FF D3				call	bx			;*
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 260

020A:77DE  CB					retf
				sub_89		endp

							                        ;* No entry point to code
020A:77DF  90					nop
020A:77E0  FF D5				call	bp			;*
020A:77E2  CB					retf
							                        ;* No entry point to code
020A:77E3  90					nop
020A:77E4  2E: A1 38A3				mov	ax,cs:data_429		; (020A:38A3=0C88Ah)
020A:77E8  CB					retf
							                        ;* No entry point to code
020A:77E9  87 DB				xchg	bx,bx
020A:77EB  90					nop
020A:77EC  9C					pushf				; Push flags
020A:77ED  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:77F2  75 0C				jne	loc_1151		; Jump if not equal
020A:77F4  2E: 3B 06 38A3			cmp	ax,cs:data_429		; (020A:38A3=0C88Ah)
020A:77F9  74 05				je	loc_1151		; Jump if equal
020A:77FB  8B D0				mov	dx,ax
020A:77FD  E8 FCFC				call	sub_85			; (74FC)
020A:7800			loc_1151:
020A:7800  9D					popf				; Pop flags
020A:7801  CB					retf
							                        ;* No entry point to code
020A:7802  87 DB				xchg	bx,bx
020A:7804  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:780A  74 1F				je	loc_1152		; Jump if equal
020A:780C  E8 FB19				call	sub_84			; (7328)
020A:780F  2E: 80 3E 3E64 00			cmp	byte ptr cs:[3E64h],0	; (020A:3E64=47h)
020A:7815  75 14				jne	loc_1152		; Jump if not equal
020A:7817  E8 D2DA				call	sub_34			; (4AF4)
020A:781A  E8 FB0B				call	sub_84			; (7328)
020A:781D  2E: 80 3E 3E64 00			cmp	byte ptr cs:[3E64h],0	; (020A:3E64=47h)
020A:7823  75 06				jne	loc_1152		; Jump if not equal
020A:7825  BB 0002				mov	bx,2
020A:7828  E9 F418				jmp	loc_994			; (6C43)
020A:782B			loc_1152:
020A:782B  CB					retf
							                        ;* No entry point to code
020A:782C  53					push	bx
020A:782D  51					push	cx
020A:782E  52					push	dx
020A:782F  25 3FFF				and	ax,3FFFh
020A:7832  8B F8				mov	di,ax
020A:7834  57					push	di
020A:7835  B1 0C				mov	cl,0Ch
020A:7837  D3 EF				shr	di,cl			; Shift w/zeros fill
020A:7839  D1 E7				shl	di,1			; Shift w/zeros fill
020A:783B  03 3E 79DD				add	di,data_610		; (020A:79DD=0FA80h)
020A:783F  8B 95 7912				mov	dx,data_601[di]		; (020A:7912=4F30h)
020A:7843  53					push	bx
020A:7844  BB 403C				mov	bx,403Ch
020A:7847  0E E8 FF91				callf	sub_89			; (77DC)
020A:784B  5B					pop	bx
020A:784C  5F					pop	di
020A:784D  81 E7 0FFF				and	di,0FFFh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 261

020A:7851  B1 04				mov	cl,4
020A:7853  D3 E7				shl	di,cl			; Shift w/zeros fill
020A:7855  5A					pop	dx
020A:7856  59					pop	cx
020A:7857  5B					pop	bx
020A:7858  2E: 8E 06 38A1			mov	es,cs:data_428		; (020A:38A1=4B3h)
020A:785D  C3					retn
020A:785E  00 00				add	[bx+si],al

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_90		proc	near
020A:7860  51					push	cx
020A:7861  52					push	dx
020A:7862  57					push	di
020A:7863  55					push	bp
020A:7864  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:7869  06					push	es
020A:786A  80 3E 4D49 01			cmp	data_482,1		; (020A:4D49=0B1h)
020A:786F  74 12				je	loc_1154		; Jump if equal
020A:7871  F7 06 4E22 0020			test	data_502,20h		; (020A:4E22=348Ah)
020A:7877  75 07				jnz	loc_1153		; Jump if not zero
020A:7879  80 3E 4D49 02			cmp	data_482,2		; (020A:4D49=0B1h)
020A:787E  75 03				jne	loc_1154		; Jump if not equal
020A:7880			loc_1153:
020A:7880  E9 06A9				jmp	loc_1244		; (7F2C)
020A:7883			loc_1154:
020A:7883  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:7886  A3 4D45				mov	data_480,ax		; (020A:4D45=7D26h)
020A:7889  A0 16AB				mov	al,data_164		; (020A:16AB=41h)
020A:788C  A2 4D44				mov	data_479,al		; (020A:4D44=8Ah)
020A:788F  C6 06 16AB 00			mov	data_164,0		; (020A:16AB=41h)
020A:7894  80 3E 309E 4F			cmp	data_313,4Fh		; (020A:309E=55h) 'O'
020A:7899  74 6A				je	loc_1157		; Jump if equal
020A:789B  53					push	bx
020A:789C  52					push	dx
020A:789D  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:78A2  06					push	es
020A:78A3  E8 F8F7				call	sub_78			; (719D)
020A:78A6  C6 06 47C3 00			mov	byte ptr ds:[47C3h],0	; (020A:47C3=12h)
020A:78AB  A1 344C				mov	ax,data_349		; (020A:344C=5453h)
020A:78AE  8B 1E 344A				mov	bx,data_348		; (020A:344A=414Ch)
020A:78B2  BA 0020				mov	dx,20h
020A:78B5  E8 E714				call	sub_63			; (5FCC)
020A:78B8  83 F9 1D				cmp	cx,1Dh
020A:78BB  73 1B				jae	loc_1155		; Jump if above or =
020A:78BD  41					inc	cx
020A:78BE  80 E1 1F				and	cl,1Fh
020A:78C1  88 0E 47C3				mov	byte ptr ds:[47C3h],cl	; (020A:47C3=12h)
020A:78C5  56					push	si
020A:78C6  89 1D				mov	[di],bx
020A:78C8  89 45 02				mov	[di+2],ax
020A:78CB  B9 0028				mov	cx,28h
020A:78CE  83 C7 04				add	di,4
020A:78D1  BE 35FA				mov	si,35FAh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 262

020A:78D4  FC					cld				; Clear direction
020A:78D5  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:78D7  5E					pop	si
020A:78D8			loc_1155:
020A:78D8  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:78DD  9C					pushf				; Push flags
020A:78DE  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:78E3  5A					pop	dx
020A:78E4  8E C2				mov	es,dx
020A:78E6  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:78EB  5A					pop	dx
020A:78EC  75 0A				jnz	loc_1156		; Jump if not zero
020A:78EE  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:78F3  74 03				je	loc_1156		; Jump if equal
020A:78F5  E8 FC04				call	sub_85			; (74FC)
020A:78F8			loc_1156:
020A:78F8  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:78FD  9D					popf				; Pop flags
020A:78FE  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7903  5A					pop	dx
020A:7904  5B					pop	bx
020A:7905			loc_1157:
020A:7905  C6 06 47BF 00			mov	data_472,0		; (020A:47BF=26h)
020A:790A  C6 06 47C0 10			mov	data_473,10h		; (020A:47C0=3Bh)
020A:790F  3E80			data_599	dw	3E80h
020A:7911  9E			data_600	db	9Eh
020A:7912  4F30			data_601	dw	4F30h			; Data table (indexed access)
020A:7914  0574			data_602	dw	574h			; Data table (indexed access)
020A:7916  06C6			data_603	dw	6C6h			; Data table (indexed access)
020A:7918  47C0			data_604	dw	47C0h
020A:791A  F612			data_605	dw	0F612h
020A:791C  EE06			data_606	dw	0EE06h
020A:791E  35 7402				xor	ax,7402h
020A:7921  0A 80 C00E				or	al,byte ptr ds:[0C00Eh][bx+si]	; (020A:C00E=30h)
020A:7925  47					inc	di
020A:7926  08 B7 E920				or	byte ptr ds:[0E920h][bx],dh	; (020A:E920=75h)
020A:792A  12 01				adc	al,[bx+di]
020A:792C  F6 C7 10				test	bh,10h
020A:792F  74 05				jz	loc_1158		; Jump if zero
020A:7931  80 0E 47C0 01			or	data_473,1		; (020A:47C0=3Bh)
020A:7936			loc_1158:
020A:7936  33 FF				xor	di,di			; Zero register
020A:7938  26: 8A 44 01				mov	al,es:[si+1]
020A:793C  24 C7				and	al,0C7h
020A:793E  3C 06				cmp	al,6
020A:7940  75 03				jne	loc_1159		; Jump if not equal
020A:7942  E9 0098				jmp	loc_1172		; (79DD)
020A:7945			loc_1159:
020A:7945  24 07				and	al,7
020A:7947  A8 04				test	al,4
020A:7949  75 30				jnz	loc_1163		; Jump if not zero
020A:794B  A8 02				test	al,2
020A:794D  75 16				jnz	loc_1161		; Jump if not zero
020A:794F  F7 06 4E22 0010			test	data_502,10h		; (020A:4E22=348Ah)
020A:7955  75 08				jnz	loc_1160		; Jump if not zero
020A:7957  81 3E 35FE 0180			cmp	word ptr ds:[35FEh],180h	; (020A:35FE=0B000h)
020A:795D  72 20				jb	loc_1164		; Jump if below
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 263

020A:795F			loc_1160:
020A:795F  8B 3E 35FE				mov	di,word ptr ds:[35FEh]	; (020A:35FE=0B000h)
020A:7963  EB 1A				jmp	short loc_1164		; (797F)
020A:7965			loc_1161:
020A:7965  F7 06 4E22 0010			test	data_502,10h		; (020A:4E22=348Ah)
020A:796B  75 08				jnz	loc_1162		; Jump if not zero
020A:796D  81 3E 3612 0180			cmp	word ptr ds:[3612h],180h	; (020A:3612=38BFh)
020A:7973  72 0A				jb	loc_1164		; Jump if below
020A:7975			loc_1162:
020A:7975  8B 3E 3612				mov	di,word ptr ds:[3612h]	; (020A:3612=38BFh)
020A:7979  EB 04				jmp	short loc_1164		; (797F)
020A:797B			loc_1163:
020A:797B  3C 06				cmp	al,6
020A:797D  73 30				jae	loc_1168		; Jump if above or =
020A:797F			loc_1164:
020A:797F  A8 01				test	al,1
020A:7981  74 16				jz	loc_1166		; Jump if zero
020A:7983  F7 06 4E22 0010			test	data_502,10h		; (020A:4E22=348Ah)
020A:7989  75 08				jnz	loc_1165		; Jump if not zero
020A:798B  81 3E 360E 0180			cmp	data_416,180h		; (020A:360E=0BEAAh)
020A:7991  72 4A				jb	loc_1172		; Jump if below
020A:7993			loc_1165:
020A:7993  03 3E 360E				add	di,data_416		; (020A:360E=0BEAAh)
020A:7997  EB 44				jmp	short loc_1172		; (79DD)
020A:7999			loc_1166:
020A:7999  F7 06 4E22 0010			test	data_502,10h		; (020A:4E22=348Ah)
020A:799F  75 08				jnz	loc_1167		; Jump if not zero
020A:79A1  81 3E 360A 0180			cmp	data_415,180h		; (020A:360A=29B9h)
020A:79A7  72 34				jb	loc_1172		; Jump if below
020A:79A9			loc_1167:
020A:79A9  03 3E 360A				add	di,data_415		; (020A:360A=29B9h)
020A:79AD  EB 2E				jmp	short loc_1172		; (79DD)
020A:79AF			loc_1168:
020A:79AF  A8 01				test	al,1
020A:79B1  74 16				jz	loc_1170		; Jump if zero
020A:79B3  F7 06 4E22 0010			test	data_502,10h		; (020A:4E22=348Ah)
020A:79B9  75 08				jnz	loc_1169		; Jump if not zero
020A:79BB  81 3E 35FE 0180			cmp	word ptr ds:[35FEh],180h	; (020A:35FE=0B000h)
020A:79C1  72 1A				jb	loc_1172		; Jump if below
020A:79C3			loc_1169:
020A:79C3  03 3E 35FE				add	di,word ptr ds:[35FEh]	; (020A:35FE=0B000h)
020A:79C7  EB 14				jmp	short loc_1172		; (79DD)
020A:79C9			loc_1170:
020A:79C9  F7 06 4E22 0010			test	data_502,10h		; (020A:4E22=348Ah)
020A:79CF  75 08				jnz	loc_1171		; Jump if not zero
020A:79D1  81 3E 3612 0180			cmp	word ptr ds:[3612h],180h	; (020A:3612=38BFh)
020A:79D7  72 04				jb	loc_1172		; Jump if below
020A:79D9			loc_1171:
020A:79D9  03 3E 3612				add	di,word ptr ds:[3612h]	; (020A:3612=38BFh)
020A:79DD			loc_1172:
020A:79DD  FA80			data_610	dw	0FA80h
020A:79DF  3D 0274				cmp	ax,274h
020A:79E2  EB 4C				jmp	short loc_1179		; (7A30)
							                        ;* No entry point to code
020A:79E4  F6 C7 10				test	bh,10h
020A:79E7  74 02				jz	loc_1173		; Jump if zero
020A:79E9  EB 5B				jmp	short loc_1182		; (7A46)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 264

020A:79EB			loc_1173:
020A:79EB  83 FF 40				cmp	di,40h
020A:79EE  73 02				jae	loc_1174		; Jump if above or =
020A:79F0  EB 59				jmp	short loc_1183		; (7A4B)
020A:79F2			loc_1174:
020A:79F2  83 FF FC				cmp	di,0FFFCh
020A:79F5  76 02				jbe	loc_1175		; Jump if below or =
020A:79F7  EB 52				jmp	short loc_1183		; (7A4B)
020A:79F9			loc_1175:
020A:79F9  06					push	es
020A:79FA  53					push	bx
020A:79FB  51					push	cx
020A:79FC  8E 06 40E9				mov	es,word ptr ds:[40E9h]	; (020A:40E9=745Ah)
020A:7A00  B9 0019				mov	cx,19h
020A:7A03  26: 8B 05				mov	ax,es:[di]

020A:7A06			locloop_1176:
020A:7A06  8B D8				mov	bx,ax
020A:7A08  26: 2B 5D FE				sub	bx,es:[di-2]
020A:7A0C  73 02				jnc	loc_1177		; Jump if carry=0
020A:7A0E  F7 D3				not	bx
020A:7A10			loc_1177:
020A:7A10  81 FB 0200				cmp	bx,200h
020A:7A14  73 15				jae	loc_1178		; Jump if above or =
020A:7A16  8B DF				mov	bx,di
020A:7A18  4B					dec	bx
020A:7A19  3B 1E 344C				cmp	bx,data_349		; (020A:344C=5453h)
020A:7A1D  74 0C				je	loc_1178		; Jump if equal
020A:7A1F  4B					dec	bx
020A:7A20  3B 1E 344C				cmp	bx,data_349		; (020A:344C=5453h)
020A:7A24  74 05				je	loc_1178		; Jump if equal
020A:7A26  83 EF 02				sub	di,2
020A:7A29  E2 DB				loop	locloop_1176		; Loop if cx > 0

020A:7A2B			loc_1178:
020A:7A2B  07					pop	es
020A:7A2C  5B					pop	bx
020A:7A2D  07					pop	es
020A:7A2E  EB 16				jmp	short loc_1182		; (7A46)
020A:7A30			loc_1179:
020A:7A30  81 FF FE00				cmp	di,0FE00h
020A:7A34  72 0A				jb	loc_1181		; Jump if below
020A:7A36  81 3E 4D45 0080			cmp	data_480,80h		; (020A:4D45=7D26h)
020A:7A3C  72 02				jb	loc_1181		; Jump if below
020A:7A3E			loc_1180:
020A:7A3E  33 FF				xor	di,di			; Zero register
020A:7A40			loc_1181:
020A:7A40  03 3E 4D45				add	di,data_480		; (020A:4D45=7D26h)
020A:7A44  72 F8				jc	loc_1180		; Jump if carry Set
020A:7A46			loc_1182:
020A:7A46  83 FF FC				cmp	di,0FFFCh
020A:7A49  76 03				jbe	loc_1184		; Jump if below or =
020A:7A4B			loc_1183:
020A:7A4B  E9 045B				jmp	loc_1236		; (7EA9)
020A:7A4E			loc_1184:
020A:7A4E  A1 40E9				mov	ax,word ptr ds:[40E9h]	; (020A:40E9=745Ah)
020A:7A51  3D 0050				cmp	ax,50h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 265

020A:7A54  77 03				ja	loc_1185		; Jump if above
020A:7A56  E9 0450				jmp	loc_1236		; (7EA9)
020A:7A59			loc_1185:
020A:7A59  A3 47B8				mov	word ptr ds:[47B8h],ax	; (020A:47B8=26C9h)
020A:7A5C  A0 362B				mov	al,byte ptr ds:[362Bh]	; (020A:362B=7)
020A:7A5F  A2 47BA				mov	data_469,al		; (020A:47BA=83h)
020A:7A62  C6 06 362B 90			mov	byte ptr ds:[362Bh],90h	; (020A:362B=7)
020A:7A67  A1 361A				mov	ax,data_419		; (020A:361A=1E8Bh)
020A:7A6A  A3 47BB				mov	data_470,ax		; (020A:47BB=0FF3Dh)
020A:7A6D  A1 3618				mov	ax,data_418		; (020A:3618=0A4F3h)
020A:7A70  A3 47BD				mov	data_471,ax		; (020A:47BD=0F74h)
020A:7A73  80 3E 4D49 01			cmp	data_482,1		; (020A:4D49=0B1h)
020A:7A78  74 20				je	loc_1187		; Jump if equal
020A:7A7A  F6 C7 10				test	bh,10h
020A:7A7D  75 1B				jnz	loc_1187		; Jump if not zero
020A:7A7F  A1 344A				mov	ax,data_348		; (020A:344A=414Ch)
020A:7A82  3B 06 47B8				cmp	ax,word ptr ds:[47B8h]	; (020A:47B8=26C9h)
020A:7A86  75 12				jne	loc_1187		; Jump if not equal
020A:7A88  8B C7				mov	ax,di
020A:7A8A  2B 06 344C				sub	ax,data_349		; (020A:344C=5453h)
020A:7A8E  73 02				jnc	loc_1186		; Jump if carry=0
020A:7A90  F7 D0				not	ax
020A:7A92			loc_1186:
020A:7A92  3D 1500				cmp	ax,1500h
020A:7A95  72 03				jb	loc_1187		; Jump if below
020A:7A97  E9 040F				jmp	loc_1236		; (7EA9)
020A:7A9A			loc_1187:
020A:7A9A  53					push	bx
020A:7A9B  8B 1E 47B8				mov	bx,word ptr ds:[47B8h]	; (020A:47B8=26C9h)
020A:7A9F  E8 FB02				call	sub_87			; (75A4)
020A:7AA2  8B C3				mov	ax,bx
020A:7AA4  5B					pop	bx
020A:7AA5  E8 04BC				call	sub_91			; (7F64)
020A:7AA8  8B D0				mov	dx,ax
020A:7AAA  53					push	bx
020A:7AAB  8B 1E 47B8				mov	bx,word ptr ds:[47B8h]	; (020A:47B8=26C9h)
020A:7AAF  E8 FA7E				call	sub_86			; (7530)
020A:7AB2  8B C3				mov	ax,bx
020A:7AB4  5B					pop	bx
020A:7AB5  E8 04AC				call	sub_91			; (7F64)
020A:7AB8  3B C2				cmp	ax,dx
020A:7ABA  73 02				jae	loc_1188		; Jump if above or =
020A:7ABC  8B D0				mov	dx,ax
020A:7ABE			loc_1188:
020A:7ABE  53					push	bx
020A:7ABF  8B 1E 47B8				mov	bx,word ptr ds:[47B8h]	; (020A:47B8=26C9h)
020A:7AC3  E8 FB52				call	sub_88			; (7618)
020A:7AC6  8B C3				mov	ax,bx
020A:7AC8  5B					pop	bx
020A:7AC9  E8 0498				call	sub_91			; (7F64)
020A:7ACC  3B C2				cmp	ax,dx
020A:7ACE  73 02				jae	loc_1189		; Jump if above or =
020A:7AD0  8B D0				mov	dx,ax
020A:7AD2			loc_1189:
020A:7AD2  2B D7				sub	dx,di
020A:7AD4  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:7AD6  83 FA 00				cmp	dx,0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 266

020A:7AD9  75 03				jne	loc_1191		; Jump if not equal
020A:7ADB			loc_1190:
020A:7ADB  E9 03CB				jmp	loc_1236		; (7EA9)
020A:7ADE			loc_1191:
020A:7ADE  F6 06 35EE 02			test	data_405,2		; (020A:35EE=2Bh)
020A:7AE3  75 05				jnz	loc_1192		; Jump if not zero
020A:7AE5  F6 C7 10				test	bh,10h
020A:7AE8  74 07				jz	loc_1193		; Jump if zero
020A:7AEA			loc_1192:
020A:7AEA  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:7AEC  83 FA 00				cmp	dx,0
020A:7AEF  74 EA				je	loc_1190		; Jump if equal
020A:7AF1			loc_1193:
020A:7AF1  80 3E 4D4A 00			cmp	data_483,0		; (020A:4D4A=0Ah)
020A:7AF6  75 08				jne	loc_1194		; Jump if not equal
020A:7AF8  83 FA 3C				cmp	dx,3Ch
020A:7AFB  76 03				jbe	loc_1194		; Jump if below or =
020A:7AFD  BA 003C				mov	dx,3Ch
020A:7B00			loc_1194:
020A:7B00  88 16 47C1				mov	data_474,dl		; (020A:47C1=5)
020A:7B04			loc_1195:
020A:7B04  80 3E 4D4A 00			cmp	data_483,0		; (020A:4D4A=0Ah)
020A:7B09  74 03				je	loc_1196		; Jump if equal
020A:7B0B  E9 015B				jmp	loc_1210		; (7C69)
020A:7B0E			loc_1196:
020A:7B0E  F6 C7 10				test	bh,10h
020A:7B11  74 03				jz	loc_1197		; Jump if zero
020A:7B13  E9 0143				jmp	loc_1209		; (7C59)
020A:7B16			loc_1197:
020A:7B16  A1 47B8				mov	ax,word ptr ds:[47B8h]	; (020A:47B8=26C9h)
020A:7B19  3B 06 344A				cmp	ax,data_348		; (020A:344A=414Ch)
020A:7B1D  75 03				jne	loc_1198		; Jump if not equal
020A:7B1F  E9 0087				jmp	loc_1202		; (7BA9)
020A:7B22			loc_1198:
020A:7B22  F6 06 35EE 02			test	data_405,2		; (020A:35EE=2Bh)
020A:7B27  74 44				jz	loc_1200		; Jump if zero
020A:7B29  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:7B2E  06					push	es
020A:7B2F  8E C0				mov	es,ax
020A:7B31  26: 8B 45 02				mov	ax,es:[di+2]
020A:7B35  26: 83 3D 00				cmp	word ptr es:[di],0
020A:7B39  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7B3E  9C					pushf				; Push flags
020A:7B3F  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7B44  5A					pop	dx
020A:7B45  8E C2				mov	es,dx
020A:7B47  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:7B4C  5A					pop	dx
020A:7B4D  75 0A				jnz	loc_1199		; Jump if not zero
020A:7B4F  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:7B54  74 03				je	loc_1199		; Jump if equal
020A:7B56  E8 F9A3				call	sub_85			; (74FC)
020A:7B59			loc_1199:
020A:7B59  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7B5E  9D					popf				; Pop flags
020A:7B5F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7B64  74 64				jz	loc_1203		; Jump if zero
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 267

020A:7B66  0B C0				or	ax,ax			; Zero ?
020A:7B68  75 60				jnz	loc_1203		; Jump if not zero
020A:7B6A  E9 00FC				jmp	loc_1210		; (7C69)
020A:7B6D			loc_1200:
020A:7B6D  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:7B72  06					push	es
020A:7B73  8E C0				mov	es,ax
020A:7B75  26: 83 3D 00				cmp	word ptr es:[di],0
020A:7B79  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7B7E  9C					pushf				; Push flags
020A:7B7F  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7B84  5A					pop	dx
020A:7B85  8E C2				mov	es,dx
020A:7B87  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:7B8C  5A					pop	dx
020A:7B8D  75 0A				jnz	loc_1201		; Jump if not zero
020A:7B8F  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:7B94  74 03				je	loc_1201		; Jump if equal
020A:7B96  E8 F963				call	sub_85			; (74FC)
020A:7B99			loc_1201:
020A:7B99  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7B9E  9D					popf				; Pop flags
020A:7B9F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7BA4  74 24				jz	loc_1203		; Jump if zero
020A:7BA6  E9 00C0				jmp	loc_1210		; (7C69)
020A:7BA9			loc_1202:
020A:7BA9  3B 3E 3058				cmp	di,data_295		; (020A:3058=7B1h)
020A:7BAD  72 1B				jb	loc_1203		; Jump if below
020A:7BAF  3B 3E 305A				cmp	di,data_296		; (020A:305A=83Ch)
020A:7BB3  72 18				jb	loc_1204		; Jump if below
020A:7BB5  80 FA 39				cmp	dl,39h			; '9'
020A:7BB8  74 10				je	loc_1203		; Jump if equal
020A:7BBA  8B 3E 4D45				mov	di,data_480		; (020A:4D45=7D26h)
020A:7BBE  3B 3E 3058				cmp	di,data_295		; (020A:3058=7B1h)
020A:7BC2  72 06				jb	loc_1203		; Jump if below
020A:7BC4  3B 3E 305A				cmp	di,data_296		; (020A:305A=83Ch)
020A:7BC8  76 03				jbe	loc_1204		; Jump if below or =
020A:7BCA			loc_1203:
020A:7BCA  E9 02D0				jmp	loc_1235		; (7E9D)
020A:7BCD			loc_1204:
020A:7BCD  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:7BD2  06					push	es
020A:7BD3  8E C0				mov	es,ax
020A:7BD5  26: 8B 05				mov	ax,es:[di]
020A:7BD8  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7BDD  9C					pushf				; Push flags
020A:7BDE  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7BE3  5A					pop	dx
020A:7BE4  8E C2				mov	es,dx
020A:7BE6  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:7BEB  5A					pop	dx
020A:7BEC  75 0A				jnz	loc_1205		; Jump if not zero
020A:7BEE  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:7BF3  74 03				je	loc_1205		; Jump if equal
020A:7BF5  E8 F904				call	sub_85			; (74FC)
020A:7BF8			loc_1205:
020A:7BF8  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 268

020A:7BFD  9D					popf				; Pop flags
020A:7BFE  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7C03  0B C0				or	ax,ax			; Zero ?
020A:7C05  74 4F				jz	loc_1208		; Jump if zero
020A:7C07  2B C7				sub	ax,di
020A:7C09  73 02				jnc	loc_1206		; Jump if carry=0
020A:7C0B  F7 D0				not	ax
020A:7C0D			loc_1206:
020A:7C0D  3D 4000				cmp	ax,4000h
020A:7C10  73 44				jae	loc_1208		; Jump if above or =
020A:7C12  F6 06 35EE 02			test	data_405,2		; (020A:35EE=2Bh)
020A:7C17  74 50				jz	loc_1210		; Jump if zero
020A:7C19  A1 47B8				mov	ax,word ptr ds:[47B8h]	; (020A:47B8=26C9h)
020A:7C1C  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:7C21  06					push	es
020A:7C22  8E C0				mov	es,ax
020A:7C24  26: 83 7D 02 00			cmp	word ptr es:[di+2],0
020A:7C29  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7C2E  9C					pushf				; Push flags
020A:7C2F  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7C34  5A					pop	dx
020A:7C35  8E C2				mov	es,dx
020A:7C37  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:7C3C  5A					pop	dx
020A:7C3D  75 0A				jnz	loc_1207		; Jump if not zero
020A:7C3F  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:7C44  74 03				je	loc_1207		; Jump if equal
020A:7C46  E8 F8B3				call	sub_85			; (74FC)
020A:7C49			loc_1207:
020A:7C49  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7C4E  9D					popf				; Pop flags
020A:7C4F  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7C54  74 13				jz	loc_1210		; Jump if zero
020A:7C56			loc_1208:
020A:7C56  E9 0244				jmp	loc_1235		; (7E9D)
020A:7C59			loc_1209:
020A:7C59  A1 47B8				mov	ax,word ptr ds:[47B8h]	; (020A:47B8=26C9h)
020A:7C5C  3D FFFF				cmp	ax,0FFFFh
020A:7C5F  74 F5				je	loc_1208		; Jump if equal
020A:7C61  25 FFF0				and	ax,0FFF0h
020A:7C64  3D FBA0				cmp	ax,0FBA0h
020A:7C67  74 ED				je	loc_1208		; Jump if equal
020A:7C69			loc_1210:
020A:7C69  8B C7				mov	ax,di
020A:7C6B  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7C6D  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7C6F  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7C71  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7C73  03 06 47B8				add	ax,word ptr ds:[47B8h]	; (020A:47B8=26C9h)
020A:7C77  72 DD				jc	loc_1208		; Jump if carry Set
020A:7C79  8B C7				mov	ax,di
020A:7C7B  32 DB				xor	bl,bl			; Zero register
020A:7C7D  80 3E 4D49 01			cmp	data_482,1		; (020A:4D49=0B1h)
020A:7C82  74 0B				je	loc_1211		; Jump if equal
020A:7C84  F6 06 35EE 02			test	data_405,2		; (020A:35EE=2Bh)
020A:7C89  75 04				jnz	loc_1211		; Jump if not zero
020A:7C8B  26: 8A 5C 01				mov	bl,es:[si+1]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 269

020A:7C8F			loc_1211:
020A:7C8F  BD 4702				mov	bp,4702h
020A:7C92  E8 0DBB				call	sub_95			; (8A50)
020A:7C95  83 3E 30C9 00			cmp	data_322,0		; (020A:30C9=4C50h)
020A:7C9A  75 03				jne	loc_1212		; Jump if not equal
020A:7C9C  E9 01FE				jmp	loc_1235		; (7E9D)
020A:7C9F			loc_1212:
020A:7C9F  53					push	bx
020A:7CA0  57					push	di
020A:7CA1  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:7CA6  06					push	es
020A:7CA7  8B 1E 40E9				mov	bx,word ptr ds:[40E9h]	; (020A:40E9=745Ah)
020A:7CAB  E8 F882				call	sub_86			; (7530)
020A:7CAE  8B 3E 30C9				mov	di,data_322		; (020A:30C9=4C50h)
020A:7CB2  26: 80 25 C0				and	byte ptr es:[di],0C0h
020A:7CB6  A0 47C0				mov	al,data_473		; (020A:47C0=3Bh)
020A:7CB9  26: 08 05				or	es:[di],al
020A:7CBC  A8 01				test	al,1
020A:7CBE  75 2A				jnz	loc_1214		; Jump if not zero
020A:7CC0  83 EF 04				sub	di,4
020A:7CC3  3B 1E 344A				cmp	bx,data_348		; (020A:344A=414Ch)
020A:7CC7  74 14				je	loc_1213		; Jump if equal
020A:7CC9  26: F7 45 06 03FF			test	word ptr es:[di+6],3FFh
020A:7CCF  75 19				jnz	loc_1214		; Jump if not zero
020A:7CD1  A0 303F				mov	al,data_284		; (020A:303F=0Eh)
020A:7CD4  26: 88 45 06				mov	es:[di+6],al
020A:7CD8  26: 80 4D 07 04			or	byte ptr es:[di+7],4
020A:7CDD			loc_1213:
020A:7CDD  F6 06 35EE 02			test	data_405,2		; (020A:35EE=2Bh)
020A:7CE2  74 06				jz	loc_1214		; Jump if zero
020A:7CE4  26: C7 45 08 0004			mov	word ptr es:[di+8],4
020A:7CEA			loc_1214:
020A:7CEA  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7CEF  9C					pushf				; Push flags
020A:7CF0  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7CF5  5A					pop	dx
020A:7CF6  8E C2				mov	es,dx
020A:7CF8  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:7CFD  5A					pop	dx
020A:7CFE  75 0A				jnz	loc_1215		; Jump if not zero
020A:7D00  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:7D05  74 03				je	loc_1215		; Jump if equal
020A:7D07  E8 F7F2				call	sub_85			; (74FC)
020A:7D0A			loc_1215:
020A:7D0A  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7D0F  9D					popf				; Pop flags
020A:7D10  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7D15  5F					pop	di
020A:7D16  5B					pop	bx
020A:7D17  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:7D1C  06					push	es
020A:7D1D  53					push	bx
020A:7D1E  A1 47B8				mov	ax,word ptr ds:[47B8h]	; (020A:47B8=26C9h)
020A:7D21  8E C0				mov	es,ax
020A:7D23  A1 344A				mov	ax,data_348		; (020A:344A=414Ch)
020A:7D26  32 C9				xor	cl,cl			; Zero register
020A:7D28  F6 C7 10				test	bh,10h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 270

020A:7D2B  74 06				jz	loc_1216		; Jump if zero
020A:7D2D  26: 8B 45 02				mov	ax,es:[di+2]
020A:7D31  B1 01				mov	cl,1
020A:7D33			loc_1216:
020A:7D33  8B D8				mov	bx,ax
020A:7D35  83 FB FF				cmp	bx,0FFFFh
020A:7D38  74 17				je	loc_1217		; Jump if equal
020A:7D3A  26: 8B 05				mov	ax,es:[di]
020A:7D3D  3D FFFC				cmp	ax,0FFFCh
020A:7D40  73 0F				jae	loc_1217		; Jump if above or =
020A:7D42  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7D44  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7D46  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7D48  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:7D4A  03 C3				add	ax,bx
020A:7D4C  26: 8B 05				mov	ax,es:[di]
020A:7D4F  73 04				jnc	loc_1218		; Jump if carry=0
020A:7D51			loc_1217:
020A:7D51  5B					pop	bx
020A:7D52  E9 011D				jmp	loc_1233		; (7E72)
020A:7D55			loc_1218:
020A:7D55  BD 4702				mov	bp,4702h
020A:7D58  E8 13A5				call	sub_96			; (9100)
020A:7D5B  80 3E 4E0A 01			cmp	data_490,1		; (020A:4E0A=0B6h)
020A:7D60  74 07				je	loc_1219		; Jump if equal
020A:7D62  80 3E 4E08 00			cmp	data_489,0		; (020A:4E08=0EBh)
020A:7D67  74 07				je	loc_1220		; Jump if equal
020A:7D69			loc_1219:
020A:7D69  C6 06 4E08 00			mov	data_489,0		; (020A:4E08=0EBh)
020A:7D6E  EB E1				jmp	short loc_1217		; (7D51)
020A:7D70			loc_1220:
020A:7D70  80 3E 309E 4F			cmp	data_313,4Fh		; (020A:309E=55h) 'O'
020A:7D75  74 46				je	loc_1222		; Jump if equal
020A:7D77  57					push	di
020A:7D78  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:7D7D  06					push	es
020A:7D7E  E8 F823				call	sub_87			; (75A4)
020A:7D81  8B 3E 4E0B				mov	di,data_491		; (020A:4E0B=0C601h)
020A:7D85  26: 80 65 04 E0			and	byte ptr es:[di+4],0E0h
020A:7D8A  A0 47C3				mov	al,byte ptr ds:[47C3h]	; (020A:47C3=12h)
020A:7D8D  26: 08 45 04				or	es:[di+4],al
020A:7D91  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7D96  9C					pushf				; Push flags
020A:7D97  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7D9C  5A					pop	dx
020A:7D9D  8E C2				mov	es,dx
020A:7D9F  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:7DA4  5A					pop	dx
020A:7DA5  75 0A				jnz	loc_1221		; Jump if not zero
020A:7DA7  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:7DAC  74 03				je	loc_1221		; Jump if equal
020A:7DAE  E8 F74B				call	sub_85			; (74FC)
020A:7DB1			loc_1221:
020A:7DB1  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7DB6  9D					popf				; Pop flags
020A:7DB7  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7DBC  5F					pop	di
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 271

020A:7DBD			loc_1222:
020A:7DBD  5B					pop	bx
020A:7DBE  FE 06 47BF				inc	data_472		; (020A:47BF=26h)
020A:7DC2  83 FF F8				cmp	di,0FFF8h
020A:7DC5  77 21				ja	loc_1225		; Jump if above
020A:7DC7  80 3E 4D4A 00			cmp	data_483,0		; (020A:4D4A=0Ah)
020A:7DCC  74 1D				je	loc_1226		; Jump if equal
020A:7DCE  FE 0E 4D4A				dec	data_483		; (020A:4D4A=0Ah)
020A:7DD2  74 14				jz	loc_1225		; Jump if zero
020A:7DD4  83 C7 02				add	di,2
020A:7DD7  F6 06 35EE 02			test	data_405,2		; (020A:35EE=2Bh)
020A:7DDC  75 05				jnz	loc_1223		; Jump if not zero
020A:7DDE  F6 C7 10				test	bh,10h
020A:7DE1  74 03				jz	loc_1224		; Jump if zero
020A:7DE3			loc_1223:
020A:7DE3  83 C7 02				add	di,2
020A:7DE6			loc_1224:
020A:7DE6  EB 4A				jmp	short loc_1231		; (7E32)
020A:7DE8			loc_1225:
020A:7DE8  E9 0087				jmp	loc_1233		; (7E72)
020A:7DEB			loc_1226:
020A:7DEB  A0 47C1				mov	al,data_474		; (020A:47C1=5)
020A:7DEE  38 06 47BF				cmp	data_472,al		; (020A:47BF=26h)
020A:7DF2  72 02				jb	loc_1227		; Jump if below
020A:7DF4  EB 7C				jmp	short loc_1233		; (7E72)
020A:7DF6			loc_1227:
020A:7DF6  F6 06 35EE 02			test	data_405,2		; (020A:35EE=2Bh)
020A:7DFB  74 09				jz	loc_1228		; Jump if zero
020A:7DFD  26: 83 7D 06 00			cmp	word ptr es:[di+6],0
020A:7E02  74 0E				je	loc_1229		; Jump if equal
020A:7E04  EB 6C				jmp	short loc_1233		; (7E72)
020A:7E06			loc_1228:
020A:7E06  F6 C7 10				test	bh,10h
020A:7E09  74 0A				jz	loc_1230		; Jump if zero
020A:7E0B  26: 83 7D 06 00			cmp	word ptr es:[di+6],0
020A:7E10  74 60				je	loc_1233		; Jump if equal
020A:7E12			loc_1229:
020A:7E12  83 C7 02				add	di,2
020A:7E15			loc_1230:
020A:7E15  83 C7 02				add	di,2
020A:7E18  26: 83 3D 00				cmp	word ptr es:[di],0
020A:7E1C  74 54				je	loc_1233		; Jump if equal
020A:7E1E  F6 C7 10				test	bh,10h
020A:7E21  75 0F				jnz	loc_1231		; Jump if not zero
020A:7E23  26: 8B 05				mov	ax,es:[di]
020A:7E26  3B 06 3058				cmp	ax,data_295		; (020A:3058=7B1h)
020A:7E2A  72 46				jb	loc_1233		; Jump if below
020A:7E2C  3B 06 305A				cmp	ax,data_296		; (020A:305A=83Ch)
020A:7E30  77 40				ja	loc_1233		; Jump if above
020A:7E32			loc_1231:
020A:7E32  A1 47BB				mov	ax,data_470		; (020A:47BB=0FF3Dh)
020A:7E35  A3 361A				mov	data_419,ax		; (020A:361A=1E8Bh)
020A:7E38  A1 47BD				mov	ax,data_471		; (020A:47BD=0F74h)
020A:7E3B  A3 3618				mov	data_418,ax		; (020A:3618=0A4F3h)
020A:7E3E  A1 47B8				mov	ax,word ptr ds:[47B8h]	; (020A:47B8=26C9h)
020A:7E41  A3 40E9				mov	word ptr ds:[40E9h],ax	; (020A:40E9=745Ah)
020A:7E44  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 272

020A:7E49  9C					pushf				; Push flags
020A:7E4A  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7E4F  5A					pop	dx
020A:7E50  8E C2				mov	es,dx
020A:7E52  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:7E57  5A					pop	dx
020A:7E58  75 0A				jnz	loc_1232		; Jump if not zero
020A:7E5A  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:7E5F  74 03				je	loc_1232		; Jump if equal
020A:7E61  E8 F698				call	sub_85			; (74FC)
020A:7E64			loc_1232:
020A:7E64  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7E69  9D					popf				; Pop flags
020A:7E6A  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7E6F  E9 FC92				jmp	loc_1195		; (7B04)
020A:7E72			loc_1233:
020A:7E72  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7E77  9C					pushf				; Push flags
020A:7E78  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7E7D  5A					pop	dx
020A:7E7E  8E C2				mov	es,dx
020A:7E80  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:7E85  5A					pop	dx
020A:7E86  75 0A				jnz	loc_1234		; Jump if not zero
020A:7E88  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:7E8D  74 03				je	loc_1234		; Jump if equal
020A:7E8F  E8 F66A				call	sub_85			; (74FC)
020A:7E92			loc_1234:
020A:7E92  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7E97  9D					popf				; Pop flags
020A:7E98  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7E9D			loc_1235:
020A:7E9D  A1 47B8				mov	ax,word ptr ds:[47B8h]	; (020A:47B8=26C9h)
020A:7EA0  A3 40E9				mov	word ptr ds:[40E9h],ax	; (020A:40E9=745Ah)
020A:7EA3  A0 47BA				mov	al,data_469		; (020A:47BA=83h)
020A:7EA6  A2 362B				mov	byte ptr ds:[362Bh],al	; (020A:362B=7)
020A:7EA9			loc_1236:
020A:7EA9  80 3E 47BF 00			cmp	data_472,0		; (020A:47BF=26h)
020A:7EAE  74 76				je	loc_1243		; Jump if equal
020A:7EB0  BD 2DAB				mov	bp,2DABh
020A:7EB3  80 3E 4D49 01			cmp	data_482,1		; (020A:4D49=0B1h)
020A:7EB8  74 07				je	loc_1237		; Jump if equal
020A:7EBA  3E: 80 7E 00 3B			cmp	byte ptr ds:[bp],3Bh	; ';'
020A:7EBF  74 09				je	loc_1238		; Jump if equal
020A:7EC1			loc_1237:
020A:7EC1  3E: C6 46 00 3B			mov	byte ptr ds:[bp],3Bh	; ';'
020A:7EC6  45					inc	bp
020A:7EC7  45					inc	bp
020A:7EC8  EB 08				jmp	short loc_1239		; (7ED2)
020A:7ECA			loc_1238:
020A:7ECA  3E: C6 46 00 3B			mov	byte ptr ds:[bp],3Bh	; ';'
020A:7ECF  BD 2DC0				mov	bp,2DC0h
020A:7ED2			loc_1239:
020A:7ED2  A0 47BF				mov	al,data_472		; (020A:47BF=26h)
020A:7ED5  32 E4				xor	ah,ah			; Zero register
020A:7ED7  B3 00				mov	bl,0
020A:7ED9  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 273

020A:7ED9  9A					db	9Ah
020A:7EDA  0288 1510				dw	288h, 1510h
020A:7EDE  45					inc	bp
020A:7EDF  3E: C7 46 00 6E65			mov	word ptr ds:[bp],6E65h
020A:7EE5  45					inc	bp
020A:7EE6  45					inc	bp
020A:7EE7  3E: C7 46 00 7274			mov	word ptr ds:[bp],7274h
020A:7EED  45					inc	bp
020A:7EEE  45					inc	bp
020A:7EEF  80 3E 47BF 01			cmp	data_472,1		; (020A:47BF=26h)
020A:7EF4  74 0F				je	loc_1240		; Jump if equal
020A:7EF6  3E: C7 46 00 6569			mov	word ptr ds:[bp],6569h
020A:7EFC  45					inc	bp
020A:7EFD  45					inc	bp
020A:7EFE  3E: C6 46 00 73			mov	byte ptr ds:[bp],73h	; 's'
020A:7F03  EB 05				jmp	short loc_1241		; (7F0A)
020A:7F05			loc_1240:
020A:7F05  3E: C6 46 00 79			mov	byte ptr ds:[bp],79h	; 'y'
020A:7F0A			loc_1241:
020A:7F0A  80 3E 4D49 01			cmp	data_482,1		; (020A:4D49=0B1h)
020A:7F0F  75 15				jne	loc_1243		; Jump if not equal
020A:7F11  45					inc	bp
020A:7F12  B9 40C2				mov	cx,40C2h
020A:7F15  81 E9 40BB				sub	cx,40BBh
020A:7F19  BF 40BB				mov	di,40BBh

020A:7F1C			locloop_1242:
020A:7F1C  8A 05				mov	al,[di]
020A:7F1E  3E: 88 46 00				mov	ds:[bp],al
020A:7F22  47					inc	di
020A:7F23  45					inc	bp
020A:7F24  E2 F6				loop	locloop_1242		; Loop if cx > 0

020A:7F26			loc_1243:
020A:7F26  A0 4D44				mov	al,data_479		; (020A:4D44=8Ah)
020A:7F29  A2 16AB				mov	data_164,al		; (020A:16AB=41h)
020A:7F2C			loc_1244:
020A:7F2C  C6 06 35DE 01			mov	data_395,1		; (020A:35DE=10h)
020A:7F31  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:7F36  9C					pushf				; Push flags
020A:7F37  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:7F3C  5A					pop	dx
020A:7F3D  8E C2				mov	es,dx
020A:7F3F  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:7F44  5A					pop	dx
020A:7F45  75 0A				jnz	loc_1245		; Jump if not zero
020A:7F47  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:7F4C  74 03				je	loc_1245		; Jump if equal
020A:7F4E  E8 F5AB				call	sub_85			; (74FC)
020A:7F51			loc_1245:
020A:7F51  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:7F56  9D					popf				; Pop flags
020A:7F57  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:7F5C  5D					pop	bp
020A:7F5D  5F					pop	di
020A:7F5E  5A					pop	dx
020A:7F5F  59					pop	cx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 274

020A:7F60  C3					retn
				sub_90		endp

020A:7F61  87 DB				xchg	bx,bx
020A:7F63  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_91		proc	near
020A:7F64  53					push	bx
020A:7F65  52					push	dx
020A:7F66  57					push	di
020A:7F67  8B CF				mov	cx,di
020A:7F69  BF 0008				mov	di,8
020A:7F6C			loc_1246:
020A:7F6C  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:7F71  72 02				jb	loc_1247		; Jump if below
020A:7F73  EB 69				jmp	short loc_1255		; (7FDE)
020A:7F75			loc_1247:
020A:7F75  26: 8A 55 05				mov	dl,es:[di+5]
020A:7F79  80 E2 0C				and	dl,0Ch
020A:7F7C  80 FA 04				cmp	dl,4
020A:7F7F  75 56				jne	loc_1254		; Jump if not equal
020A:7F81  26: 8A 75 04				mov	dh,es:[di+4]
020A:7F85  80 E6 36				and	dh,36h			; '6'
020A:7F88  80 FE 10				cmp	dh,10h
020A:7F8B  74 07				je	loc_1248		; Jump if equal
020A:7F8D  80 FE 12				cmp	dh,12h
020A:7F90  74 0B				je	loc_1249		; Jump if equal
020A:7F92  EB 12				jmp	short loc_1250		; (7FA6)
020A:7F94			loc_1248:
020A:7F94  80 3E 309E 4F			cmp	data_313,4Fh		; (020A:309E=55h) 'O'
020A:7F99  74 6C				je	loc_1258		; Jump if equal
020A:7F9B  EB 3A				jmp	short loc_1254		; (7FD7)
020A:7F9D			loc_1249:
020A:7F9D  80 3E 309E 4F			cmp	data_313,4Fh		; (020A:309E=55h) 'O'
020A:7FA2  75 63				jne	loc_1258		; Jump if not equal
020A:7FA4  EB 31				jmp	short loc_1254		; (7FD7)
020A:7FA6			loc_1250:
020A:7FA6  26: 8A 75 04				mov	dh,es:[di+4]
020A:7FAA  80 E6 3F				and	dh,3Fh			; '?'
020A:7FAD  F6 06 35EE 02			test	data_405,2		; (020A:35EE=2Bh)
020A:7FB2  75 13				jnz	loc_1251		; Jump if not zero
020A:7FB4  F6 06 47C0 01			test	data_473,1		; (020A:47C0=3Bh)
020A:7FB9  74 11				jz	loc_1252		; Jump if zero
020A:7FBB  26: 83 7D 08 04			cmp	word ptr es:[di+8],4
020A:7FC0  75 15				jne	loc_1254		; Jump if not equal
020A:7FC2  80 FE 02				cmp	dh,2
020A:7FC5  74 08				je	loc_1253		; Jump if equal
020A:7FC7			loc_1251:
020A:7FC7  80 FE 04				cmp	dh,4
020A:7FCA  EB 03				jmp	short loc_1253		; (7FCF)
020A:7FCC			loc_1252:
020A:7FCC  80 FE 02				cmp	dh,2
020A:7FCF			loc_1253:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 275

020A:7FCF  75 06				jne	loc_1254		; Jump if not equal
020A:7FD1  26: 39 4D 02				cmp	es:[di+2],cx
020A:7FD5  74 30				je	loc_1258		; Jump if equal
020A:7FD7			loc_1254:
020A:7FD7  26: 39 05				cmp	es:[di],ax
020A:7FDA  72 2B				jb	loc_1258		; Jump if below
020A:7FDC  74 05				jz	loc_1256		; Jump if zero
020A:7FDE			loc_1255:
020A:7FDE  B8 FFFF				mov	ax,0FFFFh
020A:7FE1  EB 40				jmp	short loc_1260		; (8023)
020A:7FE3			loc_1256:
020A:7FE3  26: 39 4D 02				cmp	es:[di+2],cx
020A:7FE7  72 1E				jb	loc_1258		; Jump if below
020A:7FE9  80 FA 00				cmp	dl,0
020A:7FEC  75 13				jne	loc_1257		; Jump if not equal
020A:7FEE  26: 8A 5D 04				mov	bl,es:[di+4]
020A:7FF2  80 E3 5F				and	bl,5Fh			; '_'
020A:7FF5  80 FB 5F				cmp	bl,5Fh			; '_'
020A:7FF8  75 07				jne	loc_1257		; Jump if not equal
020A:7FFA  26: F6 45 05 03			test	byte ptr es:[di+5],3
020A:7FFF  74 06				jz	loc_1258		; Jump if zero
020A:8001			loc_1257:
020A:8001  26: 8B 45 02				mov	ax,es:[di+2]
020A:8005  EB 1C				jmp	short loc_1260		; (8023)
020A:8007			loc_1258:
020A:8007  50					push	ax
020A:8008  26: 8A 45 05				mov	al,es:[di+5]
020A:800C  25 000F				and	ax,0Fh
020A:800F  53					push	bx
020A:8010  BB 40C2				mov	bx,40C2h
020A:8013  D7					xlat				; al=[al+[bx]] table
020A:8014  5B					pop	bx
020A:8015  0A C0				or	al,al			; Zero ?
020A:8017  75 04				jnz	loc_1259		; Jump if not zero
020A:8019  26: 8A 45 06				mov	al,es:[di+6]
020A:801D			loc_1259:
020A:801D  03 F8				add	di,ax
020A:801F  58					pop	ax
020A:8020  E9 FF49				jmp	loc_1246		; (7F6C)
020A:8023			loc_1260:
020A:8023  5F					pop	di
020A:8024  5A					pop	dx
020A:8025  5B					pop	bx
020A:8026  C3					retn
				sub_91		endp

							                        ;* No entry point to code
020A:8027  90					nop
020A:8028  56					push	si
020A:8029  57					push	di
020A:802A  51					push	cx
020A:802B  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:8030  06					push	es
020A:8031  26: 8A 45 04				mov	al,es:[di+4]
020A:8035  24 1F				and	al,1Fh
020A:8037  3C 1F				cmp	al,1Fh
020A:8039  74 17				je	loc_1261		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 276

020A:803B  FE C8				dec	al
020A:803D  B4 2C				mov	ah,2Ch			; ','
020A:803F  F6 E4				mul	ah			; ax = reg * al
020A:8041  BE 47C8				mov	si,47C8h
020A:8044  03 F0				add	si,ax
020A:8046  BF 35FA				mov	di,35FAh
020A:8049  B9 0028				mov	cx,28h
020A:804C  E8 F14E				call	sub_78			; (719D)
020A:804F  FC					cld				; Clear direction
020A:8050  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8052			loc_1261:
020A:8052  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8057  9C					pushf				; Push flags
020A:8058  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:805D  5A					pop	dx
020A:805E  8E C2				mov	es,dx
020A:8060  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:8065  5A					pop	dx
020A:8066  75 0A				jnz	loc_1262		; Jump if not zero
020A:8068  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:806D  74 03				je	loc_1262		; Jump if equal
020A:806F  E8 F48A				call	sub_85			; (74FC)
020A:8072			loc_1262:
020A:8072  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:8077  9D					popf				; Pop flags
020A:8078  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:807D  59					pop	cx
020A:807E  5F					pop	di
020A:807F  5E					pop	si
020A:8080  C3					retn
							                        ;* No entry point to code
020A:8081  87 DB				xchg	bx,bx
020A:8083  90					nop
020A:8084  F7 06 4E22 0040			test	data_502,40h		; (020A:4E22=348Ah)
020A:808A  75 34				jnz	loc_1264		; Jump if not zero
020A:808C  26: 80 7C 01 21			cmp	byte ptr es:[si+1],21h	; '!'
020A:8091  74 25				je	loc_1263		; Jump if equal
020A:8093  26: 80 7C 01 20			cmp	byte ptr es:[si+1],20h	; ' '
020A:8098  75 26				jne	loc_1264		; Jump if not equal
020A:809A  80 3E 327F 08			cmp	byte ptr data_336,8	; (020A:327F='nuineIntel')
020A:809F  75 1F				jne	loc_1264		; Jump if not equal
020A:80A1  26: 83 7C 04 01			cmp	word ptr es:[si+4],1
020A:80A6  75 18				jne	loc_1264		; Jump if not equal
020A:80A8  26: 83 7C 02 43			cmp	word ptr es:[si+2],43h
020A:80AD  74 14				je	loc_1265		; Jump if equal
020A:80AF  26: 83 7C 02 45			cmp	word ptr es:[si+2],45h
020A:80B4  75 0A				jne	loc_1264		; Jump if not equal
020A:80B6  EB 0B				jmp	short loc_1265		; (80C3)
020A:80B8			loc_1263:
020A:80B8  A1 35FA				mov	ax,word ptr ds:[35FAh]	; (020A:35FA=3BA1h)
020A:80BB  80 FC 25				cmp	ah,25h			; '%'
020A:80BE  74 03				je	loc_1265		; Jump if equal
020A:80C0			loc_1264:
020A:80C0  E9 0188				jmp	loc_1283		; (824B)
020A:80C3			loc_1265:
020A:80C3  53					push	bx
020A:80C4  51					push	cx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 277

020A:80C5  52					push	dx
020A:80C6  57					push	di
020A:80C7  56					push	si
020A:80C8  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:80CD  06					push	es
020A:80CE  8B 1E 361A				mov	bx,data_419		; (020A:361A=1E8Bh)
020A:80D2  26: 80 7C 01 20			cmp	byte ptr es:[si+1],20h	; ' '
020A:80D7  75 12				jne	loc_1266		; Jump if not equal
020A:80D9  8B 1E 3602				mov	bx,word ptr ds:[3602h]	; (020A:3602=29h)
020A:80DD  A1 3608				mov	ax,data_414		; (020A:3608=188h)
020A:80E0  3D 0006				cmp	ax,6
020A:80E3  77 06				ja	loc_1266		; Jump if above
020A:80E5  B1 0C				mov	cl,0Ch
020A:80E7  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:80E9  03 D8				add	bx,ax
020A:80EB			loc_1266:
020A:80EB  A1 3606				mov	ax,data_413		; (020A:3606=0BFAAh)
020A:80EE  3D 0000				cmp	ax,0
020A:80F1  75 15				jne	loc_1269		; Jump if not equal
020A:80F3  83 FB 00				cmp	bx,0
020A:80F6  75 03				jne	loc_1268		; Jump if not equal
020A:80F8			loc_1267:
020A:80F8  E9 0120				jmp	loc_1281		; (821B)
020A:80FB			loc_1268:
020A:80FB  3B 1E 3033				cmp	bx,data_277		; (020A:3033=0)
020A:80FF  75 07				jne	loc_1269		; Jump if not equal
020A:8101  80 3E 327F 05			cmp	byte ptr data_336,5	; (020A:327F='nuineIntel')
020A:8106  74 F0				je	loc_1267		; Jump if equal
020A:8108			loc_1269:
020A:8108  89 1E 40F9				mov	word ptr ds:[40F9h],bx	; (020A:40F9=744Eh)
020A:810C  A3 40FB				mov	word ptr ds:[40FBh],ax	; (020A:40FB=0C607h)
020A:810F  BF 40F9				mov	di,40F9h
020A:8112  E8 F088				call	sub_78			; (719D)
020A:8115  E8 2980				call	sub_104			; (AA98)
020A:8118  72 03				jc	loc_1270		; Jump if carry Set
020A:811A  E9 00FE				jmp	loc_1281		; (821B)
020A:811D			loc_1270:
020A:811D  A1 3606				mov	ax,data_413		; (020A:3606=0BFAAh)
020A:8120  BA 0001				mov	dx,1
020A:8123  E8 DEA6				call	sub_63			; (5FCC)
020A:8126  72 05				jc	loc_1272		; Jump if carry Set
020A:8128  EB 44				jmp	short loc_1273		; (816E)
020A:812A			loc_1271:
020A:812A  E9 00EE				jmp	loc_1281		; (821B)
020A:812D			loc_1272:
020A:812D  26: 80 4D 05 30			or	byte ptr es:[di+5],30h	; '0'
020A:8132  80 3E 2B36 04			cmp	data_227,4		; (020A:2B36=0ADh)
020A:8137  72 F1				jb	loc_1271		; Jump if below
020A:8139  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:813E  9A 1510:55E4		;*		call	far ptr sub_166		;*(1510:55E4)
020A:813E  9A					db	9Ah
020A:813F  55E4 1510				dw	55E4h, 1510h
020A:8143  72 E5				jc	loc_1271		; Jump if carry Set
020A:8145  57					push	di
020A:8146  8B F7				mov	si,di
020A:8148  BF 532E				mov	di,532Eh
020A:814B  B9 007F				mov	cx,7Fh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 278

020A:814E  8C C0				mov	ax,es
020A:8150  1E					push	ds
020A:8151  07					pop	es
020A:8152  8E D8				mov	ds,ax
020A:8154  FC					cld				; Clear direction
020A:8155  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8157  8C C0				mov	ax,es
020A:8159  1E					push	ds
020A:815A  07					pop	es
020A:815B  8E D8				mov	ds,ax
020A:815D  5E					pop	si
020A:815E  E8 0667				call	sub_93			; (87C8)
020A:8161  BF 532E				mov	di,532Eh
020A:8164  80 65 05 FC				and	byte ptr [di+5],0FCh
020A:8168  80 4D 05 02				or	byte ptr [di+5],2
020A:816C  EB 49				jmp	short loc_1278		; (81B7)
020A:816E			loc_1273:
020A:816E  3D FFF0				cmp	ax,0FFF0h
020A:8171  74 1F				je	loc_1276		; Jump if equal
020A:8173  8E C3				mov	es,bx
020A:8175  8B F0				mov	si,ax
020A:8177  26: 83 3C 00				cmp	word ptr es:[si],0
020A:817B  74 12				je	loc_1275		; Jump if equal
020A:817D  B9 000A				mov	cx,0Ah

020A:8180			locloop_1274:
020A:8180  26: 80 3C 20				cmp	byte ptr es:[si],20h	; ' '
020A:8184  72 09				jb	loc_1275		; Jump if below
020A:8186  26: 80 3C 7E				cmp	byte ptr es:[si],7Eh	; '~'
020A:818A  77 03				ja	loc_1275		; Jump if above
020A:818C  46					inc	si
020A:818D  E2 F1				loop	locloop_1274		; Loop if cx > 0

020A:818F			loc_1275:
020A:818F  E9 0089				jmp	loc_1281		; (821B)
020A:8192			loc_1276:
020A:8192  BF 532E				mov	di,532Eh
020A:8195  89 1D				mov	[di],bx
020A:8197  89 45 02				mov	[di+2],ax
020A:819A  B0 40				mov	al,40h			; '@'
020A:819C  80 3E 2B3B 06			cmp	data_231,6		; (020A:2B3B=0A0h)
020A:81A1  72 09				jb	loc_1277		; Jump if below
020A:81A3  80 3E 2B36 04			cmp	data_227,4		; (020A:2B36=0ADh)
020A:81A8  73 02				jae	loc_1277		; Jump if above or =
020A:81AA  B0 00				mov	al,0
020A:81AC			loc_1277:
020A:81AC  88 45 04				mov	[di+4],al
020A:81AF  C6 45 05 32				mov	byte ptr [di+5],32h	; '2'
020A:81B3  C6 45 06 00				mov	byte ptr [di+6],0
020A:81B7			loc_1278:
020A:81B7  A1 35FA				mov	ax,word ptr ds:[35FAh]	; (020A:35FA=3BA1h)
020A:81BA  BD 3B5C				mov	bp,3B5Ch
020A:81BD  9A 1510:00D4		;*		call	far ptr sub_113		;*(1510:00D4)
020A:81BD  9A					db	9Ah
020A:81BE  00D4 1510				dw	0D4h, 1510h
020A:81C2  BD 3B58				mov	bp,3B58h
020A:81C5  83 C7 07				add	di,7
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 279

020A:81C8  B9 3B67				mov	cx,3B67h
020A:81CB  81 E9 3B58				sub	cx,3B58h
020A:81CF  9A 1510:44C0		;*		call	far ptr sub_160		;*(1510:44C0)
020A:81CF  9A					db	9Ah
020A:81D0  44C0 1510				dw	44C0h, 1510h
020A:81D4  3C 00				cmp	al,0
020A:81D6  74 1B				je	locloop_1279		; Jump if equal
020A:81D8  55					push	bp
020A:81D9  53					push	bx
020A:81DA  BD 3B63				mov	bp,3B63h
020A:81DD  3E: C6 46 00 5F			mov	byte ptr ds:[bp],5Fh	; '_'
020A:81E2  45					inc	bp
020A:81E3  32 E4				xor	ah,ah			; Zero register
020A:81E5  33 DB				xor	bx,bx			; Zero register
020A:81E7  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:81E7  9A					db	9Ah
020A:81E8  0288 1510				dw	288h, 1510h
020A:81EC  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:81F1  5B					pop	bx
020A:81F2  5D					pop	bp

020A:81F3			locloop_1279:
020A:81F3  3E: 8A 46 00				mov	al,ds:[bp]
020A:81F7  88 05				mov	[di],al
020A:81F9  45					inc	bp
020A:81FA  47					inc	di
020A:81FB  E2 F6				loop	locloop_1279		; Loop if cx > 0

020A:81FD  E8 03E0				call	sub_92			; (85E0)
020A:8200  BD 3B63				mov	bp,3B63h
020A:8203  3E: C6 46 00 72			mov	byte ptr ds:[bp],72h	; 'r'
020A:8208  45					inc	bp
020A:8209  3E: C6 46 00 79			mov	byte ptr ds:[bp],79h	; 'y'
020A:820E  45					inc	bp
020A:820F			loc_1280:
020A:820F  3E: C6 46 00 20			mov	byte ptr ds:[bp],20h	; ' '
020A:8214  45					inc	bp
020A:8215  81 FD 3B67				cmp	bp,3B67h
020A:8219  72 F4				jb	loc_1280		; Jump if below
020A:821B			loc_1281:
020A:821B  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8220  9C					pushf				; Push flags
020A:8221  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:8226  5A					pop	dx
020A:8227  8E C2				mov	es,dx
020A:8229  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:822E  5A					pop	dx
020A:822F  75 0A				jnz	loc_1282		; Jump if not zero
020A:8231  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:8236  74 03				je	loc_1282		; Jump if equal
020A:8238  E8 F2C1				call	sub_85			; (74FC)
020A:823B			loc_1282:
020A:823B  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:8240  9D					popf				; Pop flags
020A:8241  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:8246  5E					pop	si
020A:8247  5F					pop	di
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 280

020A:8248  5A					pop	dx
020A:8249  59					pop	cx
020A:824A  5B					pop	bx
020A:824B			loc_1283:
020A:824B  C3					retn
							                        ;* No entry point to code
020A:824C  8B F7				mov	si,di
020A:824E  E8 0577				call	sub_93			; (87C8)
020A:8251  8B 1E 344A				mov	bx,data_348		; (020A:344A=414Ch)
020A:8255  BA 0001				mov	dx,1
020A:8258  A8 02				test	al,2
020A:825A  75 03				jnz	loc_1284		; Jump if not zero
020A:825C  BA 0004				mov	dx,4
020A:825F			loc_1284:
020A:825F  06					push	es
020A:8260  8E 06 344A				mov	es,data_348		; (020A:344A=414Ch)
020A:8264  8B 3E 344C				mov	di,data_349		; (020A:344C=5453h)
020A:8268  A8 01				test	al,1
020A:826A  74 04				jz	loc_1285		; Jump if zero
020A:826C  26: 8B 5D 02				mov	bx,es:[di+2]
020A:8270			loc_1285:
020A:8270  26: 8B 05				mov	ax,es:[di]
020A:8273  07					pop	es
020A:8274  E8 DD55				call	sub_63			; (5FCC)
020A:8277  73 0F				jnc	loc_1286		; Jump if carry=0
020A:8279  8B F7				mov	si,di
020A:827B  E8 054A				call	sub_93			; (87C8)
020A:827E  A1 344C				mov	ax,data_349		; (020A:344C=5453h)
020A:8281  40					inc	ax
020A:8282  A3 4E89				mov	word ptr ds:[4E89h],ax	; (020A:4E89=3E80h)
020A:8285  A3 4E8B				mov	data_548,ax		; (020A:4E8B=35E6h)
020A:8288			loc_1286:
020A:8288  C3					retn
							                        ;* No entry point to code
020A:8289  50					push	ax
020A:828A  4E					dec	si
020A:828B  5D					pop	bp
020A:828C  4E					dec	si
020A:828D  6A					db	6Ah
020A:828E  4E					dec	si
020A:828F  79 4E				jns	loc_1288		; Jump if not sign
020A:8291  88 4E B2				mov	[bp-4Eh],cl
020A:8294  4E					dec	si
020A:8295  D7					xlat				; al=[al+[bx]] table
020A:8296  4E					dec	si
020A:8297  0F			;*		pop	cs			; Dangerous-8088 only
020A:8297  0F					db	0Fh
020A:8298  4F					dec	di
020A:8299  41					inc	cx
020A:829A  4F					dec	di
020A:829B  41					inc	cx
020A:829C  4F					dec	di
020A:829D  41					inc	cx
020A:829E  4F					dec	di
020A:829F  4F					dec	di
020A:82A0  4F					dec	di
020A:82A1  E9 E950		;*		jmp	loc_990			;*(6BF4)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 281

020A:82A1  E9 50 E9				db	0E9h, 50h,0E9h
							                        ;* No entry point to code
020A:82A4  50					push	ax
020A:82A5  E9 E950		;*		jmp	loc_991			;*(6BF8)
020A:82A5  E9 50 E9				db	0E9h, 50h,0E9h
							                        ;* No entry point to code
020A:82A8  50					push	ax
020A:82A9  6B					db	6Bh
020A:82AA  4F					dec	di
020A:82AB  6B					db	6Bh
020A:82AC  4F					dec	di
020A:82AD  6B					db	6Bh
020A:82AE  4F					dec	di
020A:82AF  6B					db	6Bh
020A:82B0  4F					dec	di
020A:82B1  E9 E950		;*		jmp	loc_992			;*(6C04)
020A:82B1  E9 50 E9				db	0E9h, 50h,0E9h
							                        ;* No entry point to code
020A:82B4  50					push	ax
020A:82B5  1E					push	ds
020A:82B6  50					push	ax
020A:82B7  26					db	26h
020A:82B8  50					push	ax
020A:82B9  41					inc	cx
020A:82BA  50					push	ax
020A:82BB  49					dec	cx
020A:82BC  50					push	ax
020A:82BD  51					push	cx
020A:82BE  50					push	ax
020A:82BF  90					nop
020A:82C0  50					push	ax
020A:82C1  53					push	bx
020A:82C2  57					push	di
020A:82C3  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:82C8  06					push	es
020A:82C9  26: 8A 45 05				mov	al,es:[di+5]
020A:82CD  24 0F				and	al,0Fh
020A:82CF  75 03				jnz	loc_1287		; Jump if not zero
020A:82D1  E9 02D5				jmp	loc_1312		; (85A9)
020A:82D4			loc_1287:
020A:82D4  B0 2E				mov	al,2Eh			; '.'
020A:82D6  26: 80 7D 08 3F			cmp	byte ptr es:[di+8],3Fh	; '?'
020A:82DB  74 0C				je	loc_1289		; Jump if equal
020A:82DD  B0 FA				mov	al,0FAh
020A:82DF			loc_1288:
020A:82DF  F7 06 4E24 0080			test	data_503,80h		; (020A:4E24=885Eh)
020A:82E5  74 02				jz	loc_1289		; Jump if zero
020A:82E7  B0 2C				mov	al,2Ch			; ','
020A:82E9			loc_1289:
020A:82E9  A2 2D25				mov	byte ptr data_262,al	; (020A:2D25='ings\Admin')
020A:82EC  80 3E 35E3 00			cmp	byte ptr ds:[35E3h],0	; (020A:35E3=15h)
020A:82F1  74 03				je	loc_1290		; Jump if equal
020A:82F3  A2 2D3A				mov	byte ptr data_263,al	; (020A:2D3A='R=\\USER-709DB75')
020A:82F6			loc_1290:
020A:82F6  26: 8A 45 09				mov	al,es:[di+9]
020A:82FA  3C 20				cmp	al,20h			; ' '
020A:82FC  76 03				jbe	loc_1291		; Jump if below or =
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 282

020A:82FE  E9 0234				jmp	loc_1304		; (8535)
020A:8301			loc_1291:
020A:8301  8A D8				mov	bl,al
020A:8303  32 FF				xor	bh,bh			; Zero register
020A:8305  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:8307  81 C3 4DC9				add	bx,4DC9h
020A:830B  2E: 8B 1F				mov	bx,cs:[bx]
020A:830E  FF E3				jmp	bx			;*
							                        ;* No entry point to code
020A:8310  C6 06 3459 00			mov	data_356,0		; (020A:3459=0ABh)
020A:8315  C6 06 345C 01			mov	byte ptr ds:[345Ch],1	; (020A:345C=0A1h)
020A:831A  E9 028C				jmp	loc_1312		; (85A9)
							                        ;* No entry point to code
020A:831D  C6 06 3459 05			mov	data_356,5		; (020A:3459=0ABh)
020A:8322  C6 06 5709 04			mov	data_579,4		; (020A:5709=3)
020A:8327  E9 027F				jmp	loc_1312		; (85A9)
							                        ;* No entry point to code
020A:832A  F6 06 35A0 05			test	data_386,5		; (020A:35A0=0A3h)
020A:832F  74 05				jz	loc_1292		; Jump if zero
020A:8331  C6 06 4D4C 01			mov	data_485,1		; (020A:4D4C=66h)
020A:8336			loc_1292:
020A:8336  E9 0270				jmp	loc_1312		; (85A9)
							                        ;* No entry point to code
020A:8339  9A 1510:3A47		;*		call	far ptr sub_151		;*(1510:3A47)
020A:8339  9A					db	9Ah
020A:833A  3A47 1510				dw	3A47h, 1510h
020A:833E  B0 03				mov	al,3
020A:8340  9A 1510:2280		;*		call	far ptr sub_133		;*(1510:2280)
020A:8340  9A					db	9Ah
020A:8341  2280 1510				dw	2280h, 1510h
020A:8345  E9 0261				jmp	loc_1312		; (85A9)
							                        ;* No entry point to code
020A:8348  C6 06 3459 00			mov	data_356,0		; (020A:3459=0ABh)
020A:834D  C6 06 345C 01			mov	byte ptr ds:[345Ch],1	; (020A:345C=0A1h)
020A:8352  F6 06 35EE 04			test	data_405,4		; (020A:35EE=2Bh)
020A:8357  74 16				jz	loc_1293		; Jump if zero
020A:8359  80 26 35EE CF			and	data_405,0CFh		; (020A:35EE=2Bh)
020A:835E  80 26 35EE FC			and	data_405,0FCh		; (020A:35EE=2Bh)
020A:8363  80 26 35EE FB			and	data_405,0FBh		; (020A:35EE=2Bh)
020A:8368  B0 42				mov	al,42h			; 'B'
020A:836A  9A 1510:2280		;*		call	far ptr sub_133		;*(1510:2280)
020A:836A  9A					db	9Ah
020A:836B  2280 1510				dw	2280h, 1510h
020A:836F			loc_1293:
020A:836F  E9 0237				jmp	loc_1312		; (85A9)
							                        ;* No entry point to code
020A:8372  C6 06 3459 00			mov	data_356,0		; (020A:3459=0ABh)
020A:8377  C6 06 345C 01			mov	byte ptr ds:[345Ch],1	; (020A:345C=0A1h)
020A:837C  F6 06 35EE 04			test	data_405,4		; (020A:35EE=2Bh)
020A:8381  75 11				jnz	loc_1294		; Jump if not zero
020A:8383  80 0E 35EE 04			or	data_405,4		; (020A:35EE=2Bh)
020A:8388  80 0E 35EE 03			or	data_405,3		; (020A:35EE=2Bh)
020A:838D  B0 41				mov	al,41h			; 'A'
020A:838F  9A 1510:2280		;*		call	far ptr sub_133		;*(1510:2280)
020A:838F  9A					db	9Ah
020A:8390  2280 1510				dw	2280h, 1510h
020A:8394			loc_1294:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 283

020A:8394  E9 0212				jmp	loc_1312		; (85A9)
							                        ;* No entry point to code
020A:8397  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:839B  09 06 4E22				or	data_502,ax		; (020A:4E22=348Ah)
020A:839F  26: 8A 45 0C				mov	al,es:[di+0Ch]
020A:83A3  32 E4				xor	ah,ah			; Zero register
020A:83A5  09 06 4E24				or	data_503,ax		; (020A:4E24=885Eh)
020A:83A9  26: 8B 45 0D				mov	ax,es:[di+0Dh]
020A:83AD  21 06 4E22				and	data_502,ax		; (020A:4E22=348Ah)
020A:83B1  26: 8A 45 0F				mov	al,es:[di+0Fh]
020A:83B5  B4 FF				mov	ah,0FFh
020A:83B7  21 06 4E24				and	data_503,ax		; (020A:4E24=885Eh)
020A:83BB  B0 00				mov	al,0
020A:83BD  F7 06 4E22 0002			test	data_502,2		; (020A:4E22=348Ah)
020A:83C3  74 02				jz	loc_1295		; Jump if zero
020A:83C5  B0 01				mov	al,1
020A:83C7			loc_1295:
020A:83C7  9A 1510:45B8		;*		call	far ptr sub_162		;*(1510:45B8)
020A:83C7  9A					db	9Ah
020A:83C8  45B8 1510				dw	45B8h, 1510h
020A:83CC  E9 01DA				jmp	loc_1312		; (85A9)
							                        ;* No entry point to code
020A:83CF  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:83D3  A3 361A				mov	data_419,ax		; (020A:361A=1E8Bh)
020A:83D6  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:83DA  A3 3618				mov	data_418,ax		; (020A:3618=0A4F3h)
020A:83DD  26: 8B 45 0E				mov	ax,es:[di+0Eh]
020A:83E1  A3 35FA				mov	word ptr ds:[35FAh],ax	; (020A:35FA=3BA1h)
020A:83E4  26: 8B 45 10				mov	ax,es:[di+10h]
020A:83E8  A3 35FE				mov	word ptr ds:[35FEh],ax	; (020A:35FE=0B000h)
020A:83EB  26: 8B 45 12				mov	ax,es:[di+12h]
020A:83EF  A3 360A				mov	data_415,ax		; (020A:360A=29B9h)
020A:83F2  26: 8B 45 14				mov	ax,es:[di+14h]
020A:83F6  A3 360E				mov	data_416,ax		; (020A:360E=0BEAAh)
020A:83F9  C6 06 35DD 05			mov	data_394,5		; (020A:35DD=23h)
020A:83FE  E9 01A8				jmp	loc_1312		; (85A9)
							                        ;* No entry point to code
020A:8401  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:8405  89 1E 4E02				mov	data_486,bx		; (020A:4E02=802Eh)
020A:8409  A2 4E04				mov	data_487,al		; (020A:4E04=3Ch)
020A:840C  E9 019A				jmp	loc_1312		; (85A9)
							                        ;* No entry point to code
020A:840F  F7 06 4E22 4000			test	data_502,4000h		; (020A:4E22=348Ah)
020A:8415  75 0C				jnz	loc_1296		; Jump if not zero
020A:8417  81 0E 4E22 4000			or	data_502,4000h		; (020A:4E22=348Ah)
020A:841D  C7 06 4E20 BFFF			mov	data_501,0BFFFh		; (020A:4E20=2E00h)
020A:8423			loc_1296:
020A:8423  C6 06 345D 00			mov	byte ptr ds:[345Dh],0	; (020A:345D=0A2h)
020A:8428  E9 017E				jmp	loc_1312		; (85A9)
							                        ;* No entry point to code
020A:842B  FF 36 40F7				push	word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:842F  FF 36 40E9				push	word ptr ds:[40E9h]	; (020A:40E9=745Ah)
020A:8433  FF 36 30C9				push	data_322		; (020A:30C9=4C50h)
020A:8437  C6 06 4D49 01			mov	data_482,1		; (020A:4D49=0B1h)
020A:843C  26: 8B 45 0C				mov	ax,es:[di+0Ch]
020A:8440  A3 40F7				mov	word ptr ds:[40F7h],ax	; (020A:40F7=3C0Bh)
020A:8443  26: 8B 45 0A				mov	ax,es:[di+0Ah]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 284

020A:8447  A3 40E9				mov	word ptr ds:[40E9h],ax	; (020A:40E9=745Ah)
020A:844A  26: 8A 45 0E				mov	al,es:[di+0Eh]
020A:844E  A2 4D4A				mov	data_483,al		; (020A:4D4A=0Ah)
020A:8451  26: 8A 45 09				mov	al,es:[di+9]
020A:8455  B7 20				mov	bh,20h			; ' '
020A:8457  A8 01				test	al,1
020A:8459  74 03				jz	loc_1297		; Jump if zero
020A:845B  80 CF 10				or	bh,10h
020A:845E			loc_1297:
020A:845E  C6 06 309E 00			mov	data_313,0		; (020A:309E=55h)
020A:8463  3C 11				cmp	al,11h
020A:8465  77 05				ja	loc_1298		; Jump if above
020A:8467  C6 06 309E 4F			mov	data_313,4Fh		; (020A:309E=55h) 'O'
020A:846C			loc_1298:
020A:846C  B2 00				mov	dl,0
020A:846E  E8 ED2C				call	sub_78			; (719D)
020A:8471  BE 4D46				mov	si,4D46h
020A:8474  E8 F3E9				call	sub_90			; (7860)
020A:8477  C6 06 4D49 02			mov	data_482,2		; (020A:4D49=0B1h)
020A:847C  C6 06 4D4A 00			mov	data_483,0		; (020A:4D4A=0Ah)
020A:8481  C6 06 309E 00			mov	data_313,0		; (020A:309E=55h)
020A:8486  8F 06 30C9				pop	data_322		; (020A:30C9=4C50h)
020A:848A  8F 06 40E9				pop	word ptr ds:[40E9h]	; (020A:40E9=745Ah)
020A:848E  8F 06 40F7				pop	word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:8492  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8497  9C					pushf				; Push flags
020A:8498  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:849D  5A					pop	dx
020A:849E  8E C2				mov	es,dx
020A:84A0  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:84A5  5A					pop	dx
020A:84A6  75 0A				jnz	loc_1299		; Jump if not zero
020A:84A8  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:84AD  74 03				je	loc_1299		; Jump if equal
020A:84AF  E8 F04A				call	sub_85			; (74FC)
020A:84B2			loc_1299:
020A:84B2  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:84B7  9D					popf				; Pop flags
020A:84B8  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:84BD  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:84C2  06					push	es
020A:84C3  BA 0001				mov	dx,1
020A:84C6  26: 8A 45 09				mov	al,es:[di+9]
020A:84CA  3C 11				cmp	al,11h
020A:84CC  77 03				ja	loc_1300		; Jump if above
020A:84CE  BA 0004				mov	dx,4
020A:84D1			loc_1300:
020A:84D1  A1 344C				mov	ax,data_349		; (020A:344C=5453h)
020A:84D4  8B 1E 344A				mov	bx,data_348		; (020A:344A=414Ch)
020A:84D8  E8 DAF1				call	sub_63			; (5FCC)
020A:84DB  E9 00CB				jmp	loc_1312		; (85A9)
							                        ;* No entry point to code
020A:84DE  9A 1510:3BC0		;*		call	far ptr sub_153		;*(1510:3BC0)
020A:84DE  9A					db	9Ah
020A:84DF  3BC0 1510				dw	3BC0h, 1510h
020A:84E3  E9 00C3				jmp	loc_1312		; (85A9)
							                        ;* No entry point to code
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 285

020A:84E6  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:84EB  75 11				jne	loc_1301		; Jump if not equal
020A:84ED  26: 8A 45 06				mov	al,es:[di+6]
020A:84F1  B4 13				mov	ah,13h
020A:84F3  BB 0007				mov	bx,7
020A:84F6  BE 43A3				mov	si,43A3h
020A:84F9  9A 1510:42AC		;*		call	far ptr sub_159		;*(1510:42AC)
020A:84F9  9A					db	9Ah
020A:84FA  42AC 1510				dw	42ACh, 1510h
020A:84FE			loc_1301:
020A:84FE  E9 00A8				jmp	loc_1312		; (85A9)
							                        ;* No entry point to code
020A:8501  9A 1510:5614		;*		call	far ptr sub_167		;*(1510:5614)
020A:8501  9A					db	9Ah
020A:8502  5614 1510				dw	5614h, 1510h
020A:8506  E9 00A1				jmp	loc_1313		; (85AA)
							                        ;* No entry point to code
020A:8509  C7 06 2CCA 0000			mov	data_260,0		; (020A:2CCA=4300h)
020A:850F  EB 06				jmp	short loc_1302		; (8517)
							                        ;* No entry point to code
020A:8511  C7 06 2CCA FFFF			mov	data_260,0FFFFh		; (020A:2CCA=4300h)
020A:8517			loc_1302:
020A:8517  80 3E 2B37 02			cmp	data_228,2		; (020A:2B37=0EBh)
020A:851C  75 05				jne	loc_1303		; Jump if not equal
020A:851E  26: 80 4D 04 80			or	byte ptr es:[di+4],80h
020A:8523			loc_1303:
020A:8523  C6 06 4E17 01			mov	data_497,1		; (020A:4E17=75h)
020A:8528  BD 2DAB				mov	bp,2DABh
020A:852B  BE 4061				mov	si,4061h
020A:852E  9A 1510:4160		;*		call	far ptr sub_157		;*(1510:4160)
020A:852E  9A					db	9Ah
020A:852F  4160 1510				dw	4160h, 1510h
020A:8533  EB 74				jmp	short loc_1312		; (85A9)
020A:8535			loc_1304:
020A:8535  3C 40				cmp	al,40h			; '@'
020A:8537  72 14				jb	loc_1305		; Jump if below
020A:8539  3C 44				cmp	al,44h			; 'D'
020A:853B  76 12				jbe	loc_1306		; Jump if below or =
020A:853D  3C 80				cmp	al,80h
020A:853F  72 0C				jb	loc_1305		; Jump if below
020A:8541  3C 8C				cmp	al,8Ch
020A:8543  76 1F				jbe	loc_1308		; Jump if below or =
020A:8545  3C 90				cmp	al,90h
020A:8547  72 04				jb	loc_1305		; Jump if below
020A:8549  3C 96				cmp	al,96h
020A:854B  76 42				jbe	loc_1311		; Jump if below or =
020A:854D			loc_1305:
020A:854D  EB 5A				jmp	short loc_1312		; (85A9)
020A:854F			loc_1306:
020A:854F  F7 06 4E22 4000			test	data_502,4000h		; (020A:4E22=348Ah)
020A:8555  75 0B				jnz	loc_1307		; Jump if not zero
020A:8557  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:855B  89 1E 345E				mov	word ptr ds:[345Eh],bx	; (020A:345E=0AEA7h)
020A:855F  A2 345D				mov	byte ptr ds:[345Dh],al	; (020A:345D=0A2h)
020A:8562			loc_1307:
020A:8562  EB 45				jmp	short loc_1312		; (85A9)
020A:8564			loc_1308:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 286

020A:8564  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:8568  BE 35FA				mov	si,35FAh
020A:856B  24 0F				and	al,0Fh
020A:856D  3C 07				cmp	al,7
020A:856F  72 12				jb	loc_1309		; Jump if below
020A:8571  BE 3616				mov	si,3616h
020A:8574  2C 07				sub	al,7
020A:8576  74 0D				jz	loc_1310		; Jump if zero
020A:8578  3C 02				cmp	al,2
020A:857A  77 09				ja	loc_1310		; Jump if above
020A:857C  C6 06 35DD 03			mov	data_394,3		; (020A:35DD=23h)
020A:8581  EB 02				jmp	short loc_1310		; (8585)
020A:8583			loc_1309:
020A:8583  D0 E0				shl	al,1			; Shift w/zeros fill
020A:8585			loc_1310:
020A:8585  D0 E0				shl	al,1			; Shift w/zeros fill
020A:8587  32 E4				xor	ah,ah			; Zero register
020A:8589  03 F0				add	si,ax
020A:858B  89 1C				mov	[si],bx
020A:858D  EB 1A				jmp	short loc_1312		; (85A9)
020A:858F			loc_1311:
020A:858F  2C 90				sub	al,90h
020A:8591  32 E4				xor	ah,ah			; Zero register
020A:8593  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:8595  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:8597  BE 35FA				mov	si,35FAh
020A:859A  03 F0				add	si,ax
020A:859C  26: 8B 5D 0A				mov	bx,es:[di+0Ah]
020A:85A0  89 1C				mov	[si],bx
020A:85A2  26: 8B 5D 0C				mov	bx,es:[di+0Ch]
020A:85A6  89 5C 02				mov	[si+2],bx
020A:85A9			loc_1312:
020A:85A9  F8					clc				; Clear carry flag
020A:85AA			loc_1313:
020A:85AA  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:85AF  9C					pushf				; Push flags
020A:85B0  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:85B5  5A					pop	dx
020A:85B6  8E C2				mov	es,dx
020A:85B8  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:85BD  5A					pop	dx
020A:85BE  75 0A				jnz	loc_1314		; Jump if not zero
020A:85C0  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:85C5  74 03				je	loc_1314		; Jump if equal
020A:85C7  E8 EF32				call	sub_85			; (74FC)
020A:85CA			loc_1314:
020A:85CA  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:85CF  9D					popf				; Pop flags
020A:85D0  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:85D5  5F					pop	di
020A:85D6  5B					pop	bx
020A:85D7  58					pop	ax
020A:85D8  C3					retn
020A:85D9  0007[00]				db	7 dup (0)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 287

				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_92		proc	near
020A:85E0  50					push	ax
020A:85E1  53					push	bx
020A:85E2  51					push	cx
020A:85E3  52					push	dx
020A:85E4  56					push	si
020A:85E5  57					push	di
020A:85E6  55					push	bp
020A:85E7  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:85EC  1E					push	ds
020A:85ED  E8 EB95				call	sub_74			; (7185)
020A:85F0  BD 40C2				mov	bp,40C2h
020A:85F3  BE 532E				mov	si,532Eh
020A:85F6  8B 1C				mov	bx,[si]
020A:85F8  8A 44 05				mov	al,[si+5]
020A:85FB  24 0C				and	al,0Ch
020A:85FD  3C 08				cmp	al,8
020A:85FF  74 53				je	loc_1319		; Jump if equal
020A:8601  3C 04				cmp	al,4
020A:8603  74 0A				je	loc_1315		; Jump if equal
020A:8605  3C 00				cmp	al,0
020A:8607  74 15				je	loc_1316		; Jump if equal
020A:8609  BB 0001				mov	bx,1
020A:860C  E9 E609				jmp	loc_993			; (6C18)
020A:860F			loc_1315:
020A:860F  E8 EF1E				call	sub_86			; (7530)
020A:8612  83 06 3084 01			add	data_301,1		; (020A:3084=4F43h)
020A:8617  83 16 3086 00			adc	data_302,0		; (020A:3086=4Dh)
020A:861C  EB 45				jmp	short loc_1320		; (8663)
020A:861E			loc_1316:
020A:861E  80 7C 04 5F				cmp	byte ptr [si+4],5Fh	; '_'
020A:8622  75 21				jne	loc_1318		; Jump if not equal
020A:8624  80 7C 05 00				cmp	byte ptr [si+5],0
020A:8628  74 0C				je	loc_1317		; Jump if equal
020A:862A  80 7C 09 14				cmp	byte ptr [si+9],14h
020A:862E  74 06				je	loc_1317		; Jump if equal
020A:8630  80 7C 09 15				cmp	byte ptr [si+9],15h
020A:8634  75 0F				jne	loc_1318		; Jump if not equal
020A:8636			loc_1317:
020A:8636  E8 EB6D				call	sub_80			; (71A6)
020A:8639  83 06 3098 01			add	data_311,1		; (020A:3098=3A43h)
020A:863E  83 16 309A 00			adc	data_312,0		; (020A:309A=445Ch)
020A:8643  EB 1E				jmp	short loc_1320		; (8663)
020A:8645			loc_1318:
020A:8645  E8 EF5C				call	sub_87			; (75A4)
020A:8648  83 06 3088 01			add	data_303,1		; (020A:3088=4C41h)
020A:864D  83 16 308A 00			adc	data_304,0		; (020A:308A=554Ch)
020A:8652  EB 0F				jmp	short loc_1320		; (8663)
020A:8654			loc_1319:
020A:8654  E8 EFC1				call	sub_88			; (7618)
020A:8657  83 06 308C 01			add	data_305,1		; (020A:308C=4553h)
020A:865C  83 16 308E 00			adc	data_306,0		; (020A:308E=5352h)
020A:8661  EB 00				jmp	short loc_1320		; (8663)
020A:8663			loc_1320:
020A:8663  2E: A1 38A3				mov	ax,cs:data_429		; (020A:38A3=0C88Ah)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 288

020A:8667  9A 1510:0A90		;*		call	far ptr sub_131		;*(1510:0A90)
020A:8667  9A					db	9Ah
020A:8668  0A90 1510				dw	0A90h, 1510h
020A:866C  BF 0008				mov	di,8
020A:866F  8B 1C				mov	bx,[si]
020A:8671  8B 44 02				mov	ax,[si+2]
020A:8674  26: 8B 0E 0002			mov	cx,word ptr es:[2]	; (8029:0002=0)
020A:8679  3B CB				cmp	cx,bx
020A:867B  77 10				ja	loc_1322		; Jump if above
020A:867D  72 09				jc	loc_1321		; Jump if carry Set
020A:867F  26: 8B 0E 0004			mov	cx,word ptr es:[4]	; (8029:0004=0)
020A:8684  3B C8				cmp	cx,ax
020A:8686  77 05				ja	loc_1322		; Jump if above
020A:8688			loc_1321:
020A:8688  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (8029:0006=0)
020A:868D			loc_1322:
020A:868D  8B 1C				mov	bx,[si]
020A:868F  8B 44 02				mov	ax,[si+2]
020A:8692  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (8029:0000=0)
020A:8697  72 02				jb	loc_1323		; Jump if below
020A:8699  EB 43				jmp	short loc_1329		; (86DE)
020A:869B			loc_1323:
020A:869B  26: 39 1D				cmp	es:[di],bx
020A:869E  73 19				jae	loc_1325		; Jump if above or =
020A:86A0  BB 40C2				mov	bx,40C2h
020A:86A3  26: 8A 45 05				mov	al,es:[di+5]
020A:86A7  25 000F				and	ax,0Fh
020A:86AA  D7					xlat				; al=[al+[bx]] table
020A:86AB  0A C0				or	al,al			; Zero ?
020A:86AD  75 04				jnz	loc_1324		; Jump if not zero
020A:86AF  26: 8A 45 06				mov	al,es:[di+6]
020A:86B3			loc_1324:
020A:86B3  8B C8				mov	cx,ax
020A:86B5  03 F9				add	di,cx
020A:86B7  EB D4				jmp	short loc_1322		; (868D)
020A:86B9			loc_1325:
020A:86B9  74 02				jz	loc_1326		; Jump if zero
020A:86BB  EB 21				jmp	short loc_1329		; (86DE)
020A:86BD			loc_1326:
020A:86BD  26: 39 45 02				cmp	es:[di+2],ax
020A:86C1  72 02				jb	loc_1327		; Jump if below
020A:86C3  EB 19				jmp	short loc_1329		; (86DE)
020A:86C5			loc_1327:
020A:86C5  BB 40C2				mov	bx,40C2h
020A:86C8  26: 8A 45 05				mov	al,es:[di+5]
020A:86CC  25 000F				and	ax,0Fh
020A:86CF  D7					xlat				; al=[al+[bx]] table
020A:86D0  0A C0				or	al,al			; Zero ?
020A:86D2  75 04				jnz	loc_1328		; Jump if not zero
020A:86D4  26: 8A 45 06				mov	al,es:[di+6]
020A:86D8			loc_1328:
020A:86D8  8B C8				mov	cx,ax
020A:86DA  03 F9				add	di,cx
020A:86DC  EB AF				jmp	short loc_1322		; (868D)
020A:86DE			loc_1329:
020A:86DE  BB 40C2				mov	bx,40C2h
020A:86E1  8A 44 05				mov	al,[si+5]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 289

020A:86E4  25 000F				and	ax,0Fh
020A:86E7  D7					xlat				; al=[al+[bx]] table
020A:86E8  0A C0				or	al,al			; Zero ?
020A:86EA  75 03				jnz	loc_1330		; Jump if not zero
020A:86EC  8A 44 06				mov	al,[si+6]
020A:86EF			loc_1330:
020A:86EF  8B C8				mov	cx,ax
020A:86F1  26: A1 0000				mov	ax,word ptr es:[0]	; (8029:0000=0)
020A:86F5  03 C1				add	ax,cx
020A:86F7  73 03				jnc	loc_1331		; Jump if carry=0
020A:86F9  E9 E432				jmp	loc_983			; (6B2E)
020A:86FC			loc_1331:
020A:86FC  BE 532E				mov	si,532Eh
020A:86FF  8B 04				mov	ax,[si]
020A:8701  3B 06 344A				cmp	ax,data_348		; (020A:344A=414Ch)
020A:8705  75 41				jne	loc_1335		; Jump if not equal
020A:8707  8B 44 02				mov	ax,[si+2]
020A:870A  3B 06 344C				cmp	ax,data_349		; (020A:344C=5453h)
020A:870E  76 38				jbe	loc_1335		; Jump if below or =
020A:8710  8A 5C 05				mov	bl,[si+5]
020A:8713  80 E3 0C				and	bl,0Ch
020A:8716  80 FB 08				cmp	bl,8
020A:8719  74 0C				je	loc_1332		; Jump if equal
020A:871B  80 FB 04				cmp	bl,4
020A:871E  74 12				je	loc_1333		; Jump if equal
020A:8720  80 FB 00				cmp	bl,0
020A:8723  74 18				je	loc_1334		; Jump if equal
020A:8725  EB 21				jmp	short loc_1335		; (8748)
020A:8727			loc_1332:
020A:8727  3B 06 4E8B				cmp	ax,data_548		; (020A:4E8B=35E6h)
020A:872B  73 1B				jae	loc_1335		; Jump if above or =
020A:872D  A3 4E8B				mov	data_548,ax		; (020A:4E8B=35E6h)
020A:8730  EB 16				jmp	short loc_1335		; (8748)
020A:8732			loc_1333:
020A:8732  3B 06 4E87				cmp	ax,word ptr ds:[4E87h]	; (020A:4E87=0E892h)
020A:8736  73 10				jae	loc_1335		; Jump if above or =
020A:8738  A3 4E87				mov	word ptr ds:[4E87h],ax	; (020A:4E87=0E892h)
020A:873B  EB 0B				jmp	short loc_1335		; (8748)
020A:873D			loc_1334:
020A:873D  3B 06 4E89				cmp	ax,word ptr ds:[4E89h]	; (020A:4E89=3E80h)
020A:8741  73 05				jae	loc_1335		; Jump if above or =
020A:8743  A3 4E89				mov	word ptr ds:[4E89h],ax	; (020A:4E89=3E80h)
020A:8746  EB 00				jmp	short loc_1335		; (8748)
020A:8748			loc_1335:
020A:8748  57					push	di
020A:8749  51					push	cx
020A:874A  1E					push	ds
020A:874B  06					push	es
020A:874C  1F					pop	ds
020A:874D  26: 8B 36 0000			mov	si,word ptr es:[0]	; (8029:0000=0)
020A:8752  4E					dec	si
020A:8753  8B C6				mov	ax,si
020A:8755  2B C7				sub	ax,di
020A:8757  40					inc	ax
020A:8758  26: 01 0E 0000			add	word ptr es:[0],cx	; (8029:0000=0)
020A:875D  73 03				jnc	loc_1336		; Jump if carry=0
020A:875F  E9 E3CC				jmp	loc_983			; (6B2E)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 290

020A:8762			loc_1336:
020A:8762  8B FE				mov	di,si
020A:8764  03 F9				add	di,cx
020A:8766  8B C8				mov	cx,ax
020A:8768  FD					std				; Set direction flag
020A:8769  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:876B  1F					pop	ds
020A:876C  59					pop	cx
020A:876D  5F					pop	di
020A:876E  BE 532E				mov	si,532Eh
020A:8771  8B 04				mov	ax,[si]
020A:8773  26: A3 0002				mov	word ptr es:[2],ax	; (8029:0002=0)
020A:8777  8B 44 02				mov	ax,[si+2]
020A:877A  26: A3 0004				mov	word ptr es:[4],ax	; (8029:0004=0)
020A:877E  26: 89 3E 0006			mov	word ptr es:[6],di	; (8029:0006=0)
020A:8783  FC					cld				; Clear direction
020A:8784  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8786  B9 0050				mov	cx,50h
020A:8789  33 C0				xor	ax,ax			; Zero register
020A:878B  BF 532E				mov	di,532Eh
020A:878E  06					push	es
020A:878F  1E					push	ds
020A:8790  07					pop	es
020A:8791  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:8793  07					pop	es
020A:8794  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8799  9C					pushf				; Push flags
020A:879A  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:879F  5A					pop	dx
020A:87A0  8E DA				mov	ds,dx
020A:87A2  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:87A7  5A					pop	dx
020A:87A8  75 0A				jnz	loc_1337		; Jump if not zero
020A:87AA  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:87AF  74 03				je	loc_1337		; Jump if equal
020A:87B1  E8 ED48				call	sub_85			; (74FC)
020A:87B4			loc_1337:
020A:87B4  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:87B9  9D					popf				; Pop flags
020A:87BA  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:87BF  5D					pop	bp
020A:87C0  5F					pop	di
020A:87C1  5E					pop	si
020A:87C2  5A					pop	dx
020A:87C3  59					pop	cx
020A:87C4  5B					pop	bx
020A:87C5  58					pop	ax
020A:87C6  C3					retn
				sub_92		endp

020A:87C7  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_93		proc	near
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 291

020A:87C8  E8 C955				call	sub_35			; (5120)
020A:87CB  50					push	ax
020A:87CC  53					push	bx
020A:87CD  51					push	cx
020A:87CE  52					push	dx
020A:87CF  56					push	si
020A:87D0  57					push	di
020A:87D1  55					push	bp
020A:87D2  26: 8A 44 05				mov	al,es:[si+5]
020A:87D6  24 0C				and	al,0Ch
020A:87D8  3C 08				cmp	al,8
020A:87DA  74 26				je	loc_1340		; Jump if equal
020A:87DC  3C 04				cmp	al,4
020A:87DE  74 0A				je	loc_1338		; Jump if equal
020A:87E0  3C 00				cmp	al,0
020A:87E2  74 12				je	loc_1339		; Jump if equal
020A:87E4  BB 0002				mov	bx,2
020A:87E7  E9 E42E				jmp	loc_993			; (6C18)
020A:87EA			loc_1338:
020A:87EA  83 2E 3084 01			sub	data_301,1		; (020A:3084=4F43h)
020A:87EF  83 1E 3086 00			sbb	data_302,0		; (020A:3086=4Dh)
020A:87F4  EB 18				jmp	short loc_1341		; (880E)
020A:87F6			loc_1339:
020A:87F6  83 2E 3088 01			sub	data_303,1		; (020A:3088=4C41h)
020A:87FB  83 1E 308A 00			sbb	data_304,0		; (020A:308A=554Ch)
020A:8800  EB 0C				jmp	short loc_1341		; (880E)
020A:8802			loc_1340:
020A:8802  83 2E 308C 01			sub	data_305,1		; (020A:308C=4553h)
020A:8807  83 1E 308E 00			sbb	data_306,0		; (020A:308E=5352h)
020A:880C  EB 00				jmp	short loc_1341		; (880E)
020A:880E			loc_1341:
020A:880E  BB 40C2				mov	bx,40C2h
020A:8811  26: 8A 44 05				mov	al,es:[si+5]
020A:8815  25 000F				and	ax,0Fh
020A:8818  D7					xlat				; al=[al+[bx]] table
020A:8819  0A C0				or	al,al			; Zero ?
020A:881B  75 04				jnz	loc_1342		; Jump if not zero
020A:881D  26: 8A 44 06				mov	al,es:[si+6]
020A:8821			loc_1342:
020A:8821  8B C8				mov	cx,ax
020A:8823  26: 8B 04				mov	ax,es:[si]
020A:8826  3B 06 344A				cmp	ax,data_348		; (020A:344A=414Ch)
020A:882A  75 71				jne	loc_1349		; Jump if not equal
020A:882C  26: 8B 44 02				mov	ax,es:[si+2]
020A:8830  26: 8A 5C 05				mov	bl,es:[si+5]
020A:8834  80 E3 0C				and	bl,0Ch
020A:8837  80 FB 08				cmp	bl,8
020A:883A  74 0C				je	loc_1343		; Jump if equal
020A:883C  80 FB 04				cmp	bl,4
020A:883F  74 24				je	loc_1345		; Jump if equal
020A:8841  80 FB 00				cmp	bl,0
020A:8844  74 3C				je	loc_1347		; Jump if equal
020A:8846  EB 55				jmp	short loc_1349		; (889D)
020A:8848			loc_1343:
020A:8848  3B 06 4E8B				cmp	ax,data_548		; (020A:4E8B=35E6h)
020A:884C  75 4F				jne	loc_1349		; Jump if not equal
020A:884E  8B D9				mov	bx,cx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 292

020A:8850  26: 8B 00				mov	ax,es:[bx+si]
020A:8853  3B 06 344A				cmp	ax,data_348		; (020A:344A=414Ch)
020A:8857  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:885B  75 03				jnz	loc_1344		; Jump if not zero
020A:885D  B8 FFFF				mov	ax,0FFFFh
020A:8860			loc_1344:
020A:8860  A3 4E8B				mov	data_548,ax		; (020A:4E8B=35E6h)
020A:8863  EB 38				jmp	short loc_1349		; (889D)
020A:8865			loc_1345:
020A:8865  3B 06 4E87				cmp	ax,word ptr ds:[4E87h]	; (020A:4E87=0E892h)
020A:8869  75 32				jne	loc_1349		; Jump if not equal
020A:886B  8B D9				mov	bx,cx
020A:886D  26: 8B 00				mov	ax,es:[bx+si]
020A:8870  3B 06 344A				cmp	ax,data_348		; (020A:344A=414Ch)
020A:8874  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:8878  75 03				jnz	loc_1346		; Jump if not zero
020A:887A  B8 FFFF				mov	ax,0FFFFh
020A:887D			loc_1346:
020A:887D  A3 4E87				mov	word ptr ds:[4E87h],ax	; (020A:4E87=0E892h)
020A:8880  EB 1B				jmp	short loc_1349		; (889D)
020A:8882			loc_1347:
020A:8882  3B 06 4E89				cmp	ax,word ptr ds:[4E89h]	; (020A:4E89=3E80h)
020A:8886  75 15				jne	loc_1349		; Jump if not equal
020A:8888  8B D9				mov	bx,cx
020A:888A  26: 8B 00				mov	ax,es:[bx+si]
020A:888D  3B 06 344A				cmp	ax,data_348		; (020A:344A=414Ch)
020A:8891  26: 8B 40 02				mov	ax,es:[bx+si+2]
020A:8895  75 03				jnz	loc_1348		; Jump if not zero
020A:8897  B8 FFFF				mov	ax,0FFFFh
020A:889A			loc_1348:
020A:889A  A3 4E89				mov	word ptr ds:[4E89h],ax	; (020A:4E89=3E80h)
020A:889D			loc_1349:
020A:889D  8B FE				mov	di,si
020A:889F  03 F1				add	si,cx
020A:88A1  26: 8B 04				mov	ax,es:[si]
020A:88A4  26: A3 0002				mov	word ptr es:[2],ax	; (020A:0002=10h)
020A:88A8  26: 8B 44 02				mov	ax,es:[si+2]
020A:88AC  26: A3 0004				mov	word ptr es:[4],ax	; (020A:0004=808h)
020A:88B0  26: 89 3E 0006			mov	word ptr es:[6],di	; (020A:0006=3)
020A:88B5  8B C1				mov	ax,cx
020A:88B7  26: 8B 0E 0000			mov	cx,word ptr es:[0]	; (020A:0000=1828h)
020A:88BC  2B CE				sub	cx,si
020A:88BE  1E					push	ds
020A:88BF  06					push	es
020A:88C0  1F					pop	ds
020A:88C1  FC					cld				; Clear direction
020A:88C2  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:88C4  1F					pop	ds
020A:88C5  26: 29 06 0000			sub	word ptr es:[0],ax	; (020A:0000=1828h)
020A:88CA  73 06				jnc	loc_1350		; Jump if carry=0
020A:88CC  BB 0002				mov	bx,2
020A:88CF  E9 E346				jmp	loc_993			; (6C18)
020A:88D2			loc_1350:
020A:88D2  5D					pop	bp
020A:88D3  5F					pop	di
020A:88D4  5E					pop	si
020A:88D5  5A					pop	dx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 293

020A:88D6  59					pop	cx
020A:88D7  5B					pop	bx
020A:88D8  58					pop	ax
020A:88D9  C3					retn
				sub_93		endp

020A:88DA  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_94		proc	near
020A:88DC  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:88E1  06					push	es
020A:88E2  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:88E7  1E					push	ds
020A:88E8  56					push	si
020A:88E9  57					push	di
020A:88EA  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:88F0  75 24				jne	loc_1354		; Jump if not equal
020A:88F2  E8 E890				call	sub_74			; (7185)
020A:88F5  A9 0002				test	ax,2
020A:88F8  74 05				jz	loc_1351		; Jump if zero
020A:88FA  E8 EC33				call	sub_86			; (7530)
020A:88FD  EB 1F				jmp	short loc_1355		; (891E)
020A:88FF			loc_1351:
020A:88FF  A9 0001				test	ax,1
020A:8902  74 05				jz	loc_1352		; Jump if zero
020A:8904  E8 EC9D				call	sub_87			; (75A4)
020A:8907  EB 15				jmp	short loc_1355		; (891E)
020A:8909			loc_1352:
020A:8909  A9 0004				test	ax,4
020A:890C  0574					dw	574h			; Data table (indexed access)
020A:890E  E8 ED07				call	sub_88			; (7618)
020A:8911  EB 0B				jmp	short loc_1355		; (891E)
020A:8913			loc_1353:
020A:8913  E9 00BD				jmp	loc_1361		; (89D3)
020A:8916			loc_1354:
020A:8916  E8 EBE3				call	sub_85			; (74FC)
020A:8919  2E: 8E 06 38A1			mov	es,cs:data_428		; (020A:38A1=4B3h)
020A:891E			loc_1355:
020A:891E  BF 0008				mov	di,8
020A:8921  26: C7 05 FFFF			mov	word ptr es:[di],0FFFFh
020A:8926  26: C7 45 02 FFFF			mov	word ptr es:[di+2],0FFFFh
020A:892C  26: C6 45 04 00			mov	byte ptr es:[di+4],0
020A:8931  26: C6 45 06 00			mov	byte ptr es:[di+6],0
020A:8936  A9 0002				test	ax,2
020A:8939  75 0D				jnz	loc_1356		; Jump if not zero
020A:893B  A9 0001				test	ax,1
020A:893E  75 2A				jnz	loc_1358		; Jump if not zero
020A:8940  A9 0004				test	ax,4
020A:8943  75 55				jnz	loc_1360		; Jump if not zero
020A:8945  E9 008B				jmp	loc_1361		; (89D3)
020A:8948			loc_1356:
020A:8948  26: C6 45 05 04			mov	byte ptr es:[di+5],4
020A:894D  26: C7 06 0000 0012			mov	word ptr es:[0],12h	; (04B3:0000=0AFE3h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 294

020A:8954  BE 78CB				mov	si,78CBh
020A:8957  57					push	di
020A:8958  BF FFF0				mov	di,0FFF0h
020A:895B  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:895F  75 06				jne	loc_1357		; Jump if not equal
020A:8961  B9 000C				mov	cx,0Ch
020A:8964  FC					cld				; Clear direction
020A:8965  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8967			loc_1357:
020A:8967  5F					pop	di
020A:8968  EB 69				jmp	short loc_1361		; (89D3)
020A:896A			loc_1358:
020A:896A  26: C6 45 05 00			mov	byte ptr es:[di+5],0
020A:896F  26: C7 06 0000 000F			mov	word ptr es:[0],0Fh	; (04B3:0000=0AFE3h)
020A:8976  1E					push	ds
020A:8977  E8 E80B				call	sub_74			; (7185)
020A:897A  8B 36 2B42				mov	si,data_236		; (020A:2B42=0A4A5h)
020A:897E  1F					pop	ds
020A:897F  26: 01 36 0000			add	word ptr es:[0],si	; (04B3:0000=0AFE3h)
020A:8984  BE 78EB				mov	si,78EBh
020A:8987  57					push	di
020A:8988  BF FFF0				mov	di,0FFF0h
020A:898B  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:898F  75 06				jne	loc_1359		; Jump if not equal
020A:8991  B9 000C				mov	cx,0Ch
020A:8994  FC					cld				; Clear direction
020A:8995  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:8997			loc_1359:
020A:8997  5F					pop	di
020A:8998  EB 39				jmp	short loc_1361		; (89D3)
020A:899A			loc_1360:
020A:899A  26: C6 45 05 08			mov	byte ptr es:[di+5],8
020A:899F  51					push	cx
020A:89A0  B9 0029				mov	cx,29h
020A:89A3  33 C0				xor	ax,ax			; Zero register
020A:89A5  BF 0011				mov	di,11h
020A:89A8  FC					cld				; Clear direction
020A:89A9  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:89AB  59					pop	cx
020A:89AC  26: C7 06 0000 0043			mov	word ptr es:[0],43h	; (04B3:0000=0AFE3h)
020A:89B3  1E					push	ds
020A:89B4  E8 E7CE				call	sub_74			; (7185)
020A:89B7  8B 36 2B42				mov	si,data_236		; (020A:2B42=0A4A5h)
020A:89BB  1F					pop	ds
020A:89BC  26: 01 36 0000			add	word ptr es:[0],si	; (04B3:0000=0AFE3h)
020A:89C1  BE 78DB				mov	si,78DBh
020A:89C4  BF FFF0				mov	di,0FFF0h
020A:89C7  26: 80 3D FF				cmp	byte ptr es:[di],0FFh
020A:89CB  75 06				jne	loc_1361		; Jump if not equal
020A:89CD  B9 000C				mov	cx,0Ch
020A:89D0  FC					cld				; Clear direction
020A:89D1  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:89D3			loc_1361:
020A:89D3  26: C7 06 0002 FFFF			mov	word ptr es:[2],0FFFFh	; (04B3:0002=14A0h)
020A:89DA  26: C7 06 0004 FFFF			mov	word ptr es:[4],0FFFFh	; (04B3:0004=0A08Dh)
020A:89E1  26: C7 06 0006 0008			mov	word ptr es:[6],8	; (04B3:0006=0E3E0h)
020A:89E8  5F					pop	di
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 295

020A:89E9  5E					pop	si
020A:89EA  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:89EF  9C					pushf				; Push flags
020A:89F0  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:89F5  5A					pop	dx
020A:89F6  8E DA				mov	ds,dx
020A:89F8  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:89FD  5A					pop	dx
020A:89FE  75 0A				jnz	loc_1362		; Jump if not zero
020A:8A00  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:8A05  74 03				je	loc_1362		; Jump if equal
020A:8A07  E8 EAF2				call	sub_85			; (74FC)
020A:8A0A			loc_1362:
020A:8A0A  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:8A0F  9D					popf				; Pop flags
020A:8A10  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:8A15  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:8A1A  9C					pushf				; Push flags
020A:8A1B  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:8A20  5A					pop	dx
020A:8A21  8E C2				mov	es,dx
020A:8A23  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:8A28  5A					pop	dx
020A:8A29  75 0A				jnz	loc_1363		; Jump if not zero
020A:8A2B  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:8A30  74 03				je	loc_1363		; Jump if equal
020A:8A32  E8 EAC7				call	sub_85			; (74FC)
020A:8A35			loc_1363:
020A:8A35  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:8A3A  9D					popf				; Pop flags
020A:8A3B  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:8A40  C3					retn
				sub_94		endp

020A:8A41  000F[00]				db	15 dup (0)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_95		proc	near
020A:8A50  53					push	bx
020A:8A51  52					push	dx
020A:8A52  56					push	si
020A:8A53  57					push	di
020A:8A54  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:8A59  06					push	es
020A:8A5A  C6 06 4E0A 00			mov	data_490,0		; (020A:4E0A=0B6h)
020A:8A5F  F6 C7 20				test	bh,20h			; ' '
020A:8A62  74 3C				jz	loc_1366		; Jump if zero
020A:8A64  F6 06 35EE 02			test	data_405,2		; (020A:35EE=2Bh)
020A:8A69  75 35				jnz	loc_1366		; Jump if not zero
020A:8A6B  0A DB				or	bl,bl			; Zero ?
020A:8A6D  74 0A				jz	loc_1364		; Jump if zero
020A:8A6F  8A CB				mov	cl,bl
020A:8A71  80 E1 C7				and	cl,0C7h
020A:8A74  80 F9 06				cmp	cl,6
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 296

020A:8A77  75 27				jne	loc_1366		; Jump if not equal
020A:8A79			loc_1364:
020A:8A79  3D FFFD				cmp	ax,0FFFDh
020A:8A7C  72 07				jb	loc_1365		; Jump if below
020A:8A7E  C6 06 362E 00			mov	byte ptr ds:[362Eh],0	; (020A:362E=57h)
020A:8A83  EB 1B				jmp	short loc_1366		; (8AA0)
020A:8A85			loc_1365:
020A:8A85  F7 06 4E22 0008			test	data_502,8		; (020A:4E22=348Ah)
020A:8A8B  75 13				jnz	loc_1366		; Jump if not zero
020A:8A8D  80 3E 4E16 01			cmp	byte ptr ds:[4E16h],1	; (020A:4E16=0)
020A:8A92  75 0C				jne	loc_1366		; Jump if not equal
020A:8A94  80 3E 362E 0F			cmp	byte ptr ds:[362Eh],0Fh	; (020A:362E=57h)
020A:8A99  77 05				ja	loc_1366		; Jump if above
020A:8A9B  80 0E 4E16 80			or	byte ptr ds:[4E16h],80h	; (020A:4E16=0)
020A:8AA0			loc_1366:
020A:8AA0  8A 0E 362B				mov	cl,byte ptr ds:[362Bh]	; (020A:362B=7)
020A:8AA4  C6 06 3633 00			mov	byte ptr ds:[3633h],0	; (020A:3633=47h)
020A:8AA9  9A 1510:4104		;*		call	far ptr sub_156		;*(1510:4104)
020A:8AA9  9A					db	9Ah
020A:8AAA  4104 1510				dw	4104h, 1510h
020A:8AAE  73 14				jnc	loc_1367		; Jump if carry=0
020A:8AB0  8B 16 3620				mov	dx,data_422		; (020A:3620=8812h)
020A:8AB4  89 16 40E9				mov	word ptr ds:[40E9h],dx	; (020A:40E9=745Ah)
020A:8AB8  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (020A:35F0=74h)
020A:8ABD  75 05				jnz	loc_1367		; Jump if not zero
020A:8ABF  C6 06 3633 01			mov	byte ptr ds:[3633h],1	; (020A:3633=47h)
020A:8AC4			loc_1367:
020A:8AC4  80 F9 90				cmp	cl,90h
020A:8AC7  75 19				jne	loc_1369		; Jump if not equal
020A:8AC9  8B 16 40E9				mov	dx,word ptr ds:[40E9h]	; (020A:40E9=745Ah)
020A:8ACD  3B 16 361A				cmp	dx,data_419		; (020A:361A=1E8Bh)
020A:8AD1  75 0D				jne	loc_1368		; Jump if not equal
020A:8AD3  9A 1510:3B60		;*		call	far ptr sub_152		;*(1510:3B60)
020A:8AD3  9A					db	9Ah
020A:8AD4  3B60 1510				dw	3B60h, 1510h
020A:8AD8  89 16 361A				mov	data_419,dx		; (020A:361A=1E8Bh)
020A:8ADC  89 16 40E9				mov	word ptr ds:[40E9h],dx	; (020A:40E9=745Ah)
020A:8AE0			loc_1368:
020A:8AE0  EB 68				jmp	short loc_1376		; (8B4A)
020A:8AE2			loc_1369:
020A:8AE2  80 F9 26				cmp	cl,26h			; '&'
020A:8AE5  75 0F				jne	loc_1370		; Jump if not equal
020A:8AE7  8B 16 3618				mov	dx,data_418		; (020A:3618=0A4F3h)
020A:8AEB  9A 1510:3B60		;*		call	far ptr sub_152		;*(1510:3B60)
020A:8AEB  9A					db	9Ah
020A:8AEC  3B60 1510				dw	3B60h, 1510h
020A:8AF0  89 16 3618				mov	data_418,dx		; (020A:3618=0A4F3h)
020A:8AF4  EB 50				jmp	short loc_1375		; (8B46)
020A:8AF6			loc_1370:
020A:8AF6  80 F9 2E				cmp	cl,2Eh			; '.'
020A:8AF9  75 06				jne	loc_1371		; Jump if not equal
020A:8AFB  8B 16 3052				mov	dx,data_292		; (020A:3052=3505h)
020A:8AFF  EB 45				jmp	short loc_1375		; (8B46)
020A:8B01			loc_1371:
020A:8B01  80 F9 36				cmp	cl,36h			; '6'
020A:8B04  75 06				jne	loc_1372		; Jump if not equal
020A:8B06  8B 16 3620				mov	dx,data_422		; (020A:3620=8812h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 297

020A:8B0A  EB 3A				jmp	short loc_1375		; (8B46)
020A:8B0C			loc_1372:
020A:8B0C  80 F9 64				cmp	cl,64h			; 'd'
020A:8B0F  75 0F				jne	loc_1373		; Jump if not equal
020A:8B11  8B 16 361C				mov	dx,data_420		; (020A:361C=1326h)
020A:8B15  9A 1510:3B60		;*		call	far ptr sub_152		;*(1510:3B60)
020A:8B15  9A					db	9Ah
020A:8B16  3B60 1510				dw	3B60h, 1510h
020A:8B1A  89 16 361C				mov	data_420,dx		; (020A:361C=1326h)
020A:8B1E  EB 26				jmp	short loc_1375		; (8B46)
020A:8B20			loc_1373:
020A:8B20  80 F9 65				cmp	cl,65h			; 'e'
020A:8B23  75 0F				jne	loc_1374		; Jump if not equal
020A:8B25  8B 16 361E				mov	dx,data_421		; (020A:361E=9A0h)
020A:8B29  9A 1510:3B60		;*		call	far ptr sub_152		;*(1510:3B60)
020A:8B29  9A					db	9Ah
020A:8B2A  3B60 1510				dw	3B60h, 1510h
020A:8B2E  89 16 361E				mov	data_421,dx		; (020A:361E=9A0h)
020A:8B32  EB 12				jmp	short loc_1375		; (8B46)
020A:8B34			loc_1374:
020A:8B34  80 F9 3E				cmp	cl,3Eh			; '>'
020A:8B37  75 11				jne	loc_1376		; Jump if not equal
020A:8B39  8B 16 361A				mov	dx,data_419		; (020A:361A=1E8Bh)
020A:8B3D  9A 1510:3B60		;*		call	far ptr sub_152		;*(1510:3B60)
020A:8B3D  9A					db	9Ah
020A:8B3E  3B60 1510				dw	3B60h, 1510h
020A:8B42  89 16 361A				mov	data_419,dx		; (020A:361A=1E8Bh)
020A:8B46			loc_1375:
020A:8B46  89 16 40E9				mov	word ptr ds:[40E9h],dx	; (020A:40E9=745Ah)
020A:8B4A			loc_1376:
020A:8B4A  83 3E 3450 FF			cmp	data_351,0FFFFh		; (020A:3450=413Dh)
020A:8B4F  74 19				je	loc_1379		; Jump if equal
020A:8B51  8B 16 3450				mov	dx,data_351		; (020A:3450=413Dh)
020A:8B55  80 3E 327F 08			cmp	byte ptr data_336,8	; (020A:327F='nuineIntel')
020A:8B5A  75 06				jne	loc_1377		; Jump if not equal
020A:8B5C  03 16 3050				add	dx,data_291		; (020A:3050=464Dh)
020A:8B60  EB 04				jmp	short loc_1378		; (8B66)
020A:8B62			loc_1377:
020A:8B62  03 16 40E9				add	dx,word ptr ds:[40E9h]	; (020A:40E9=745Ah)
020A:8B66			loc_1378:
020A:8B66  89 16 40E9				mov	word ptr ds:[40E9h],dx	; (020A:40E9=745Ah)
020A:8B6A			loc_1379:
020A:8B6A  A3 40F7				mov	word ptr ds:[40F7h],ax	; (020A:40F7=3C0Bh)
020A:8B6D  0B C0				or	ax,ax			; Zero ?
020A:8B6F  75 3B				jnz	loc_1382		; Jump if not zero
020A:8B71  8A D3				mov	dl,bl
020A:8B73  80 E2 C7				and	dl,0C7h
020A:8B76  80 FA 46				cmp	dl,46h			; 'F'
020A:8B79  75 31				jne	loc_1382		; Jump if not equal
020A:8B7B  C6 06 306F 02			mov	byte ptr data_300,2	; (020A:306F='OWS\SYSTEM32\COM')
020A:8B80  F6 06 3458 80			test	data_355,80h		; (020A:3458=0A4h)
020A:8B85  75 0A				jnz	loc_1380		; Jump if not zero
020A:8B87  F6 C7 C0				test	bh,0C0h
020A:8B8A  74 05				jz	loc_1380		; Jump if zero
020A:8B8C  9A 1510:0924		;*		call	far ptr sub_129		;*(1510:0924)
020A:8B8C  9A					db	9Ah
020A:8B8D  0924 1510				dw	924h, 1510h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 298

020A:8B91			loc_1380:
020A:8B91  80 3E 303E 01			cmp	data_283,1		; (020A:303E=8Fh)
020A:8B96  75 0C				jne	loc_1381		; Jump if not equal
020A:8B98  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (020A:35F0=74h)
020A:8B9D  74 05				jz	loc_1381		; Jump if zero
020A:8B9F  9A 1510:4188		;*		call	far ptr sub_158		;*(1510:4188)
020A:8B9F  9A					db	9Ah
020A:8BA0  4188 1510				dw	4188h, 1510h
020A:8BA4			loc_1381:
020A:8BA4  80 26 4E10 FB			and	data_494,0FBh		; (020A:4E10=0)
020A:8BA9  E9 0521				jmp	loc_1449		; (90CD)
020A:8BAC			loc_1382:
020A:8BAC  C6 06 4E07 00			mov	byte ptr ds:[4E07h],0	; (020A:4E07=2)
020A:8BB1  F6 C3 38				test	bl,38h			; '8'
020A:8BB4  74 2B				jz	loc_1385		; Jump if zero
020A:8BB6  F6 06 35EE 02			test	data_405,2		; (020A:35EE=2Bh)
020A:8BBB  75 24				jnz	loc_1385		; Jump if not zero
020A:8BBD  8A D3				mov	dl,bl
020A:8BBF  80 E2 C7				and	dl,0C7h
020A:8BC2  80 FA 06				cmp	dl,6
020A:8BC5  74 1A				je	loc_1385		; Jump if equal
020A:8BC7  80 3E 14FA 00			cmp	data_155,0		; (020A:14FA=0)
020A:8BCC  75 07				jne	loc_1383		; Jump if not equal
020A:8BCE  80 3E 3633 01			cmp	byte ptr ds:[3633h],1	; (020A:3633=47h)
020A:8BD3  74 07				je	loc_1384		; Jump if equal
020A:8BD5			loc_1383:
020A:8BD5  F6 06 4E0F 02			test	data_493,2		; (020A:4E0F=30h)
020A:8BDA  74 05				jz	loc_1385		; Jump if zero
020A:8BDC			loc_1384:
020A:8BDC  C6 06 4E07 01			mov	byte ptr ds:[4E07h],1	; (020A:4E07=2)
020A:8BE1			loc_1385:
020A:8BE1  53					push	bx
020A:8BE2  8B 1E 40E9				mov	bx,word ptr ds:[40E9h]	; (020A:40E9=745Ah)
020A:8BE6  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:8BEB  74 08				je	loc_1386		; Jump if equal
020A:8BED  F7 06 4E22 0008			test	data_502,8		; (020A:4E22=348Ah)
020A:8BF3  74 03				jz	loc_1387		; Jump if zero
020A:8BF5			loc_1386:
020A:8BF5  E9 0088				jmp	loc_1392		; (8C80)
020A:8BF8			loc_1387:
020A:8BF8  50					push	ax
020A:8BF9  A1 3037				mov	ax,data_279		; (020A:3037=0Eh)
020A:8BFC  3D 0000				cmp	ax,0
020A:8BFF  75 03				jne	loc_1388		; Jump if not equal
020A:8C01  E8 E5B7				call	sub_83			; (71BB)
020A:8C04			loc_1388:
020A:8C04  3B D8				cmp	bx,ax
020A:8C06  72 73				jb	loc_1391		; Jump if below
020A:8C08  8C C8				mov	ax,cs
020A:8C0A  03 06 2B3D				add	ax,data_233		; (020A:2B3D=0EBADh)
020A:8C0E  8B 16 40F7				mov	dx,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:8C12  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:8C14  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:8C16  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:8C18  D1 EA				shr	dx,1			; Shift w/zeros fill
020A:8C1A  03 D3				add	dx,bx
020A:8C1C  72 5D				jc	loc_1391		; Jump if carry Set
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 299

020A:8C1E  3B D0				cmp	dx,ax
020A:8C20  77 59				ja	loc_1391		; Jump if above
020A:8C22  F6 06 4E16 80			test	byte ptr ds:[4E16h],80h	; (020A:4E16=0)
020A:8C27  74 52				jz	loc_1391		; Jump if zero
020A:8C29  5E					pop	si
020A:8C2A  56					push	si
020A:8C2B  8E C3				mov	es,bx
020A:8C2D  B1 19				mov	cl,19h
020A:8C2F  26: 83 3C 00				cmp	word ptr es:[si],0
020A:8C33  74 08				je	loc_1389		; Jump if equal
020A:8C35  FE C1				inc	cl
020A:8C37  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:8C3B  75 3E				jne	loc_1391		; Jump if not equal
020A:8C3D			loc_1389:
020A:8C3D  C6 06 362E 01			mov	byte ptr ds:[362Eh],1	; (020A:362E=57h)
020A:8C42  57					push	di
020A:8C43  51					push	cx
020A:8C44  8C C0				mov	ax,es
020A:8C46  8B DE				mov	bx,si
020A:8C48  BA 0001				mov	dx,1
020A:8C4B  C6 06 4D4B 01			mov	data_484,1		; (020A:4D4B=0E8h)
020A:8C50  E8 D379				call	sub_63			; (5FCC)
020A:8C53  C6 06 4D4B 00			mov	data_484,0		; (020A:4D4B=0E8h)
020A:8C58  59					pop	cx
020A:8C59  72 1F				jc	loc_1390		; Jump if carry Set
020A:8C5B  BF 532E				mov	di,532Eh
020A:8C5E  89 05				mov	[di],ax
020A:8C60  89 5D 02				mov	[di+2],bx
020A:8C63  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020A:8C67  C6 45 05 02				mov	byte ptr [di+5],2
020A:8C6B  C6 45 06 00				mov	byte ptr [di+6],0
020A:8C6F  88 4D 09				mov	[di+9],cl
020A:8C72  C7 45 07 203F			mov	word ptr [di+7],203Fh
020A:8C77  E8 F966				call	sub_92			; (85E0)
020A:8C7A			loc_1390:
020A:8C7A  5F					pop	di
020A:8C7B			loc_1391:
020A:8C7B  58					pop	ax
020A:8C7C  8B 1E 40E9				mov	bx,word ptr ds:[40E9h]	; (020A:40E9=745Ah)
020A:8C80			loc_1392:
020A:8C80  C6 06 4E16 00			mov	byte ptr ds:[4E16h],0	; (020A:4E16=0)
020A:8C85  F6 06 56C2 02			test	data_578,2		; (020A:56C2=0)
020A:8C8A  74 34				jz	loc_1395		; Jump if zero
020A:8C8C  5B					pop	bx
020A:8C8D  80 26 56C2 FD			and	data_578,0FDh		; (020A:56C2=0)
020A:8C92  C7 06 30C9 0000			mov	data_322,0		; (020A:30C9=4C50h)
020A:8C98  C6 06 4E07 00			mov	byte ptr ds:[4E07h],0	; (020A:4E07=2)
020A:8C9D  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:8CA2  75 19				jne	loc_1394		; Jump if not equal
020A:8CA4  9A 1510:0924		;*		call	far ptr sub_129		;*(1510:0924)
020A:8CA4  9A					db	9Ah
020A:8CA5  0924 1510				dw	924h, 1510h
020A:8CA9  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (020A:35F0=74h)
020A:8CAE  74 05				jz	loc_1393		; Jump if zero
020A:8CB0  9A 1510:4188		;*		call	far ptr sub_158		;*(1510:4188)
020A:8CB0  9A					db	9Ah
020A:8CB1  4188 1510				dw	4188h, 1510h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 300

020A:8CB5			loc_1393:
020A:8CB5  BE 56C3				mov	si,56C3h
020A:8CB8  9A 1510:4160		;*		call	far ptr sub_157		;*(1510:4160)
020A:8CB8  9A					db	9Ah
020A:8CB9  4160 1510				dw	4160h, 1510h
020A:8CBD			loc_1394:
020A:8CBD  E9 040D				jmp	loc_1449		; (90CD)
020A:8CC0			loc_1395:
020A:8CC0  BA 0002				mov	dx,2
020A:8CC3  E8 D306				call	sub_63			; (5FCC)
020A:8CC6  9C					pushf				; Push flags
020A:8CC7  80 3E 4E07 00			cmp	byte ptr ds:[4E07h],0	; (020A:4E07=2)
020A:8CCC  74 3B				je	loc_1399		; Jump if equal
020A:8CCE  9D					popf				; Pop flags
020A:8CCF  9C					pushf				; Push flags
020A:8CD0  73 0E				jnc	loc_1396		; Jump if carry=0
020A:8CD2  26: F6 45 07 20			test	byte ptr es:[di+7],20h	; ' '
020A:8CD7  74 07				jz	loc_1396		; Jump if zero
020A:8CD9  C6 06 4E07 00			mov	byte ptr ds:[4E07h],0	; (020A:4E07=2)
020A:8CDE  EB 29				jmp	short loc_1399		; (8D09)
020A:8CE0			loc_1396:
020A:8CE0  9D					popf				; Pop flags
020A:8CE1  5B					pop	bx
020A:8CE2  F6 06 3458 80			test	data_355,80h		; (020A:3458=0A4h)
020A:8CE7  75 05				jnz	loc_1397		; Jump if not zero
020A:8CE9  9A 1510:0924		;*		call	far ptr sub_129		;*(1510:0924)
020A:8CE9  9A					db	9Ah
020A:8CEA  0924 1510				dw	924h, 1510h
020A:8CEE			loc_1397:
020A:8CEE  80 3E 303E 01			cmp	data_283,1		; (020A:303E=8Fh)
020A:8CF3  75 0C				jne	loc_1398		; Jump if not equal
020A:8CF5  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (020A:35F0=74h)
020A:8CFA  74 05				jz	loc_1398		; Jump if zero
020A:8CFC  9A 1510:4188		;*		call	far ptr sub_158		;*(1510:4188)
020A:8CFC  9A					db	9Ah
020A:8CFD  4188 1510				dw	4188h, 1510h
020A:8D01			loc_1398:
020A:8D01  80 26 4E10 FB			and	data_494,0FBh		; (020A:4E10=0)
020A:8D06  E9 03C4				jmp	loc_1449		; (90CD)
020A:8D09			loc_1399:
020A:8D09  80 3E 2B37 02			cmp	data_228,2		; (020A:2B37=0EBh)
020A:8D0E  75 0D				jne	loc_1400		; Jump if not equal
020A:8D10  F6 06 4E7F 04			test	byte ptr ds:[4E7Fh],4	; (020A:4E7F=60h)
020A:8D15  74 06				jz	loc_1400		; Jump if zero
020A:8D17  BA 0002				mov	dx,2
020A:8D1A  E8 18A7				call	sub_101			; (A5C4)
020A:8D1D			loc_1400:
020A:8D1D  9D					popf				; Pop flags
020A:8D1E  5B					pop	bx
020A:8D1F  72 03				jc	loc_1401		; Jump if carry Set
020A:8D21  E9 011A				jmp	loc_1417		; (8E3E)
020A:8D24			loc_1401:
020A:8D24  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:8D29  75 09				jnz	loc_1402		; Jump if not zero
020A:8D2B  80 3E 3465 04			cmp	byte ptr ds:[3465h],4	; (020A:3465=0AFh)
020A:8D30  74 07				je	loc_1403		; Jump if equal
020A:8D32  EB 0A				jmp	short loc_1404		; (8D3E)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 301

020A:8D34			loc_1402:
020A:8D34  C6 06 4E0A 01			mov	data_490,1		; (020A:4E0A=0B6h)
020A:8D39			loc_1403:
020A:8D39  C6 06 306F 02			mov	byte ptr data_300,2	; (020A:306F='OWS\SYSTEM32\COM')
020A:8D3E			loc_1404:
020A:8D3E  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:8D43  75 26				jne	loc_1406		; Jump if not equal
020A:8D45  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:8D4A  75 1F				jnz	loc_1406		; Jump if not zero
020A:8D4C  26: F6 45 04 40			test	byte ptr es:[di+4],40h	; '@'
020A:8D51  74 15				jz	loc_1405		; Jump if zero
020A:8D53  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:8D58  75 11				jnz	loc_1406		; Jump if not zero
020A:8D5A  80 3E 2B3B 04			cmp	data_231,4		; (020A:2B3B=0A0h)
020A:8D5F  76 0A				jbe	loc_1406		; Jump if below or =
020A:8D61  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:8D66  75 03				jnz	loc_1406		; Jump if not zero
020A:8D68			loc_1405:
020A:8D68  E9 0159				jmp	loc_1424		; (8EC4)
020A:8D6B			loc_1406:
020A:8D6B  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:8D70  75 25				jnz	loc_1408		; Jump if not zero
020A:8D72  80 3E 3465 02			cmp	byte ptr ds:[3465h],2	; (020A:3465=0AFh)
020A:8D77  72 1E				jb	loc_1408		; Jump if below
020A:8D79  80 3E 3465 03			cmp	byte ptr ds:[3465h],3	; (020A:3465=0AFh)
020A:8D7E  77 0F				ja	loc_1407		; Jump if above
020A:8D80  BE 37E1				mov	si,37E1h
020A:8D83  9A 1510:4160		;*		call	far ptr sub_157		;*(1510:4160)
020A:8D83  9A					db	9Ah
020A:8D84  4160 1510				dw	4160h, 1510h
020A:8D88  C6 06 4E11 00			mov	data_495,0		; (020A:4E11=4Eh)
020A:8D8D  EB 08				jmp	short loc_1408		; (8D97)
020A:8D8F			loc_1407:
020A:8D8F  BE 37E9				mov	si,37E9h
020A:8D92  9A 1510:4160		;*		call	far ptr sub_157		;*(1510:4160)
020A:8D92  9A					db	9Ah
020A:8D93  4160 1510				dw	4160h, 1510h
020A:8D97			loc_1408:
020A:8D97  26: F6 45 07 10			test	byte ptr es:[di+7],10h
020A:8D9C  74 6F				jz	loc_1415		; Jump if zero
020A:8D9E  26: 8A 65 04				mov	ah,es:[di+4]
020A:8DA2  80 E4 3F				and	ah,3Fh			; '?'
020A:8DA5  8A C7				mov	al,bh
020A:8DA7  24 F0				and	al,0F0h
020A:8DA9  A8 20				test	al,20h			; ' '
020A:8DAB  74 4E				jz	loc_1413		; Jump if zero
020A:8DAD  F6 C4 10				test	ah,10h
020A:8DB0  75 58				jnz	loc_1414		; Jump if not zero
020A:8DB2  26: 8B 4D 08				mov	cx,es:[di+8]
020A:8DB6  83 F9 0A				cmp	cx,0Ah
020A:8DB9  73 4F				jae	loc_1414		; Jump if above or =
020A:8DBB  3C F0				cmp	al,0F0h
020A:8DBD  75 08				jne	loc_1409		; Jump if not equal
020A:8DBF  26: C7 45 08 0008			mov	word ptr es:[di+8],8
020A:8DC5  EB 28				jmp	short loc_1412		; (8DEF)
020A:8DC7			loc_1409:
020A:8DC7  83 F9 08				cmp	cx,8
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 302

020A:8DCA  73 3E				jae	loc_1414		; Jump if above or =
020A:8DCC  3C E0				cmp	al,0E0h
020A:8DCE  75 08				jne	loc_1410		; Jump if not equal
020A:8DD0  26: C7 45 08 0006			mov	word ptr es:[di+8],6
020A:8DD6  EB 17				jmp	short loc_1412		; (8DEF)
020A:8DD8			loc_1410:
020A:8DD8  83 F9 04				cmp	cx,4
020A:8DDB  73 2D				jae	loc_1414		; Jump if above or =
020A:8DDD  3C B0				cmp	al,0B0h
020A:8DDF  75 08				jne	loc_1411		; Jump if not equal
020A:8DE1  26: C7 45 08 0004			mov	word ptr es:[di+8],4
020A:8DE7  EB 06				jmp	short loc_1412		; (8DEF)
020A:8DE9			loc_1411:
020A:8DE9  26: C7 45 08 0002			mov	word ptr es:[di+8],2
020A:8DEF			loc_1412:
020A:8DEF  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:8DF4  26: 80 4D 04 02			or	byte ptr es:[di+4],2
020A:8DF9  EB 0F				jmp	short loc_1414		; (8E0A)
020A:8DFB			loc_1413:
020A:8DFB  80 FC 01				cmp	ah,1
020A:8DFE  75 0A				jne	loc_1414		; Jump if not equal
020A:8E00  3C 50				cmp	al,50h			; 'P'
020A:8E02  75 06				jne	loc_1414		; Jump if not equal
020A:8E04  26: C7 45 08 000A			mov	word ptr es:[di+8],0Ah
020A:8E0A			loc_1414:
020A:8E0A  E9 0140				jmp	loc_1430		; (8F4D)
020A:8E0D			loc_1415:
020A:8E0D  F6 C7 20				test	bh,20h			; ' '
020A:8E10  75 F8				jnz	loc_1414		; Jump if not zero
020A:8E12  26: 8A 4D 04				mov	cl,es:[di+4]
020A:8E16  80 E1 3F				and	cl,3Fh			; '?'
020A:8E19  80 F9 21				cmp	cl,21h			; '!'
020A:8E1C  75 1D				jne	loc_1416		; Jump if not equal
020A:8E1E  9A 1510:55E4		;*		call	far ptr sub_166		;*(1510:55E4)
020A:8E1E  9A					db	9Ah
020A:8E1F  55E4 1510				dw	55E4h, 1510h
020A:8E23  72 16				jc	loc_1416		; Jump if carry Set
020A:8E25  26: 83 7D 08 02			cmp	word ptr es:[di+8],2
020A:8E2A  72 0F				jb	loc_1416		; Jump if below
020A:8E2C  26: 83 65 08 FE			and	word ptr es:[di+8],0FFFEh
020A:8E31  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:8E36  26: 80 4D 04 22			or	byte ptr es:[di+4],22h	; '"'
020A:8E3B			loc_1416:
020A:8E3B  E9 010F				jmp	loc_1430		; (8F4D)
020A:8E3E			loc_1417:
020A:8E3E  BF 532E				mov	di,532Eh
020A:8E41  A1 40E9				mov	ax,word ptr ds:[40E9h]	; (020A:40E9=745Ah)
020A:8E44  89 05				mov	[di],ax
020A:8E46  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:8E49  89 45 02				mov	[di+2],ax
020A:8E4C  C6 45 04 01				mov	byte ptr [di+4],1
020A:8E50  C6 45 05 04				mov	byte ptr [di+5],4
020A:8E54  80 3E 15D0 01			cmp	data_159,1		; (020A:15D0=0)
020A:8E59  77 04				ja	loc_1418		; Jump if above
020A:8E5B  80 4D 05 01				or	byte ptr [di+5],1
020A:8E5F			loc_1418:
020A:8E5F  C7 45 08 0001			mov	word ptr [di+8],1
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 303

020A:8E64  C7 45 06 0000			mov	word ptr [di+6],0
020A:8E69  80 4D 07 10				or	byte ptr [di+7],10h
020A:8E6D  F6 C7 20				test	bh,20h			; ' '
020A:8E70  74 3D				jz	loc_1423		; Jump if zero
020A:8E72  C7 45 08 0002			mov	word ptr [di+8],2
020A:8E77  C6 45 04 02				mov	byte ptr [di+4],2
020A:8E7B  F6 06 35EE 01			test	data_405,1		; (020A:35EE=2Bh)
020A:8E80  75 24				jnz	loc_1421		; Jump if not zero
020A:8E82  F6 C7 10				test	bh,10h
020A:8E85  74 28				jz	loc_1423		; Jump if zero
020A:8E87  06					push	es
020A:8E88  8E 06 40F5				mov	es,word ptr ds:[40F5h]	; (020A:40F5=744Ch)
020A:8E8C  8B 36 40F7				mov	si,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:8E90  83 FE FC				cmp	si,0FFFCh
020A:8E93  77 0D				ja	loc_1419		; Jump if above
020A:8E95  26: 83 3C 00				cmp	word ptr es:[si],0
020A:8E99  75 07				jne	loc_1419		; Jump if not equal
020A:8E9B  26: 83 7C 02 00			cmp	word ptr es:[si+2],0
020A:8EA0  74 03				je	loc_1420		; Jump if equal
020A:8EA2			loc_1419:
020A:8EA2  07					pop	es
020A:8EA3  EB 05				jmp	short loc_1422		; (8EAA)
020A:8EA5			loc_1420:
020A:8EA5  07					pop	es
020A:8EA6			loc_1421:
020A:8EA6  C6 45 04 04				mov	byte ptr [di+4],4
020A:8EAA			loc_1422:
020A:8EAA  C7 45 08 0004			mov	word ptr [di+8],4
020A:8EAF			loc_1423:
020A:8EAF  E8 F72E				call	sub_92			; (85E0)
020A:8EB2  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (4D46:0006=0FFFFh)
020A:8EB7  E8 C996				call	sub_50			; (5850)
020A:8EBA  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:8EBF  74 03				je	loc_1424		; Jump if equal
020A:8EC1  E9 01C2				jmp	loc_1447		; (9086)
020A:8EC4			loc_1424:
020A:8EC4  C6 06 4E0A 01			mov	data_490,1		; (020A:4E0A=0B6h)
020A:8EC9  C6 06 306F 02			mov	byte ptr data_300,2	; (020A:306F='OWS\SYSTEM32\COM')
020A:8ECE  80 0E 4E10 10			or	data_494,10h		; (020A:4E10=0)
020A:8ED3  80 26 4E10 BF			and	data_494,0BFh		; (020A:4E10=0)
020A:8ED8  26: 80 65 07 EF			and	byte ptr es:[di+7],0EFh
020A:8EDD  80 3E 3465 02			cmp	byte ptr ds:[3465h],2	; (020A:3465=0AFh)
020A:8EE2  74 07				je	loc_1425		; Jump if equal
020A:8EE4  80 3E 3465 04			cmp	byte ptr ds:[3465h],4	; (020A:3465=0AFh)
020A:8EE9  75 11				jne	loc_1426		; Jump if not equal
020A:8EEB			loc_1425:
020A:8EEB  53					push	bx
020A:8EEC  A1 40FD				mov	ax,word ptr ds:[40FDh]	; (020A:40FD=0D606h)
020A:8EEF  26: 8B 5D 02				mov	bx,es:[di+2]
020A:8EF3  9A 1510:039C		;*		call	far ptr sub_120		;*(1510:039C)
020A:8EF3  9A					db	9Ah
020A:8EF4  039C 1510				dw	39Ch, 1510h
020A:8EF8  5B					pop	bx
020A:8EF9  E9 0187				jmp	loc_1446		; (9083)
020A:8EFC			loc_1426:
020A:8EFC  9A 1510:0924		;*		call	far ptr sub_129		;*(1510:0924)
020A:8EFC  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 304

020A:8EFD  0924 1510				dw	924h, 1510h
020A:8F01  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (020A:35F0=74h)
020A:8F06  74 07				jz	loc_1427		; Jump if zero
020A:8F08  9A 1510:4188		;*		call	far ptr sub_158		;*(1510:4188)
020A:8F08  9A					db	9Ah
020A:8F09  4188 1510				dw	4188h, 1510h
020A:8F0D  EB 21				jmp	short loc_1429		; (8F30)
020A:8F0F			loc_1427:
020A:8F0F  B0 53				mov	al,53h			; 'S'
020A:8F11  9A 1510:4104		;*		call	far ptr sub_156		;*(1510:4104)
020A:8F11  9A					db	9Ah
020A:8F12  4104 1510				dw	4104h, 1510h
020A:8F16  72 02				jc	loc_1428		; Jump if carry Set
020A:8F18  B0 44				mov	al,44h			; 'D'
020A:8F1A			loc_1428:
020A:8F1A  0A 06 35DF				or	al,data_396		; (020A:35DF=9Ah)
020A:8F1E  3E: 88 46 00				mov	ds:[bp],al
020A:8F22  45					inc	bp
020A:8F23  B8 3A53				mov	ax,3A53h
020A:8F26  0A 06 35DF				or	al,data_396		; (020A:35DF=9Ah)
020A:8F2A  3E: 89 46 00				mov	ds:[bp],ax
020A:8F2E  45			data_621	db	45h			; Data table (indexed access)
020A:8F2F  45					inc	bp
020A:8F30			loc_1429:
020A:8F30  3E: C6 46 00 5B			mov	byte ptr ds:[bp],5Bh	; '['
020A:8F35  45					inc	bp
020A:8F36  53					push	bx
020A:8F37  A1 40FD				mov	ax,word ptr ds:[40FDh]	; (020A:40FD=0D606h)
020A:8F3A  26: 8B 5D 02				mov	bx,es:[di+2]
020A:8F3E  9A 1510:039C		;*		call	far ptr sub_120		;*(1510:039C)
020A:8F3E  9A					db	9Ah
020A:8F3F  039C 1510				dw	39Ch, 1510h
020A:8F43  5B					pop	bx
020A:8F44  3E: C6 46 00 5D			mov	byte ptr ds:[bp],5Dh	; ']'
020A:8F49  45					inc	bp
020A:8F4A  E9 0136				jmp	loc_1446		; (9083)
020A:8F4D			loc_1430:
020A:8F4D  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:8F52  75 32				jne	loc_1433		; Jump if not equal
020A:8F54  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:8F59  75 2B				jnz	loc_1433		; Jump if not zero
020A:8F5B  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020A:8F60  75 24				jnz	loc_1433		; Jump if not zero
020A:8F62  26: F6 45 07 80			test	byte ptr es:[di+7],80h
020A:8F67  75 1D				jnz	loc_1433		; Jump if not zero
020A:8F69  26: 8B 05				mov	ax,es:[di]
020A:8F6C  3B 06 344A				cmp	ax,data_348		; (020A:344A=414Ch)
020A:8F70  72 11				jb	loc_1432		; Jump if below
020A:8F72  77 0A				ja	loc_1431		; Jump if above
020A:8F74  26: 8B 45 02				mov	ax,es:[di+2]
020A:8F78  3B 06 344C				cmp	ax,data_349		; (020A:344C=5453h)
020A:8F7C  72 05				jb	loc_1432		; Jump if below
020A:8F7E			loc_1431:
020A:8F7E  E8 1B17				call	sub_104			; (AA98)
020A:8F81  72 03				jc	loc_1433		; Jump if carry Set
020A:8F83			loc_1432:
020A:8F83  E9 FF3E				jmp	loc_1424		; (8EC4)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 305

020A:8F86			loc_1433:
020A:8F86  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:8F8B  75 5E				jnz	loc_1440		; Jump if not zero
020A:8F8D  F6 06 3458 40			test	data_355,40h		; (020A:3458=0A4h) '@'
020A:8F92  74 07				jz	loc_1434		; Jump if zero
020A:8F94  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020A:8F99  74 50				jz	loc_1440		; Jump if zero
020A:8F9B			loc_1434:
020A:8F9B  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:8FA0  74 0B				jz	loc_1436		; Jump if zero
020A:8FA2  F6 06 3458 80			test	data_355,80h		; (020A:3458=0A4h)
020A:8FA7  75 02				jnz	loc_1435		; Jump if not zero
020A:8FA9  EB 40				jmp	short loc_1440		; (8FEB)
020A:8FAB			loc_1435:
020A:8FAB  EB 43				jmp	short loc_1441		; (8FF0)
020A:8FAD			loc_1436:
020A:8FAD  F6 C7 C0				test	bh,0C0h
020A:8FB0  74 3E				jz	loc_1441		; Jump if zero
020A:8FB2  26: 8A 45 04				mov	al,es:[di+4]
020A:8FB6  24 3F				and	al,3Fh			; '?'
020A:8FB8  8A E7				mov	ah,bh
020A:8FBA  80 E4 F0				and	ah,0F0h
020A:8FBD  80 FC 40				cmp	ah,40h			; '@'
020A:8FC0  75 0A				jne	loc_1437		; Jump if not equal
020A:8FC2  3C 01				cmp	al,1
020A:8FC4  74 2A				je	loc_1441		; Jump if equal
020A:8FC6  3C 21				cmp	al,21h			; '!'
020A:8FC8  74 26				je	loc_1441		; Jump if equal
020A:8FCA  EB 1F				jmp	short loc_1440		; (8FEB)
020A:8FCC			loc_1437:
020A:8FCC  80 FC A0				cmp	ah,0A0h
020A:8FCF  75 11				jne	loc_1438		; Jump if not equal
020A:8FD1  F6 06 35EE 01			test	data_405,1		; (020A:35EE=2Bh)
020A:8FD6  75 0F				jnz	loc_1439		; Jump if not zero
020A:8FD8  3C 02				cmp	al,2
020A:8FDA  74 14				je	loc_1441		; Jump if equal
020A:8FDC  3C 22				cmp	al,22h			; '"'
020A:8FDE  74 10				je	loc_1441		; Jump if equal
020A:8FE0  EB 09				jmp	short loc_1440		; (8FEB)
020A:8FE2			loc_1438:
020A:8FE2  80 FC B0				cmp	ah,0B0h
020A:8FE5  75 04				jne	loc_1440		; Jump if not equal
020A:8FE7			loc_1439:
020A:8FE7  3C 04				cmp	al,4
020A:8FE9  74 05				je	loc_1441		; Jump if equal
020A:8FEB			loc_1440:
020A:8FEB  9A 1510:0924		;*		call	far ptr sub_129		;*(1510:0924)
020A:8FEB  9A					db	9Ah
020A:8FEC  0924 1510				dw	924h, 1510h
020A:8FF0			loc_1441:
020A:8FF0  80 3E 303E 01			cmp	data_283,1		; (020A:303E=8Fh)
020A:8FF5  75 3B				jne	loc_1443		; Jump if not equal
020A:8FF7  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (020A:35F0=74h)
020A:8FFC  74 07				jz	loc_1442		; Jump if zero
020A:8FFE  9A 1510:4188		;*		call	far ptr sub_158		;*(1510:4188)
020A:8FFE  9A					db	9Ah
020A:8FFF  4188 1510				dw	4188h, 1510h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 306

020A:9003  EB 2D				jmp	short loc_1443		; (9032)
020A:9005			loc_1442:
020A:9005  80 3E 303B 01			cmp	data_281,1		; (020A:303B=0Eh)
020A:900A  74 26				je	loc_1443		; Jump if equal
020A:900C  80 3E 3465 00			cmp	byte ptr ds:[3465h],0	; (020A:3465=0AFh)
020A:9011  75 5C				jne	loc_1445		; Jump if not equal
020A:9013  9A 1510:4104		;*		call	far ptr sub_156		;*(1510:4104)
020A:9013  9A					db	9Ah
020A:9014  4104 1510				dw	4104h, 1510h
020A:9018  73 18				jnc	loc_1443		; Jump if carry=0
020A:901A  B0 53				mov	al,53h			; 'S'
020A:901C  0A 06 35DF				or	al,data_396		; (020A:35DF=9Ah)
020A:9020  3E: 88 46 00				mov	ds:[bp],al
020A:9024  45					inc	bp
020A:9025  3E: 88 46 00				mov	ds:[bp],al
020A:9029  45					inc	bp
020A:902A  3E: C6 46 00 3A			mov	byte ptr ds:[bp],3Ah	; ':'
020A:902F  45					inc	bp
020A:9030  EB 3D				jmp	short loc_1445		; (906F)
020A:9032			loc_1443:
020A:9032  80 3E 3465 00			cmp	byte ptr ds:[3465h],0	; (020A:3465=0AFh)
020A:9037  75 36				jne	loc_1445		; Jump if not equal
020A:9039  26: F6 45 07 40			test	byte ptr es:[di+7],40h	; '@'
020A:903E  74 2F				jz	loc_1445		; Jump if zero
020A:9040  80 3E 362B 90			cmp	byte ptr ds:[362Bh],90h	; (020A:362B=7)
020A:9045  75 28				jne	loc_1445		; Jump if not equal
020A:9047  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:904C  75 21				jne	loc_1445		; Jump if not equal
020A:904E  B0 53				mov	al,53h			; 'S'
020A:9050  9A 1510:4104		;*		call	far ptr sub_156		;*(1510:4104)
020A:9050  9A					db	9Ah
020A:9051  4104 1510				dw	4104h, 1510h
020A:9055  72 02				jc	loc_1444		; Jump if carry Set
020A:9057  B0 44				mov	al,44h			; 'D'
020A:9059			loc_1444:
020A:9059  0A 06 35DF				or	al,data_396		; (020A:35DF=9Ah)
020A:905D  3E: 88 46 00				mov	ds:[bp],al
020A:9061  45					inc	bp
020A:9062  B8 3A53				mov	ax,3A53h
020A:9065  0A 06 35DF				or	al,data_396		; (020A:35DF=9Ah)
020A:9069  3E: 89 46 00				mov	ds:[bp],ax
020A:906D  45					inc	bp
020A:906E  45					inc	bp
020A:906F			loc_1445:
020A:906F  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:9074  75 10				jne	loc_1447		; Jump if not equal
020A:9076  B9 000A				mov	cx,0Ah
020A:9079  9A 1510:2D70		;*		call	far ptr sub_145		;*(1510:2D70)
020A:9079  9A					db	9Ah
020A:907A  2D70 1510				dw	2D70h, 1510h
020A:907E  80 26 4E10 BF			and	data_494,0BFh		; (020A:4E10=0)
020A:9083			loc_1446:
020A:9083  E8 D4C6				call	sub_65			; (654C)
020A:9086			loc_1447:
020A:9086  89 3E 30C9				mov	data_322,di		; (020A:30C9=4C50h)
020A:908A  83 06 30C9 04			add	data_322,4		; (020A:30C9=4C50h)
020A:908F  80 3E 2B3B 06			cmp	data_231,6		; (020A:2B3B=0A0h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 307

020A:9094  72 07				jb	loc_1448		; Jump if below
020A:9096  80 3E 2B36 04			cmp	data_227,4		; (020A:2B36=0ADh)
020A:909B  72 30				jb	loc_1449		; Jump if below
020A:909D			loc_1448:
020A:909D  A1 347A				mov	ax,data_371		; (020A:347A=202Ch)
020A:90A0  A3 347E				mov	data_373,ax		; (020A:347E=0E0AFh)
020A:90A3  A1 347C				mov	ax,data_372		; (020A:347C=0A0ADh)
020A:90A6  A3 3480				mov	data_374,ax		; (020A:3480=0ACA8h)
020A:90A9  A1 3476				mov	ax,data_369		; (020A:3476=20A0h)
020A:90AC  A3 347A				mov	data_371,ax		; (020A:347A=202Ch)
020A:90AF  A1 3478				mov	ax,data_370		; (020A:3478=4253h)
020A:90B2  A3 347C				mov	data_372,ax		; (020A:347C=0A0ADh)
020A:90B5  A1 40F5				mov	ax,word ptr ds:[40F5h]	; (020A:40F5=744Ch)
020A:90B8  A3 3476				mov	data_369,ax		; (020A:3476=20A0h)
020A:90BB  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:90BE  A3 3478				mov	data_370,ax		; (020A:3478=4253h)
020A:90C1  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:90C6  74 05				je	loc_1449		; Jump if equal
020A:90C8  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:90CD			loc_1449:
020A:90CD  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:90D2  9C					pushf				; Push flags
020A:90D3  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:90D8  5A					pop	dx
020A:90D9  8E C2				mov	es,dx
020A:90DB  3B2E			data_622	dw	3B2Eh			; Data table (indexed access)
020A:90DD  16					push	ss
020A:90DE  A1 5A38				mov	ax,word ptr ds:[5A38h]	; (020A:5A38=2B34h)
020A:90E1  75 0A				jnz	loc_1450		; Jump if not zero
020A:90E3  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:90E8  74 03				je	loc_1450		; Jump if equal
020A:90EA  E8 E40F				call	sub_85			; (74FC)
020A:90ED			loc_1450:
020A:90ED  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:90F2  9D					popf				; Pop flags
020A:90F3  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:90F8  5F					pop	di
020A:90F9  5E					pop	si
020A:90FA  5A					pop	dx
020A:90FB  5B					pop	bx
020A:90FC  C3					retn
				sub_95		endp

020A:90FD  87 DB				xchg	bx,bx
020A:90FF  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_96		proc	near
020A:9100  50					push	ax
020A:9101  5652			data_623	dw	5652h			; Data table (indexed access)
020A:9103  57					push	di
020A:9104  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:9109  06					push	es
020A:910A  51					push	cx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 308

020A:910B  C6 06 4E0A 00			mov	data_490,0		; (020A:4E0A=0B6h)
020A:9110  80 3E 309E 4F			cmp	data_313,4Fh		; (020A:309E=55h) 'O'
020A:9115  74 05				je	loc_1451		; Jump if equal
020A:9117  BA 0001				mov	dx,1
020A:911A  EB 03				jmp	short loc_1452		; (911F)
020A:911C			loc_1451:
020A:911C  BA 0004				mov	dx,4
020A:911F			loc_1452:
020A:911F  BF 0000				mov	di,0
020A:9122  80 3E 2B37 02			cmp	data_228,2		; (020A:2B37=0EBh)
020A:9127  75 37				jne	loc_1456		; Jump if not equal
020A:9129  83 FA 04				cmp	dx,4
020A:912C  74 28				je	loc_1454		; Jump if equal
020A:912E  F6 06 4E7F 02			test	byte ptr ds:[4E7Fh],2	; (020A:4E7F=60h)
020A:9133  74 2B				jz	loc_1456		; Jump if zero
020A:9135  F6 06 4E7F 80			test	byte ptr ds:[4E7Fh],80h	; (020A:4E7F=60h)
020A:913A  74 21				jz	loc_1455		; Jump if zero
020A:913C  3B 1E 344A				cmp	bx,data_348		; (020A:344A=414Ch)
020A:9140  75 1B				jne	loc_1455		; Jump if not equal
020A:9142  52					push	dx
020A:9143  8B 16 344C				mov	dx,data_349		; (020A:344C=5453h)
020A:9147  2B D0				sub	dx,ax
020A:9149  73 02				jnc	loc_1453		; Jump if carry=0
020A:914B  F7 D2				not	dx
020A:914D			loc_1453:
020A:914D  81 FA 0080				cmp	dx,80h
020A:9151  5A					pop	dx
020A:9152  72 0C				jc	loc_1456		; Jump if carry Set
020A:9154  EB 07				jmp	short loc_1455		; (915D)
020A:9156			loc_1454:
020A:9156  F6 06 4E7F 01			test	byte ptr ds:[4E7Fh],1	; (020A:4E7F=60h)
020A:915B  74 03				jz	loc_1456		; Jump if zero
020A:915D			loc_1455:
020A:915D  E8 1464				call	sub_101			; (A5C4)
020A:9160			loc_1456:
020A:9160  E8 CE69				call	sub_63			; (5FCC)
020A:9163  73 03				jnc	loc_1457		; Jump if carry=0
020A:9165  E9 0145				jmp	loc_1474		; (92AD)
020A:9168			loc_1457:
020A:9168  83 FB 00				cmp	bx,0
020A:916B  75 08				jne	loc_1458		; Jump if not equal
020A:916D  3D 03FF				cmp	ax,3FFh
020A:9170  77 03				ja	loc_1458		; Jump if above
020A:9172  E9 009B				jmp	loc_1465		; (9210)
020A:9175			loc_1458:
020A:9175  83 3E 30BE 00			cmp	data_321,0		; (020A:30BE=317Eh)
020A:917A  75 50				jne	loc_1462		; Jump if not equal
020A:917C  06					push	es
020A:917D  57					push	di
020A:917E  50					push	ax
020A:917F  8E 06 344A				mov	es,data_348		; (020A:344A=414Ch)
020A:9183  8B 3E 344C				mov	di,data_349		; (020A:344C=5453h)
020A:9187  26: 80 3D EB				cmp	byte ptr es:[di],0EBh
020A:918B  74 12				je	loc_1459		; Jump if equal
020A:918D  26: 80 3D E3				cmp	byte ptr es:[di],0E3h
020A:9191  74 0C				je	loc_1459		; Jump if equal
020A:9193  26: 80 3D 70				cmp	byte ptr es:[di],70h	; 'p'
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 309

020A:9197  72 30				jb	loc_1461		; Jump if below
020A:9199  26: 80 3D 7F				cmp	byte ptr es:[di],7Fh
020A:919D  77 2A				ja	loc_1461		; Jump if above
020A:919F			loc_1459:
020A:919F  F6 06 35EE 02			test	data_405,2		; (020A:35EE=2Bh)
020A:91A4  75 23				jnz	loc_1461		; Jump if not zero
020A:91A6  2B 06 344C				sub	ax,data_349		; (020A:344C=5453h)
020A:91AA  3D 0003				cmp	ax,3
020A:91AD  77 1A				ja	loc_1461		; Jump if above
020A:91AF  3D 0002				cmp	ax,2
020A:91B2  74 0B				je	loc_1460		; Jump if equal
020A:91B4  72 13				jc	loc_1461		; Jump if carry Set
020A:91B6  26: 80 7D 02 90			cmp	byte ptr es:[di+2],90h
020A:91BB  74 02				je	loc_1460		; Jump if equal
020A:91BD  EB 0A				jmp	short loc_1461		; (91C9)
020A:91BF			loc_1460:
020A:91BF  C6 06 309E F5			mov	data_313,0F5h		; (020A:309E=55h)
020A:91C4  58					pop	ax
020A:91C5  5F					pop	di
020A:91C6  07					pop	es
020A:91C7  EB 47				jmp	short loc_1465		; (9210)
020A:91C9			loc_1461:
020A:91C9  58					pop	ax
020A:91CA  5F					pop	di
020A:91CB  07					pop	es
020A:91CC			loc_1462:
020A:91CC  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:91D1  74 3D				je	loc_1465		; Jump if equal
020A:91D3  BF 532E				mov	di,532Eh
020A:91D6  A1 40F5				mov	ax,word ptr ds:[40F5h]	; (020A:40F5=744Ch)
020A:91D9  89 05				mov	[di],ax
020A:91DB  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:91DE  89 45 02				mov	[di+2],ax
020A:91E1  32 C9				xor	cl,cl			; Zero register
020A:91E3  80 3E 309E 4F			cmp	data_313,4Fh		; (020A:309E=55h) 'O'
020A:91E8  74 03				je	loc_1463		; Jump if equal
020A:91EA  E9 0097				jmp	loc_1471		; (9284)
020A:91ED			loc_1463:
020A:91ED  C6 45 04 00				mov	byte ptr [di+4],0
020A:91F1  C6 45 05 08				mov	byte ptr [di+5],8
020A:91F5  80 3E 15D0 01			cmp	data_159,1		; (020A:15D0=0)
020A:91FA  77 04				ja	loc_1464		; Jump if above
020A:91FC  C6 45 05 09				mov	byte ptr [di+5],9
020A:9200			loc_1464:
020A:9200  C6 45 06 00				mov	byte ptr [di+6],0
020A:9204  C6 45 32 00				mov	byte ptr [di+32h],0
020A:9208  C7 45 07 0000			mov	word ptr [di+7],0
020A:920D  E9 008B				jmp	loc_1473		; (929B)
020A:9210			loc_1465:
020A:9210  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:9213  2B 06 344C				sub	ax,data_349		; (020A:344C=5453h)
020A:9217  A3 35F4				mov	word ptr ds:[35F4h],ax	; (020A:35F4=2B40h)
020A:921A  C7 06 35F6 0000			mov	word ptr ds:[35F6h],0	; (020A:35F6=7501h)
020A:9220  3E: C6 46 00 24			mov	byte ptr ds:[bp],24h	; '$'
020A:9225  45					inc	bp
020A:9226  9A 1510:5964		;*		call	far ptr sub_169		;*(1510:5964)
020A:9226  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 310

020A:9227  5964 1510				dw	5964h, 1510h
020A:922B  C6 06 4E0A 01			mov	data_490,1		; (020A:4E0A=0B6h)
020A:9230  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:9233  2B 06 3056				sub	ax,data_294		; (020A:3056=0BB1Bh)
020A:9237  3D 000F				cmp	ax,0Fh
020A:923A  77 02				ja	loc_1466		; Jump if above
020A:923C  EB 04				jmp	short loc_1467		; (9242)
020A:923E			loc_1466:
020A:923E  59					pop	cx
020A:923F  E9 0294				jmp	loc_1499		; (94D6)
020A:9242			loc_1467:
020A:9242  80 3E 309E 4F			cmp	data_313,4Fh		; (020A:309E=55h) 'O'
020A:9247  74 37				je	loc_1470		; Jump if equal
020A:9249  A1 344A				mov	ax,data_348		; (020A:344A=414Ch)
020A:924C  3B 06 40F5				cmp	ax,word ptr ds:[40F5h]	; (020A:40F5=744Ch)
020A:9250  75 2E				jne	loc_1470		; Jump if not equal
020A:9252  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:9255  3D 0010				cmp	ax,10h
020A:9258  76 03				jbe	loc_1468		; Jump if below or =
020A:925A  2D 0010				sub	ax,10h
020A:925D			loc_1468:
020A:925D  3B 06 3056				cmp	ax,data_294		; (020A:3056=0BB1Bh)
020A:9261  73 1D				jae	loc_1470		; Jump if above or =
020A:9263  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:9266  3B 06 35A1				cmp	ax,data_387		; (020A:35A1=509Eh)
020A:926A  76 14				jbe	loc_1470		; Jump if below or =
020A:926C  3D 0280				cmp	ax,280h
020A:926F  76 0C				jbe	loc_1469		; Jump if below or =
020A:9271  2D 0280				sub	ax,280h
020A:9274  3B 06 344C				cmp	ax,data_349		; (020A:344C=5453h)
020A:9278  77 06				ja	loc_1470		; Jump if above
020A:927A  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:927D			loc_1469:
020A:927D  A3 35A1				mov	data_387,ax		; (020A:35A1=509Eh)
020A:9280			loc_1470:
020A:9280  59					pop	cx
020A:9281  E9 0252				jmp	loc_1499		; (94D6)
020A:9284			loc_1471:
020A:9284  C6 45 04 00				mov	byte ptr [di+4],0
020A:9288  C6 45 05 00				mov	byte ptr [di+5],0
020A:928C  80 3E 15D0 01			cmp	data_159,1		; (020A:15D0=0)
020A:9291  77 04				ja	loc_1472		; Jump if above
020A:9293  C6 45 05 01				mov	byte ptr [di+5],1
020A:9297			loc_1472:
020A:9297  C6 45 06 00				mov	byte ptr [di+6],0
020A:929B			loc_1473:
020A:929B  E8 F342				call	sub_92			; (85E0)
020A:929E  26: 8B 3E 0006			mov	di,word ptr es:[6]	; (C88A:0006=0FFFCh)
020A:92A3  89 3E 4E0D				mov	data_492,di		; (020A:4E0D=0B006h)
020A:92A7  E8 C5A6				call	sub_50			; (5850)
020A:92AA  E9 00AA				jmp	loc_1481		; (9357)
020A:92AD			loc_1474:
020A:92AD  89 3E 4E0D				mov	data_492,di		; (020A:4E0D=0B006h)
020A:92B1  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:92B6  75 21				jnz	loc_1475		; Jump if not zero
020A:92B8  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:92BD  75 24				jne	loc_1476		; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 311

020A:92BF  26: F6 45 05 40			test	byte ptr es:[di+5],40h	; '@'
020A:92C4  75 1D				jnz	loc_1476		; Jump if not zero
020A:92C6  A1 344A				mov	ax,data_348		; (020A:344A=414Ch)
020A:92C9  26: 3B 05				cmp	ax,es:[di]
020A:92CC  77 0B				ja	loc_1475		; Jump if above
020A:92CE  72 13				jc	loc_1476		; Jump if carry Set
020A:92D0  A1 344C				mov	ax,data_349		; (020A:344C=5453h)
020A:92D3  26: 3B 45 02				cmp	ax,es:[di+2]
020A:92D7  76 0A				jbe	loc_1476		; Jump if below or =
020A:92D9			loc_1475:
020A:92D9  C6 06 35DE 01			mov	data_395,1		; (020A:35DE=10h)
020A:92DE  C6 06 4E08 01			mov	data_489,1		; (020A:4E08=0EBh)
020A:92E3			loc_1476:
020A:92E3  B9 003B				mov	cx,3Bh
020A:92E6  80 3E 309E 4F			cmp	data_313,4Fh		; (020A:309E=55h) 'O'
020A:92EB  74 3A				je	loc_1479		; Jump if equal
020A:92ED  B9 0007				mov	cx,7
020A:92F0  A1 344A				mov	ax,data_348		; (020A:344A=414Ch)
020A:92F3  3B 06 40F5				cmp	ax,word ptr ds:[40F5h]	; (020A:40F5=744Ch)
020A:92F7  75 2E				jne	loc_1479		; Jump if not equal
020A:92F9  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:92FC  3D 0010				cmp	ax,10h
020A:92FF  76 03				jbe	loc_1477		; Jump if below or =
020A:9301  2D 0010				sub	ax,10h
020A:9304			loc_1477:
020A:9304  3B			data_624	db	3Bh
020A:9305  06					push	es
020A:9306  56					push	si
020A:9307  30 73 1D				xor	[bp+di+1Dh],dh
020A:930A  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:930D  3B 06 35A1				cmp	ax,data_387		; (020A:35A1=509Eh)
020A:9311  76 14				jbe	loc_1479		; Jump if below or =
020A:9313  3D 0280				cmp	ax,280h
020A:9316  76 0C				jbe	loc_1478		; Jump if below or =
020A:9318  2D 0280				sub	ax,280h
020A:931B  3B 06 344C				cmp	ax,data_349		; (020A:344C=5453h)
020A:931F  77 06				ja	loc_1479		; Jump if above
020A:9321  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:9324			loc_1478:
020A:9324  A3 35A1				mov	data_387,ax		; (020A:35A1=509Eh)
020A:9327			loc_1479:
020A:9327  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:932C  75 29				jne	loc_1481		; Jump if not equal
020A:932E  9A 1510:2D70		;*		call	far ptr sub_145		;*(1510:2D70)
020A:932E  9A					db	9Ah
020A:932F  2D70 1510				dw	2D70h, 1510h
020A:9333  81 FD 2D1B				cmp	bp,2D1Bh
020A:9337  72 1E				jb	loc_1481		; Jump if below
020A:9339  81 FD 2DD4				cmp	bp,2DD4h
020A:933D  73 18				jae	loc_1481		; Jump if above or =
020A:933F  80 3E 2DAD 28			cmp	data_267,28h		; (020A:2DAD=65h) '('
020A:9344  74 11				je	loc_1481		; Jump if equal
020A:9346  F6 06 15D0 02			test	data_159,2		; (020A:15D0=0)
020A:934B  74 07				jz	loc_1480		; Jump if zero
020A:934D  9A 1510:55E4		;*		call	far ptr sub_166		;*(1510:55E4)
020A:934D  9A					db	9Ah
020A:934E  55E4 1510				dw	55E4h, 1510h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 312

020A:9352  73 03				jnc	loc_1481		; Jump if carry=0
020A:9354			loc_1480:
020A:9354  E8 108D				call	sub_99			; (A3E4)
020A:9357			loc_1481:
020A:9357  80 3E 309E 4F			cmp	data_313,4Fh		; (020A:309E=55h) 'O'
020A:935C  74 03				je	loc_1482		; Jump if equal
020A:935E  E9 0102				jmp	loc_1493		; (9463)
020A:9361			loc_1482:
020A:9361  59					pop	cx
020A:9362  51					push	cx
020A:9363  F6 C1 02				test	cl,2
020A:9366  74 0E				jz	loc_1484		; Jump if zero
020A:9368  26: 8A 45 04				mov	al,es:[di+4]
020A:936C  24 07				and	al,7
020A:936E  74 03				jz	loc_1483		; Jump if zero
020A:9370  E9 00F0				jmp	loc_1493		; (9463)
020A:9373			loc_1483:
020A:9373  E9 00A7				jmp	loc_1489		; (941D)
020A:9376			loc_1484:
020A:9376  26: F6 45 04 18			test	byte ptr es:[di+4],18h
020A:937B  75 12				jnz	loc_1486		; Jump if not zero
020A:937D  F7 06 4E22 0400			test	data_502,400h		; (020A:4E22=348Ah)
020A:9383  75 07				jnz	loc_1485		; Jump if not zero
020A:9385  80 3E 327F 01			cmp	byte ptr data_336,1	; (020A:327F='nuineIntel')
020A:938A  75 03				jne	loc_1486		; Jump if not equal
020A:938C			loc_1485:
020A:938C  E9 008E				jmp	loc_1489		; (941D)
020A:938F			loc_1486:
020A:938F  26: 8B 05				mov	ax,es:[di]
020A:9392  A3 3466				mov	word ptr ds:[3466h],ax	; (020A:3466=0E0AEh)
020A:9395  26: 8B 45 02				mov	ax,es:[di+2]
020A:9399  A3 3468				mov	data_362,ax		; (020A:3468=0A0E2h)
020A:939C  80 0E 3459 02			or	data_356,2		; (020A:3459=0ABh)
020A:93A1  C7 06 3484 FFFF			mov	data_376,0FFFFh		; (020A:3484=0D3Ah)
020A:93A7  26: 8A 45 32				mov	al,es:[di+32h]
020A:93AB  24 38				and	al,38h			; '8'
020A:93AD  3C 38				cmp	al,38h			; '8'
020A:93AF  75 6C				jne	loc_1489		; Jump if not equal
020A:93B1  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:93B6  74 05				jz	loc_1487		; Jump if zero
020A:93B8  C6 06 53D7 01			mov	data_562,1		; (020A:53D7=8Bh)
020A:93BD			loc_1487:
020A:93BD  C6 06 3459 05			mov	data_356,5		; (020A:3459=0ABh)
020A:93C2  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:93C7  75 54				jne	loc_1489		; Jump if not equal
020A:93C9  C6 06 5709 86			mov	data_579,86h		; (020A:5709=3)
020A:93CE  51					push	cx
020A:93CF  57					push	di
020A:93D0  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:93D5  06					push	es
020A:93D6  E8 DDC4				call	sub_78			; (719D)
020A:93D9  55					push	bp
020A:93DA  E8 D37B				call	sub_66			; (6758)
020A:93DD  8B FD				mov	di,bp
020A:93DF  5D					pop	bp
020A:93E0  BE 40A3				mov	si,40A3h
020A:93E3  B9 40BB				mov	cx,40BBh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 313

020A:93E6  81 E9 40A1				sub	cx,40A1h
020A:93EA  83 E9 02				sub	cx,2
020A:93ED  FC					cld				; Clear direction
020A:93EE  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:93F0  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:93F5  9C					pushf				; Push flags
020A:93F6  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:93FB  5A					pop	dx
020A:93FC  8E C2				mov	es,dx
020A:93FE  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:9403  5A					pop	dx
020A:9404  75 0A				jnz	loc_1488		; Jump if not zero
020A:9406  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:940B  74 03				je	loc_1488		; Jump if equal
020A:940D  E8 E0EC				call	sub_85			; (74FC)
020A:9410			loc_1488:
020A:9410  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:9415  9D					popf				; Pop flags
020A:9416  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:941B  5F					pop	di
020A:941C  59					pop	cx
020A:941D			loc_1489:
020A:941D  26: 8A 45 04				mov	al,es:[di+4]
020A:9421  A8 01				test	al,1
020A:9423  74 04				jz	loc_1490		; Jump if zero
020A:9425  A8 02				test	al,2
020A:9427  75 14				jnz	loc_1491		; Jump if not zero
020A:9429			loc_1490:
020A:9429  0C 03				or	al,3
020A:942B  26: 88 45 04				mov	es:[di+4],al
020A:942F  57					push	di
020A:9430  83 C7 09				add	di,9
020A:9433  BE 35FA				mov	si,35FAh
020A:9436  B9 0029				mov	cx,29h
020A:9439  FC					cld				; Clear direction
020A:943A  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:943C  5F					pop	di
020A:943D			loc_1491:
020A:943D  26: 8A 45 32				mov	al,es:[di+32h]
020A:9441  A8 80				test	al,80h
020A:9443  74 0D				jz	loc_1492		; Jump if zero
020A:9445  26: 8B 4D 33				mov	cx,es:[di+33h]
020A:9449  C6 06 35DD 01			mov	data_394,1		; (020A:35DD=23h)
020A:944E  89 0E 361A				mov	data_419,cx		; (020A:361A=1E8Bh)
020A:9452			loc_1492:
020A:9452  A8 40				test	al,40h			; '@'
020A:9454  74 0D				jz	loc_1493		; Jump if zero
020A:9456  26: 8B 4D 35				mov	cx,es:[di+35h]
020A:945A  C6 06 35DD 01			mov	data_394,1		; (020A:35DD=23h)
020A:945F  89 0E 3618				mov	data_418,cx		; (020A:3618=0A4F3h)
020A:9463			loc_1493:
020A:9463  80 3E 2B3B 06			cmp	data_231,6		; (020A:2B3B=0A0h)
020A:9468  72 07				jb	loc_1494		; Jump if below
020A:946A  80 3E 2B36 04			cmp	data_227,4		; (020A:2B36=0ADh)
020A:946F  72 13				jb	loc_1496		; Jump if below
020A:9471			loc_1494:
020A:9471  80 3E 309E 4F			cmp	data_313,4Fh		; (020A:309E=55h) 'O'
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 314

020A:9476  74 07				je	loc_1495		; Jump if equal
020A:9478  26: F6 45 04 20			test	byte ptr es:[di+4],20h	; ' '
020A:947D  75 05				jnz	loc_1496		; Jump if not zero
020A:947F			loc_1495:
020A:947F  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:9484			loc_1496:
020A:9484  59					pop	cx
020A:9485  80 3E 309E 4F			cmp	data_313,4Fh		; (020A:309E=55h) 'O'
020A:948A  75 0C				jne	loc_1497		; Jump if not equal
020A:948C  F6 C1 01				test	cl,1
020A:948F  74 45				jz	loc_1499		; Jump if zero
020A:9491  26: 80 4D 04 80			or	byte ptr es:[di+4],80h
020A:9496  EB 3E				jmp	short loc_1499		; (94D6)
020A:9498			loc_1497:
020A:9498  F6 C1 04				test	cl,4
020A:949B  75 18				jnz	loc_1498		; Jump if not zero
020A:949D  A1 346E				mov	ax,data_365		; (020A:346E=0A0A4h)
020A:94A0  A3 3472				mov	data_367,ax		; (020A:3472=0A2EBh)
020A:94A3  A1 3470				mov	ax,data_366		; (020A:3470=0A22Dh)
020A:94A6  A3 3474				mov	data_368,ax		; (020A:3474=0A4AEh)
020A:94A9  A1 346A				mov	ax,data_363		; (020A:346A=0A220h)
020A:94AC  A3 346E				mov	data_365,ax		; (020A:346E=0A0A4h)
020A:94AF  A1 346C				mov	ax,data_364		; (020A:346C=0AEA2h)
020A:94B2  A3 3470				mov	data_366,ax		; (020A:3470=0A22Dh)
020A:94B5			loc_1498:
020A:94B5  A1 40F5				mov	ax,word ptr ds:[40F5h]	; (020A:40F5=744Ch)
020A:94B8  A3 346A				mov	data_363,ax		; (020A:346A=0A220h)
020A:94BB  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:94BE  A3 346C				mov	data_364,ax		; (020A:346C=0AEA2h)
020A:94C1  89 3E 4E0B				mov	data_491,di		; (020A:4E0B=0C601h)
020A:94C5  F6 C1 08				test	cl,8
020A:94C8  74 0C				jz	loc_1499		; Jump if zero
020A:94CA  9A 1510:55E4		;*		call	far ptr sub_166		;*(1510:55E4)
020A:94CA  9A					db	9Ah
020A:94CB  55E4 1510				dw	55E4h, 1510h
020A:94CF  72 05				jc	loc_1499		; Jump if carry Set
020A:94D1  26: C6 45 06 FF			mov	byte ptr es:[di+6],0FFh
020A:94D6			loc_1499:
020A:94D6  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:94DB  9C					pushf				; Push flags
020A:94DC  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:94E1  5A					pop	dx
020A:94E2  8E C2				mov	es,dx
020A:94E4  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:94E9  5A					pop	dx
020A:94EA  75 0A				jnz	loc_1500		; Jump if not zero
020A:94EC  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:94F1  74 03				je	loc_1500		; Jump if equal
020A:94F3  E8 E006				call	sub_85			; (74FC)
020A:94F6			loc_1500:
020A:94F6  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:94FB  9D					popf				; Pop flags
020A:94FC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:9501  5F					pop	di
020A:9502  5E					pop	si
020A:9503  5A					pop	dx
020A:9504  58					pop	ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 315

020A:9505  C3					retn
				sub_96		endp

020A:9506  000E[00]				db	14 dup (0)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_97		proc	near
020A:9514  B4 04				mov	ah,4
020A:9516  E8 C2E3				call	sub_49			; (57FC)
020A:9519  E8 BF50				call	sub_39			; (546C)
020A:951C  E8 DC7E				call	sub_78			; (719D)
020A:951F  E8 DC99				call	sub_83			; (71BB)
020A:9522  A3 3037				mov	word ptr ds:[3037h],ax	; (ss:3037=3B2Dh)
020A:9525  E8 15E0				call	sub_105			; (AB08)
020A:9528  A1 2CC8				mov	ax,word ptr ds:[2CC8h]	; (ss:2CC8=0C422h)
020A:952B  3D 0000				cmp	ax,0
020A:952E  75 0D				jne	loc_1501		; Jump if not equal
020A:9530  83 3E 2CC6 00			cmp	word ptr ds:[2CC6h],0	; (ss:2CC6=545h)
020A:9535  75 06				jne	loc_1501		; Jump if not equal
020A:9537  B8 0002				mov	ax,2
020A:953A  E9 0D33				jmp	loc_1647		; (A270)
020A:953D			loc_1501:
020A:953D  83 3E 2BEB 00			cmp	word ptr ds:[2BEBh],0	; (ss:2BEB=15D0h)
020A:9542  75 07				jne	loc_1502		; Jump if not equal
020A:9544  83 3E 2BED 00			cmp	word ptr ds:[2BEDh],0	; (ss:2BED=7701h)
020A:9549  74 0E				je	loc_1503		; Jump if equal
020A:954B			loc_1502:
020A:954B  A1 2BEB				mov	ax,word ptr ds:[2BEBh]	; (ss:2BEB=15D0h)
020A:954E  A3 2CC8				mov	word ptr ds:[2CC8h],ax	; (ss:2CC8=0C422h)
020A:9551  A1 2BED				mov	ax,word ptr ds:[2BEDh]	; (ss:2BED=7701h)
020A:9554  A3 2CC6				mov	word ptr ds:[2CC6h],ax	; (ss:2CC6=545h)
020A:9557  EB 2F				jmp	short loc_1506		; (9588)
020A:9559			loc_1503:
020A:9559  83 3E 2BE7 00			cmp	word ptr ds:[2BE7h],0	; (ss:2BE7=2603h)
020A:955E  75 07				jne	loc_1504		; Jump if not equal
020A:9560  83 3E 2BE9 00			cmp	word ptr ds:[2BE9h],0	; (ss:2BE9=3E80h)
020A:9565  74 21				je	loc_1506		; Jump if equal
020A:9567			loc_1504:
020A:9567  A1 2CC6				mov	ax,word ptr ds:[2CC6h]	; (ss:2CC6=545h)
020A:956A  2B 06 2BE9				sub	ax,word ptr ds:[2BE9h]	; (ss:2BE9=3E80h)
020A:956E  A3 2CC6				mov	word ptr ds:[2CC6h],ax	; (ss:2CC6=545h)
020A:9571  A1 2CC8				mov	ax,word ptr ds:[2CC8h]	; (ss:2CC8=0C422h)
020A:9574  73 01				jnc	loc_1505		; Jump if carry=0
020A:9576  48					dec	ax
020A:9577			loc_1505:
020A:9577  2B 06 2BE7				sub	ax,word ptr ds:[2BE7h]	; (ss:2BE7=2603h)
020A:957B  A3 2CC8				mov	word ptr ds:[2CC8h],ax	; (ss:2CC8=0C422h)
020A:957E  73 08				jnc	loc_1506		; Jump if carry=0
020A:9580  C6 06 1DD8 43			mov	byte ptr ds:[1DD8h],43h	; (ss:1DD8=2Eh) 'C'
020A:9585  E9 0149				jmp	loc_1523		; (96D1)
020A:9588			loc_1506:
020A:9588  A1 2CC8				mov	ax,word ptr ds:[2CC8h]	; (ss:2CC8=0C422h)
020A:958B  8B D8				mov	bx,ax
020A:958D  83 E3 F0				and	bx,0FFF0h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 316

020A:9590  C6 06 1DD8 41			mov	byte ptr ds:[1DD8h],41h	; (ss:1DD8=2Eh) 'A'
020A:9595  74 03				jz	loc_1507		; Jump if zero
020A:9597  E9 00D5				jmp	loc_1516		; (966F)
020A:959A			loc_1507:
020A:959A  B1 0C				mov	cl,0Ch
020A:959C  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:959E  8B 1E 2CC6				mov	bx,word ptr ds:[2CC6h]	; (ss:2CC6=545h)
020A:95A2  B1 04				mov	cl,4
020A:95A4  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:95A6  03 D8				add	bx,ax
020A:95A8  43					inc	bx
020A:95A9  43					inc	bx
020A:95AA  83 FB 01				cmp	bx,1
020A:95AD  C6 06 1DD8 42			mov	byte ptr ds:[1DD8h],42h	; (ss:1DD8=2Eh) 'B'
020A:95B2  76 28				jbe	loc_1510		; Jump if below or =
020A:95B4  8B D3				mov	dx,bx
020A:95B6  BB 0008				mov	bx,8
020A:95B9  33 C0				xor	ax,ax			; Zero register
020A:95BB  33 C9				xor	cx,cx			; Zero register
020A:95BD			loc_1508:
020A:95BD  03 8F 2BED				add	cx,word ptr ds:[2BEDh][bx]	; (ss:2BED=7701h)
020A:95C1  73 01				jnc	loc_1509		; Jump if carry=0
020A:95C3  40					inc	ax
020A:95C4			loc_1509:
020A:95C4  03 87 2BEB				add	ax,word ptr ds:[2BEBh][bx]	; (ss:2BEB=15D0h)
020A:95C8  83 C3 08				add	bx,8
020A:95CB  83 FB 20				cmp	bx,20h
020A:95CE  76 ED				jbe	loc_1508		; Jump if below or =
020A:95D0  8B D8				mov	bx,ax
020A:95D2  83 E3 F0				and	bx,0FFF0h
020A:95D5  C6 06 1DD8 49			mov	byte ptr ds:[1DD8h],49h	; (ss:1DD8=2Eh) 'I'
020A:95DA  74 03				jz	loc_1511		; Jump if zero
020A:95DC			loc_1510:
020A:95DC  E9 0090				jmp	loc_1516		; (966F)
020A:95DF			loc_1511:
020A:95DF  8B D9				mov	bx,cx
020A:95E1  B1 0C				mov	cl,0Ch
020A:95E3  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:95E5  B1 04				mov	cl,4
020A:95E7  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:95E9  03 D8				add	bx,ax
020A:95EB  72 EF				jc	loc_1510		; Jump if carry Set
020A:95ED  43					inc	bx
020A:95EE  0B DB				or	bx,bx			; Zero ?
020A:95F0  C6 06 1DD8 4A			mov	byte ptr ds:[1DD8h],4Ah	; (ss:1DD8=2Eh) 'J'
020A:95F5  74 78				jz	loc_1516		; Jump if zero
020A:95F7  03 D3				add	dx,bx
020A:95F9  72 74				jc	loc_1516		; Jump if carry Set
020A:95FB  E8 DBBD				call	sub_83			; (71BB)
020A:95FE  8C C9				mov	cx,cs
020A:9600  2B C1				sub	ax,cx
020A:9602  8B 0E 2B3D				mov	cx,word ptr ds:[2B3Dh]	; (ss:2B3D=0BF00h)
020A:9606  2B C8				sub	cx,ax
020A:9608  72 31				jc	loc_1513		; Jump if carry Set
020A:960A  83 E9 20				sub	cx,20h
020A:960D  72 2C				jc	loc_1513		; Jump if carry Set
020A:960F  3B CA				cmp	cx,dx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 317

020A:9611  76 5C				jbe	loc_1516		; Jump if below or =
020A:9613  83 3E 3035 00			cmp	word ptr ds:[3035h],0	; (ss:3035=0AB06h)
020A:9618  74 23				je	loc_1514		; Jump if equal
020A:961A  BB FFFF				mov	bx,0FFFFh
020A:961D  E8 DB98				call	sub_82			; (71B8)
020A:9620  05 1000				add	ax,1000h
020A:9623  3B 06 3035				cmp	ax,word ptr ds:[3035h]	; (ss:3035=0AB06h)
020A:9627  76 0B				jbe	loc_1512		; Jump if below or =
020A:9629  2B 06 3035				sub	ax,word ptr ds:[3035h]	; (ss:3035=0AB06h)
020A:962D  B1 04				mov	cl,4
020A:962F  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:9631  2B D8				sub	bx,ax
020A:9633  4B					dec	bx
020A:9634			loc_1512:
020A:9634  89 1E 4E82				mov	word ptr ds:[4E82h],bx	; (ss:4E82=1022h)
020A:9638  E9 009C				jmp	loc_1524		; (96D7)
020A:963B			loc_1513:
020A:963B  EB 5D				jmp	short loc_1518		; (969A)
020A:963D			loc_1514:
020A:963D  B8 FFFF				mov	ax,0FFFFh
020A:9640  2D 2C44				sub	ax,2C44h
020A:9643  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:9645  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:9647  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:9649  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:964B  2B CA				sub	cx,dx
020A:964D  3B C8				cmp	cx,ax
020A:964F  73 02				jae	loc_1515		; Jump if above or =
020A:9651  8B C1				mov	ax,cx
020A:9653			loc_1515:
020A:9653  01 06 3037				add	word ptr ds:[3037h],ax	; (ss:3037=3B2Dh)
020A:9657  E8 DB5E				call	sub_82			; (71B8)
020A:965A  8B D8				mov	bx,ax
020A:965C  A1 3037				mov	ax,word ptr ds:[3037h]	; (ss:3037=3B2Dh)
020A:965F  2B C3				sub	ax,bx
020A:9661  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:9663  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:9665  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:9667  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:9669  48					dec	ax
020A:966A  A3 4E82				mov	word ptr ds:[4E82h],ax	; (ss:4E82=1022h)
020A:966D  EB 68				jmp	short loc_1524		; (96D7)
020A:966F			loc_1516:
020A:966F  E8 DB49				call	sub_83			; (71BB)
020A:9672  8C C9				mov	cx,cs
020A:9674  2B C1				sub	ax,cx
020A:9676  8B 0E 2B3D				mov	cx,word ptr ds:[2B3Dh]	; (ss:2B3D=0BF00h)
020A:967A  2B C8				sub	cx,ax
020A:967C  8B D1				mov	dx,cx
020A:967E  B1 04				mov	cl,4
020A:9680  D3 C2				rol	dx,cl			; Rotate
020A:9682  8B CA				mov	cx,dx
020A:9684  83 E1 0F				and	cx,0Fh
020A:9687  83 E2 F0				and	dx,0FFF0h
020A:968A  A1 2CC8				mov	ax,word ptr ds:[2CC8h]	; (ss:2CC8=0C422h)
020A:968D  8B 1E 2CC6				mov	bx,word ptr ds:[2CC6h]	; (ss:2CC6=545h)
020A:9691  2B DA				sub	bx,dx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 318

020A:9693  73 01				jnc	loc_1517		; Jump if carry=0
020A:9695  48					dec	ax
020A:9696			loc_1517:
020A:9696  2B C1				sub	ax,cx
020A:9698  EB 07				jmp	short loc_1519		; (96A1)
020A:969A			loc_1518:
020A:969A  A1 2CC8				mov	ax,word ptr ds:[2CC8h]	; (ss:2CC8=0C422h)
020A:969D  8B 1E 2CC6				mov	bx,word ptr ds:[2CC6h]	; (ss:2CC6=545h)
020A:96A1			loc_1519:
020A:96A1  BE 0008				mov	si,8
020A:96A4			loc_1520:
020A:96A4  03 9C 2BED				add	bx,word ptr ds:[2BEDh][si]	; (ss:2BED=7701h)
020A:96A8  73 01				jnc	loc_1521		; Jump if carry=0
020A:96AA  40					inc	ax
020A:96AB			loc_1521:
020A:96AB  03 84 2BEB				add	ax,word ptr ds:[2BEBh][si]	; (ss:2BEB=15D0h)
020A:96AF  83 C6 08				add	si,8
020A:96B2  83 FE 20				cmp	si,20h
020A:96B5  76 ED				jbe	loc_1520		; Jump if below or =
020A:96B7  B9 000A				mov	cx,0Ah

020A:96BA			locloop_1522:
020A:96BA  D1 E8				shr	ax,1			; Shift w/zeros fill
020A:96BC  D1 DB				rcr	bx,1			; Rotate thru carry
020A:96BE  E2 FA				loop	locloop_1522		; Loop if cx > 0

020A:96C0  3D 0000				cmp	ax,0
020A:96C3  75 0C				jne	loc_1523		; Jump if not equal
020A:96C5  8B C3				mov	ax,bx
020A:96C7  B3 01				mov	bl,1
020A:96C9  BD 1DBA				mov	bp,1DBAh
020A:96CC  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:96CC  9A					db	9Ah
020A:96CD  0288 1510				dw	288h, 1510h
020A:96D1			loc_1523:
020A:96D1  B8 0008				mov	ax,8
020A:96D4  E9 0B99				jmp	loc_1647		; (A270)
020A:96D7			loc_1524:
020A:96D7  8B 1E 2B3D				mov	bx,word ptr ds:[2B3Dh]	; (ss:2B3D=0BF00h)
020A:96DB  8E 06 5618				mov	es,word ptr ds:[5618h]	; (ss:5618=1689h)
020A:96DF  B4 4A				mov	ah,4Ah
020A:96E1  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change memory allocation
										;   bx=bytes/16, es=mem segment
020A:96E3  73 07				jnc	loc_1525		; Jump if carry=0
020A:96E5  C6 06 1DD8 44			mov	byte ptr ds:[1DD8h],44h	; (ss:1DD8=2Eh) 'D'
020A:96EA  EB E5				jmp	short loc_1523		; (96D1)
020A:96EC			loc_1525:
020A:96EC  8C C8				mov	ax,cs
020A:96EE  03 06 2B3D				add	ax,word ptr ds:[2B3Dh]	; (ss:2B3D=0BF00h)
020A:96F2  2D 0010				sub	ax,10h
020A:96F5  8B D0				mov	dx,ax
020A:96F7  A1 3037				mov	ax,word ptr ds:[3037h]	; (ss:3037=3B2Dh)
020A:96FA  8E C0				mov	es,ax
020A:96FC  2B D0				sub	dx,ax
020A:96FE			loc_1526:
020A:96FE  8B C2				mov	ax,dx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 319

020A:9700  25 F000				and	ax,0F000h
020A:9703  74 17				jz	loc_1527		; Jump if zero
020A:9705  81 EA 1000				sub	dx,1000h
020A:9709  B9 8000				mov	cx,8000h
020A:970C  33 FF				xor	di,di			; Zero register
020A:970E  33 C0				xor	ax,ax			; Zero register
020A:9710  FC					cld				; Clear direction
020A:9711  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:9713  8C C0				mov	ax,es
020A:9715  05 1000				add	ax,1000h
020A:9718  8E C0				mov	es,ax
020A:971A  EB E2				jmp	short loc_1526		; (96FE)
020A:971C			loc_1527:
020A:971C  B1 03				mov	cl,3
020A:971E  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:9720  8B CA				mov	cx,dx
020A:9722  33 FF				xor	di,di			; Zero register
020A:9724  33 C0				xor	ax,ax			; Zero register
020A:9726  FC					cld				; Clear direction
020A:9727  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:9729  C7 06 2B39 0040			mov	word ptr ds:[2B39h],40h	; (ss:2B39=1199h)
020A:972F  9A 1510:2C58		;*		call	far ptr sub_144		;*(1510:2C58)
020A:972F  9A					db	9Ah
020A:9730  2C58 1510				dw	2C58h, 1510h
020A:9734  E8 DA66				call	sub_78			; (719D)
020A:9737  A1 3037				mov	ax,word ptr ds:[3037h]	; (ss:3037=3B2Dh)
020A:973A  A3 3039				mov	word ptr ds:[3039h],ax	; (ss:3039=802Ah)
020A:973D  05 0010				add	ax,10h
020A:9740  A3 2BE2				mov	word ptr ds:[2BE2h],ax	; (ss:2BE2=8ED8h)
020A:9743  A3 2BE4				mov	word ptr ds:[2BE4h],ax	; (ss:2BE4=1FC0h)
020A:9746  80 3E 327E 03			cmp	byte ptr ds:[327Eh],3	; (ss:327E=0B0h)
020A:974B  75 1F				jne	loc_1529		; Jump if not equal
020A:974D  80 3E 2BE6 00			cmp	byte ptr ds:[2BE6h],0	; (ss:2BE6=0B4h)
020A:9752  75 02				jne	loc_1528		; Jump if not equal
020A:9754  EB 1F				jmp	short loc_1530		; (9775)
020A:9756			loc_1528:
020A:9756  C6 06 327E 07			mov	byte ptr ds:[327Eh],7	; (ss:327E=0B0h)
020A:975B  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (ss:327F=29h)
020A:9760  73 0A				jae	loc_1529		; Jump if above or =
020A:9762  C6 06 327F 07			mov	byte ptr ds:[327Fh],7	; (ss:327F=29h)
020A:9767  9A 1510:2B70		;*		call	far ptr sub_142		;*(1510:2B70)
020A:9767  9A					db	9Ah
020A:9768  2B70 1510				dw	2B70h, 1510h
020A:976C			loc_1529:
020A:976C  9A 1510:3CC0		;*		call	far ptr sub_155		;*(1510:3CC0)
020A:976C  9A					db	9Ah
020A:976D  3CC0 1510				dw	3CC0h, 1510h
020A:9771  72 38				jc	loc_1531		; Jump if carry Set
020A:9773  EB 39				jmp	short loc_1532		; (97AE)
020A:9775			loc_1530:
020A:9775  FA					cli				; Disable interrupts
020A:9776  2E: 8C 16 6052			mov	word ptr cs:[6052h],ss	; (020A:6052=4216h)
020A:977B  2E: 89 26 6050			mov	word ptr cs:[6050h],sp	; (020A:6050=300h)
020A:9780  BC 00C8				mov	sp,0C8h
020A:9783  FB					sti				; Enable interrupts
020A:9784  BA 31F0				mov	dx,31F0h
020A:9787  BB 2BE2				mov	bx,2BE2h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 320

020A:978A  B0 03				mov	al,3
020A:978C  B4 4B				mov	ah,4Bh
020A:978E  CD 21				int	21h			; DOS Services  ah=function 4Bh
										;  load ovrly @ds:dx,parm @es:bx
										;   all regs & ss:sp destroyed
020A:9790  FA					cli				; Disable interrupts
020A:9791  2E: 8E 16 6052			mov	ss,word ptr cs:[6052h]	; (020A:6052=4216h)
020A:9796  2E: 8B 26 6050			mov	sp,word ptr cs:[6050h]	; (020A:6050=300h)
020A:979B  FB					sti				; Enable interrupts
020A:979C  9C					pushf				; Push flags
020A:979D  E8 D9FD				call	sub_78			; (719D)
020A:97A0  E8 D9E2				call	sub_74			; (7185)
020A:97A3  9D					popf				; Pop flags
020A:97A4  73 08				jnc	loc_1532		; Jump if carry=0
020A:97A6  C6 06 1DD8 45			mov	byte ptr ds:[1DD8h],45h	; (ss:1DD8=2Eh) 'E'
020A:97AB			loc_1531:
020A:97AB  E9 0AC2				jmp	loc_1647		; (A270)
020A:97AE			loc_1532:
020A:97AE  C7 06 2B39 0041			mov	word ptr ds:[2B39h],41h	; (ss:2B39=1199h)
020A:97B4  9A 1510:2C58		;*		call	far ptr sub_144		;*(1510:2C58)
020A:97B4  9A					db	9Ah
020A:97B5  2C58 1510				dw	2C58h, 1510h
020A:97B9  C6 06 5613 01			mov	byte ptr ds:[5613h],1	; (ss:5613=9Ah)
020A:97BE  A1 3037				mov	ax,word ptr ds:[3037h]	; (ss:3037=3B2Dh)
020A:97C1  05 0010				add	ax,10h
020A:97C4  A3 3033				mov	word ptr ds:[3033h],ax	; (ss:3033=0C706h)
020A:97C7  80 3E 3031 03			cmp	byte ptr ds:[3031h],3	; (ss:3031=30h)
020A:97CC  74 21				je	loc_1533		; Jump if equal
020A:97CE  80 3E 3040 00			cmp	byte ptr ds:[3040h],0	; (ss:3040=0Ch)
020A:97D3  74 1D				je	loc_1534		; Jump if equal
020A:97D5  E8 D9BC				call	sub_76			; (7194)
020A:97D8  C6 06 3040 00			mov	byte ptr ds:[3040h],0	; (ss:3040=0Ch)
020A:97DD  C6 06 303B 00			mov	byte ptr ds:[303Bh],0	; (ss:303B=3Eh)
020A:97E2  BF 0000				mov	di,0
020A:97E5  B9 1482				mov	cx,1482h
020A:97E8  B0 FF				mov	al,0FFh
020A:97EA  FC					cld				; Clear direction
020A:97EB  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:97ED  EB 03				jmp	short loc_1534		; (97F2)
020A:97EF			loc_1533:
020A:97EF  E9 0944				jmp	loc_1632		; (A136)
020A:97F2			loc_1534:
020A:97F2  BB 0000				mov	bx,0
020A:97F5  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (ss:327F=29h)
020A:97FA  74 0D				je	loc_1536		; Jump if equal
020A:97FC  80 3E 327E 03			cmp	byte ptr ds:[327Eh],3	; (ss:327E=0B0h)
020A:9801  75 03				jne	loc_1535		; Jump if not equal
020A:9803  E9 038F				jmp	loc_1581		; (9B95)
020A:9806			loc_1535:
020A:9806  E9 0237				jmp	loc_1569		; (9A40)
020A:9809			loc_1536:
020A:9809  C7 06 3039 0000			mov	word ptr ds:[3039h],0	; (ss:3039=802Ah)
020A:980F  E8 D98E				call	sub_79			; (71A0)
020A:9812  BE 0BC3				mov	si,0BC3h
020A:9815  26: 8B 6C 40				mov	bp,es:[si+40h]
020A:9819  03 EE				add	bp,si
020A:981B  BF 0000				mov	di,0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 321

020A:981E  26: 8B 54 44				mov	dx,es:[si+44h]
020A:9822  0B D2				or	dx,dx			; Zero ?
020A:9824  75 03				jnz	loc_1537		; Jump if not zero
020A:9826  E9 010E				jmp	loc_1557		; (9937)
020A:9829			loc_1537:
020A:9829  81 FA 00FA				cmp	dx,0FAh
020A:982D  76 02				jbe	loc_1538		; Jump if below or =
020A:982F  B2 FA				mov	dl,0FAh
020A:9831			loc_1538:
020A:9831  88 16 56BF				mov	byte ptr ds:[56BFh],dl	; (ss:56BF=2)
020A:9835  8B C2				mov	ax,dx
020A:9837  26: 2B 44 18				sub	ax,es:[si+18h]
020A:983B  40					inc	ax
020A:983C  A2 56C1				mov	byte ptr ds:[56C1h],al	; (ss:56C1=6)
020A:983F  26: 8B 44 1C				mov	ax,es:[si+1Ch]
020A:9843  A3 56B5				mov	word ptr ds:[56B5h],ax	; (ss:56B5=80C7h)
020A:9846  26: 8B 44 28				mov	ax,es:[si+28h]
020A:984A  33 C9				xor	cx,cx			; Zero register
020A:984C			loc_1539:
020A:984C  D1 C0				rol	ax,1			; Rotate
020A:984E  FE C1				inc	cl
020A:9850  A9 8000				test	ax,8000h
020A:9853  74 F7				jz	loc_1539		; Jump if zero

020A:9855			locloop_1540:
020A:9855  D1 C8				ror	ax,1			; Rotate
020A:9857  0D 8000				or	ax,8000h
020A:985A  E2 F9				loop	locloop_1540		; Loop if cx > 0

020A:985C  A3 56B7				mov	word ptr ds:[56B7h],ax	; (ss:56B7=46FAh)
020A:985F  33 C0				xor	ax,ax			; Zero register
020A:9861  33 DB				xor	bx,bx			; Zero register
020A:9863  EB 1E				jmp	short loc_1544		; (9883)
020A:9865			loc_1541:
020A:9865  26: 8B 46 EA				mov	ax,es:[bp-16h]
020A:9869  26: 8B 5E E8				mov	bx,es:[bp-18h]
020A:986D  23 1E 56B7				and	bx,word ptr ds:[56B7h]	; (ss:56B7=46FAh)
020A:9871  26: 03 5C 28				add	bx,es:[si+28h]
020A:9875  73 01				jnc	loc_1542		; Jump if carry=0
020A:9877  40					inc	ax
020A:9878			loc_1542:
020A:9878  03 1E 56BD				add	bx,word ptr ds:[56BDh]	; (ss:56BD=306Fh)
020A:987C  73 01				jnc	loc_1543		; Jump if carry=0
020A:987E  40					inc	ax
020A:987F			loc_1543:
020A:987F  03 06 56BB				add	ax,word ptr ds:[56BBh]	; (ss:56BB=6C6h)
020A:9883			loc_1544:
020A:9883  A3 56BB				mov	word ptr ds:[56BBh],ax	; (ss:56BB=6C6h)
020A:9886  89 1E 56BD				mov	word ptr ds:[56BDh],bx	; (ss:56BD=306Fh)
020A:988A  26: 3B 5E 04				cmp	bx,es:[bp+4]
020A:988E  75 06				jne	loc_1545		; Jump if not equal
020A:9890  26: 3B 46 06				cmp	ax,es:[bp+6]
020A:9894  74 05				je	loc_1546		; Jump if equal
020A:9896			loc_1545:
020A:9896  C6 06 56C0 01			mov	byte ptr ds:[56C0h],1	; (ss:56C0=0F6h)
020A:989B			loc_1546:
020A:989B  8B D3				mov	dx,bx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 322

020A:989D  26: 8B 5E 00				mov	bx,es:[bp]
020A:98A1  26: 8B 4E 02				mov	cx,es:[bp+2]
020A:98A5  03 DA				add	bx,dx
020A:98A7  73 01				jnc	loc_1547		; Jump if carry=0
020A:98A9  41					inc	cx
020A:98AA			loc_1547:
020A:98AA  03 C8				add	cx,ax
020A:98AC			loc_1548:
020A:98AC  3B C8				cmp	cx,ax
020A:98AE  74 15				je	loc_1550		; Jump if equal
020A:98B0  53					push	bx
020A:98B1  51					push	cx
020A:98B2  BB FFFF				mov	bx,0FFFFh
020A:98B5  9A 1510:3C04		;*		call	far ptr sub_154		;*(1510:3C04)
020A:98B5  9A					db	9Ah
020A:98B6  3C04 1510				dw	3C04h, 1510h
020A:98BA  72 07				jc	loc_1549		; Jump if carry Set
020A:98BC  59					pop	cx
020A:98BD  5B					pop	bx
020A:98BE  40					inc	ax
020A:98BF  33 D2				xor	dx,dx			; Zero register
020A:98C1  EB E9				jmp	short loc_1548		; (98AC)
020A:98C3			loc_1549:
020A:98C3  EB 72				jmp	short loc_1557		; (9937)
020A:98C5			loc_1550:
020A:98C5  83 FB 00				cmp	bx,0
020A:98C8  74 61				je	loc_1556		; Jump if equal
020A:98CA  80 3E 56BF 01			cmp	byte ptr ds:[56BFh],1	; (ss:56BF=2)
020A:98CF  74 02				je	loc_1551		; Jump if equal
020A:98D1  EB 51				jmp	short loc_1555		; (9924)
020A:98D3			loc_1551:
020A:98D3  53					push	bx
020A:98D4  26: 8B 9C 0088			mov	bx,word ptr es:[88h][si]	; (4B2D:0088=0FFFFh)
020A:98D9  26: 8B 8C 008A			mov	cx,word ptr es:[8Ah][si]	; (4B2D:008A=0FFFFh)
020A:98DE  26: 2B 9C 0080			sub	bx,word ptr es:[80h][si]	; (4B2D:0080=0FFFFh)
020A:98E3  73 01				jnc	loc_1552		; Jump if carry=0
020A:98E5  49					dec	cx
020A:98E6			loc_1552:
020A:98E6  26: 2B 8C 0082			sub	cx,word ptr es:[82h][si]	; (4B2D:0082=0FFFFh)
020A:98EB  2B DA				sub	bx,dx
020A:98ED  73 01				jnc	loc_1553		; Jump if carry=0
020A:98EF  49					dec	cx
020A:98F0			loc_1553:
020A:98F0  2B C8				sub	cx,ax
020A:98F2  75 2F				jnz	loc_1554		; Jump if not zero
020A:98F4  26: 03 9C 008C			add	bx,word ptr es:[8Ch][si]	; (4B2D:008C=0FFFFh)
020A:98F9  72 28				jc	loc_1554		; Jump if carry Set
020A:98FB  8B CB				mov	cx,bx
020A:98FD  26: 2B 8C 008C			sub	cx,word ptr es:[8Ch][si]	; (4B2D:008C=0FFFFh)
020A:9902  41					inc	cx
020A:9903  89 0E 302B				mov	word ptr ds:[302Bh],cx	; (ss:302B=7700h)
020A:9907  50					push	ax
020A:9908  B1 0C				mov	cl,0Ch
020A:990A  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:990C  03 06 3033				add	ax,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:9910  A3 302D				mov	word ptr ds:[302Dh],ax	; (ss:302D=3B06h)
020A:9913  58					pop	ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 323

020A:9914  03 DA				add	bx,dx
020A:9916  72 0B				jc	loc_1554		; Jump if carry Set
020A:9918  8B CB				mov	cx,bx
020A:991A  5B					pop	bx
020A:991B  3B CB				cmp	cx,bx
020A:991D  76 05				jbe	loc_1555		; Jump if below or =
020A:991F  8B D9				mov	bx,cx
020A:9921  EB 01				jmp	short loc_1555		; (9924)
020A:9923			loc_1554:
020A:9923  5B					pop	bx
020A:9924			loc_1555:
020A:9924  9A 1510:3C04		;*		call	far ptr sub_154		;*(1510:3C04)
020A:9924  9A					db	9Ah
020A:9925  3C04 1510				dw	3C04h, 1510h
020A:9929  72 0C				jc	loc_1557		; Jump if carry Set
020A:992B			loc_1556:
020A:992B  83 C5 18				add	bp,18h
020A:992E  FE 0E 56BF				dec	byte ptr ds:[56BFh]	; (ss:56BF=2)
020A:9932  74 03				jz	loc_1557		; Jump if zero
020A:9934  E9 FF2E				jmp	loc_1541		; (9865)
020A:9937			loc_1557:
020A:9937  A3 3066				mov	word ptr ds:[3066h],ax	; (ss:3066=8E5Ah)
020A:993A  80 3E 56C0 01			cmp	byte ptr ds:[56C0h],1	; (ss:56C0=0F6h)
020A:993F  75 09				jne	loc_1558		; Jump if not equal
020A:9941  B4 42				mov	ah,42h			; 'B'
020A:9943  B0 04				mov	al,4
020A:9945  9A 1510:57A4		;*		call	far ptr sub_168		;*(1510:57A4)
020A:9945  9A					db	9Ah
020A:9946  57A4 1510				dw	57A4h, 1510h
020A:994A			loc_1558:
020A:994A  E8 D853				call	sub_79			; (71A0)
020A:994D  BE 0BC3				mov	si,0BC3h
020A:9950  26: 8B 6C 40				mov	bp,es:[si+40h]
020A:9954  03 EE				add	bp,si
020A:9956  26: 8B 7C 68				mov	di,es:[si+68h]
020A:995A  03 FE				add	di,si
020A:995C  26: 8B 54 44				mov	dx,es:[si+44h]
020A:9960  80 FA 01				cmp	dl,1
020A:9963  77 03				ja	loc_1559		; Jump if above
020A:9965  E9 00B8				jmp	loc_1567		; (9A20)
020A:9968			loc_1559:
020A:9968  C7 06 56B7 0000			mov	word ptr ds:[56B7h],0	; (ss:56B7=46FAh)
020A:996E  26: 8B 5E 10				mov	bx,es:[bp+10h]
020A:9972  8A F3				mov	dh,bl
020A:9974  0A F6				or	dh,dh			; Zero ?
020A:9976  75 03				jnz	loc_1560		; Jump if not zero
020A:9978  E9 009F				jmp	loc_1566		; (9A1A)
020A:997B			loc_1560:
020A:997B  26: 8B 1D				mov	bx,es:[di]
020A:997E  26: 03 5C 6C				add	bx,es:[si+6Ch]
020A:9982  03 DE				add	bx,si
020A:9984  83 C7 04				add	di,4
020A:9987  26: 8B 0D				mov	cx,es:[di]
020A:998A  26: 03 4C 6C				add	cx,es:[si+6Ch]
020A:998E  03 CE				add	cx,si
020A:9990  89 0E 56B9				mov	word ptr ds:[56B9h],cx	; (ss:56B9=3175h)
020A:9994  3B D9				cmp	bx,cx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 324

020A:9996  72 02				jb	loc_1561		; Jump if below
020A:9998  EB 6A				jmp	short loc_1564		; (9A04)
020A:999A			loc_1561:
020A:999A  26: 8A 0F				mov	cl,es:[bx]
020A:999D  F6 C1 20				test	cl,20h			; ' '
020A:99A0  75 4E				jnz	loc_1562		; Jump if not zero
020A:99A2  80 E1 0F				and	cl,0Fh
020A:99A5  80 F9 08				cmp	cl,8
020A:99A8  75 51				jne	loc_1563		; Jump if not equal
020A:99AA  55					push	bp
020A:99AB  26: 8A 4F 04				mov	cl,es:[bx+4]
020A:99AF  FE C9				dec	cl
020A:99B1  B0 18				mov	al,18h
020A:99B3  F6 E1				mul	cl			; ax = reg * al
020A:99B5  26: 8B 6C 40				mov	bp,es:[si+40h]
020A:99B9  03 EE				add	bp,si
020A:99BB  03 E8				add	bp,ax
020A:99BD  26: 8B 46 04				mov	ax,es:[bp+4]
020A:99C1  26: 03 47 05				add	ax,es:[bx+5]
020A:99C5  5D					pop	bp
020A:99C6  26: 8B 4E 04				mov	cx,es:[bp+4]
020A:99CA  26: 03 4F 02				add	cx,es:[bx+2]
020A:99CE  03 0E 56B7				add	cx,word ptr ds:[56B7h]	; (ss:56B7=46FAh)
020A:99D2  83 C1 04				add	cx,4
020A:99D5  2B C1				sub	ax,cx
020A:99D7  83 E9 04				sub	cx,4
020A:99DA  53					push	bx
020A:99DB  52					push	dx
020A:99DC  06					push	es
020A:99DD  8B D9				mov	bx,cx
020A:99DF  8E 06 3033				mov	es,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:99E3  99					cwd				; Word to double word
020A:99E4  26: 89 07				mov	es:[bx],ax
020A:99E7  26: 89 57 02				mov	es:[bx+2],dx
020A:99EB  07					pop	es
020A:99EC  5A					pop	dx
020A:99ED  5B					pop	bx
020A:99EE  EB 0B				jmp	short loc_1563		; (99FB)
020A:99F0			loc_1562:
020A:99F0  26: 8A 47 02				mov	al,es:[bx+2]
020A:99F4  32 E4				xor	ah,ah			; Zero register
020A:99F6  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:99F8  03 D8				add	bx,ax
020A:99FA  4B					dec	bx
020A:99FB			loc_1563:
020A:99FB  83 C3 07				add	bx,7
020A:99FE  3B 1E 56B9				cmp	bx,word ptr ds:[56B9h]	; (ss:56B9=3175h)
020A:9A02  72 96				jb	loc_1561		; Jump if below
020A:9A04			loc_1564:
020A:9A04  26: 8B 44 28				mov	ax,es:[si+28h]
020A:9A08  01 06 56B7				add	word ptr ds:[56B7h],ax	; (ss:56B7=46FAh)
020A:9A0C  FE CE				dec	dh
020A:9A0E  74 03				jz	loc_1565		; Jump if zero
020A:9A10  E9 FF68				jmp	loc_1560		; (997B)
020A:9A13			loc_1565:
020A:9A13  FE CA				dec	dl
020A:9A15  80 FA 01				cmp	dl,1
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 325

020A:9A18  76 06				jbe	loc_1567		; Jump if below or =
020A:9A1A			loc_1566:
020A:9A1A  83 C5 18				add	bp,18h
020A:9A1D  E9 FF48				jmp	loc_1559		; (9968)
020A:9A20			loc_1567:
020A:9A20  A0 30A0				mov	al,byte ptr ds:[30A0h]	; (ss:30A0=15h)
020A:9A23  3C 28				cmp	al,28h			; '('
020A:9A25  74 16				je	loc_1568		; Jump if equal
020A:9A27  3C 48				cmp	al,48h			; 'H'
020A:9A29  74 12				je	loc_1568		; Jump if equal
020A:9A2B  C6 06 30A0 28			mov	byte ptr ds:[30A0h],28h	; (ss:30A0=15h) '('
020A:9A30  B6 01				mov	dh,1
020A:9A32  E8 BC63				call	sub_46			; (5698)
020A:9A35  A0 35E4				mov	al,byte ptr ds:[35E4h]	; (ss:35E4=1)
020A:9A38  9A 1510:09D8		;*		call	far ptr sub_130		;*(1510:09D8)
020A:9A38  9A					db	9Ah
020A:9A39  09D8 1510				dw	9D8h, 1510h
020A:9A3D			loc_1568:
020A:9A3D  E9 06F6				jmp	loc_1632		; (A136)
020A:9A40			loc_1569:
020A:9A40  BB 0000				mov	bx,0
020A:9A43  E8 D75A				call	sub_79			; (71A0)
020A:9A46  26: 80 3E 0BC3 E9			cmp	byte ptr es:[0BC3h],0E9h	; (4B2D:0BC3=0FFh)
020A:9A4C  75 25				jne	loc_1570		; Jump if not equal
020A:9A4E  BE 46F1				mov	si,46F1h
020A:9A51  BF 0BC6				mov	di,0BC6h
020A:9A54  B9 4700				mov	cx,4700h
020A:9A57  81 E9 46F1				sub	cx,46F1h
020A:9A5B  FC					cld				; Clear direction
020A:9A5C  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
020A:9A5E  83 F9 00				cmp	cx,0
020A:9A61  75 10				jne	loc_1570		; Jump if not equal
020A:9A63  B4 2D				mov	ah,2Dh			; '-'
020A:9A65  B0 04				mov	al,4
020A:9A67  9A 1510:57A4		;*		call	far ptr sub_168		;*(1510:57A4)
020A:9A67  9A					db	9Ah
020A:9A68  57A4 1510				dw	57A4h, 1510h
020A:9A6C  C6 06 4700 01			mov	byte ptr ds:[4700h],1	; (ss:4700=58h)
020A:9A71  EB 24				jmp	short loc_1571		; (9A97)
020A:9A73			loc_1570:
020A:9A73  26: 81 3E 0BF3 4B50			cmp	word ptr es:[0BF3h],4B50h	; (4B2D:0BF3=0FFFFh)
020A:9A7A  75 1B				jne	loc_1571		; Jump if not equal
020A:9A7C  26: 81 3E 0BF5 494C			cmp	word ptr es:[0BF5h],494Ch	; (4B2D:0BF5=0FFFFh)
020A:9A83  75 12				jne	loc_1571		; Jump if not equal
020A:9A85  26: 81 3E 0BF7 4554			cmp	word ptr es:[0BF7h],4554h	; (4B2D:0BF7=0FFFFh)
020A:9A8C  75 09				jne	loc_1571		; Jump if not equal
020A:9A8E  B4 44				mov	ah,44h			; 'D'
020A:9A90  B0 04				mov	al,4
020A:9A92  9A 1510:57A4		;*		call	far ptr sub_168		;*(1510:57A4)
020A:9A92  9A					db	9Ah
020A:9A93  57A4 1510				dw	57A4h, 1510h
020A:9A97			loc_1571:
020A:9A97  C7 06 302B 0000			mov	word ptr ds:[302Bh],0	; (ss:302B=7700h)
020A:9A9D  80 3E 327F 02			cmp	byte ptr ds:[327Fh],2	; (ss:327F=29h)
020A:9AA2  74 0E				je	loc_1572		; Jump if equal
020A:9AA4  80 3E 327F 04			cmp	byte ptr ds:[327Fh],4	; (ss:327F=29h)
020A:9AA9  74 07				je	loc_1572		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 326

020A:9AAB  80 3E 327F 05			cmp	byte ptr ds:[327Fh],5	; (ss:327F=29h)
020A:9AB0  75 17				jne	loc_1573		; Jump if not equal
020A:9AB2			loc_1572:
020A:9AB2  9A 1510:4548		;*		call	far ptr sub_161		;*(1510:4548)
020A:9AB2  9A					db	9Ah
020A:9AB3  4548 1510				dw	4548h, 1510h
020A:9AB7  73 10				jnc	loc_1573		; Jump if carry=0
020A:9AB9  C6			data_628	db	0C6h
020A:9ABA  06					push	es
020A:9ABB  7F 32				jg	loc_1575		; Jump if >
020A:9ABD  05 709A				add	ax,709Ah
020A:9AC0  2B 10				sub	dx,[bx+si]
020A:9AC2  15 06C7				adc	ax,6C7h
020A:9AC5  2B 30				sub	si,[bx+si]
020A:9AC7  0A 00				or	al,[bx+si]
020A:9AC9			loc_1573:
020A:9AC9  A1 3033				mov	ax,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:9ACC  C7 06 3039 0000			mov	word ptr ds:[3039h],0	; (ss:3039=802Ah)
020A:9AD2  80 3E 327F 02			cmp	byte ptr ds:[327Fh],2	; (ss:327F=29h)
020A:9AD7  75 09				jne	loc_1574		; Jump if not equal
020A:9AD9  2D 0010				sub	ax,10h
020A:9ADC  A3 3033				mov	word ptr ds:[3033h],ax	; (ss:3033=0C706h)
020A:9ADF  A3 3039				mov	word ptr ds:[3039h],ax	; (ss:3039=802Ah)
020A:9AE2			loc_1574:
020A:9AE2  E8 D6AF				call	sub_76			; (7194)
020A:9AE5  26: 89 07				mov	es:[bx],ax
020A:9AE8  26: 89 47 06				mov	es:[bx+6],ax
020A:9AEC  26: 89 47 08				mov	es:[bx+8],ax
020A:9AF0  26: C6 47 0E 00			mov	byte ptr es:[bx+0Eh],0
020A:9AF5  26: C7 47 0C 0000			mov	word ptr es:[bx+0Ch],0
020A:9AFB  A3 3066				mov	word ptr ds:[3066h],ax	; (ss:3066=8E5Ah)
020A:9AFE  33 C0				xor	ax,ax			; Zero register
020A:9B00  8B 0E 2CC8				mov	cx,word ptr ds:[2CC8h]	; (ss:2CC8=0C422h)
020A:9B04  8B 16 2CC6				mov	dx,word ptr ds:[2CC6h]	; (ss:2CC6=545h)
020A:9B08  80 3E 327F 02			cmp	byte ptr ds:[327Fh],2	; (ss:327F=29h)
020A:9B0D  75 32				jne	loc_1578		; Jump if not equal
020A:9B0F  B8 0100				mov	ax,100h
020A:9B12  C7 06 302B 0100			mov	word ptr ds:[302Bh],100h	; (ss:302B=7700h)
020A:9B18  26: 89 47 02				mov	es:[bx+2],ax
020A:9B1C  83 F9 00				cmp	cx,0
020A:9B1F  75 06				jne	loc_1576		; Jump if not equal
020A:9B21  81 FA FEFF				cmp	dx,0FEFFh
020A:9B25  72 06				jb	loc_1577		; Jump if below
020A:9B27			loc_1576:
020A:9B27  B8 0030				mov	ax,30h
020A:9B2A  E9 0743				jmp	loc_1647		; (A270)
020A:9B2D			loc_1577:
020A:9B2D  03 C2				add	ax,dx
020A:9B2F  48					dec	ax
020A:9B30  26: 89 47 04				mov	es:[bx+4],ax
020A:9B34  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020A:9B3A  FE 06 3040				inc	byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:9B3E  E9 05F5				jmp	loc_1632		; (A136)
020A:9B41			loc_1578:
020A:9B41  26: 89 47 02				mov	es:[bx+2],ax
020A:9B45  83 F9 00				cmp	cx,0
020A:9B48  75 17				jne	loc_1580		; Jump if not equal
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 327

020A:9B4A  83 FA 01				cmp	dx,1
020A:9B4D  76 0F				jbe	loc_1579		; Jump if below or =
020A:9B4F  4A					dec	dx
020A:9B50  26: 89 57 04				mov	es:[bx+4],dx
020A:9B54  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020A:9B5A  FE 06 3040				inc	byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:9B5E			loc_1579:
020A:9B5E  E9 05D5				jmp	loc_1632		; (A136)
020A:9B61			loc_1580:
020A:9B61  26: C7 47 04 FFFF			mov	word ptr es:[bx+4],0FFFFh
020A:9B67  26: C7 47 0A 0000			mov	word ptr es:[bx+0Ah],0
020A:9B6D  FE 06 3040				inc	byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:9B71  49					dec	cx
020A:9B72  26: 8B 07				mov	ax,es:[bx]
020A:9B75  83 C3 15				add	bx,15h
020A:9B78  05 1000				add	ax,1000h
020A:9B7B  26: 89 07				mov	es:[bx],ax
020A:9B7E  26: 89 47 06				mov	es:[bx+6],ax
020A:9B82  26: 89 47 08				mov	es:[bx+8],ax
020A:9B86  26: C6 47 0E 00			mov	byte ptr es:[bx+0Eh],0
020A:9B8B  26: C7 47 0C 0000			mov	word ptr es:[bx+0Ch],0
020A:9B91  33 C0				xor	ax,ax			; Zero register
020A:9B93  EB AC				jmp	short loc_1578		; (9B41)
				sub_97		endp

020A:9B95			loc_1581:
020A:9B95  C7 06 2B39 0042			mov	word ptr ds:[2B39h],42h	; (ss:2B39=1199h)
020A:9B9B  9A 1510:2C58		;*		call	far ptr sub_144		;*(1510:2C58)
020A:9B9B  9A					db	9Ah
020A:9B9C  2C58 1510				dw	2C58h, 1510h
020A:9BA0  8B FB				mov	di,bx
020A:9BA2  C7 06 302B 0000			mov	word ptr ds:[302Bh],0	; (ss:302B=7700h)
020A:9BA8  9A 1510:4548		;*		call	far ptr sub_161		;*(1510:4548)
020A:9BA8  9A					db	9Ah
020A:9BA9  4548 1510				dw	4548h, 1510h
020A:9BAD  73 0F				jnc	loc_1582		; Jump if carry=0
020A:9BAF  C6 06 327F 05			mov	byte ptr ds:[327Fh],5	; (ss:327F=29h)
020A:9BB4  C6 06 1504 01			mov	byte ptr ds:[1504h],1	; (ss:1504=16h)
020A:9BB9  9A 1510:2B70		;*		call	far ptr sub_142		;*(1510:2B70)
020A:9BB9  9A					db	9Ah
020A:9BBA  2B70 1510				dw	2B70h, 1510h
020A:9BBE			loc_1582:
020A:9BBE  E8 D5DF				call	sub_79			; (71A0)
020A:9BC1  26: 81 3E 0BC3 5A4D			cmp	word ptr es:[0BC3h],5A4Dh	; (4B2D:0BC3=0FFFFh)
020A:9BC8  74 06				je	loc_1583		; Jump if equal
020A:9BCA  B8 0014				mov	ax,14h
020A:9BCD  E9 06A0				jmp	loc_1647		; (A270)
020A:9BD0			loc_1583:
020A:9BD0  33 C0				xor	ax,ax			; Zero register
020A:9BD2  26: 39 06 0BC9			cmp	word ptr es:[0BC9h],ax	; (4B2D:0BC9=0FFFFh)
020A:9BD7  75 76				jne	loc_1589		; Jump if not equal
020A:9BD9  26: 39 06 0BCD			cmp	word ptr es:[0BCDh],ax	; (4B2D:0BCD=0FFFFh)
020A:9BDE  74 6F				je	loc_1589		; Jump if equal
020A:9BE0  26: 81 3E 0BD7 0100			cmp	word ptr es:[0BD7h],100h	; (4B2D:0BD7=0FFFFh)
020A:9BE7  77 07				ja	loc_1584		; Jump if above
020A:9BE9  26: 39 06 0BD9			cmp	word ptr es:[0BD9h],ax	; (4B2D:0BD9=0FFFFh)
020A:9BEE  74 5F				je	loc_1589		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 328

020A:9BF0			loc_1584:
020A:9BF0  26: 8B 1E 0BD7			mov	bx,word ptr es:[0BD7h]	; (4B2D:0BD7=0FFFFh)
020A:9BF5  83 FB 01				cmp	bx,1
020A:9BF8  74 55				je	loc_1589		; Jump if equal
020A:9BFA  A1 3033				mov	ax,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:9BFD  26: 03 06 0BD9			add	ax,word ptr es:[0BD9h]	; (4B2D:0BD9=0FFFFh)
020A:9C02  06					push	es
020A:9C03  8E C0				mov	es,ax
020A:9C05  26: 81 7F FE 4252			cmp	word ptr es:[bx-2],4252h
020A:9C0B  07					pop	es
020A:9C0C  74 38				jz	loc_1588		; Jump if zero
020A:9C0E  83 FB 10				cmp	bx,10h
020A:9C11  75 18				jne	loc_1586		; Jump if not equal
020A:9C13  06					push	es
020A:9C14  8E C0				mov	es,ax
020A:9C16  26: 81 3E 00C8 2EFB			cmp	word ptr es:[0C8h],2EFBh	; (C705:00C8=0FFh)
020A:9C1D  75 07				jne	loc_1585		; Jump if not equal
020A:9C1F  26: 81 3E 00CA 2FFF			cmp	word ptr es:[0CAh],2FFFh	; (C705:00CA=0)
020A:9C26			loc_1585:
020A:9C26  07					pop	es
020A:9C27  75 26				jnz	loc_1589		; Jump if not zero
020A:9C29  EB 1B				jmp	short loc_1588		; (9C46)
020A:9C2B			loc_1586:
020A:9C2B  83 FB 0E				cmp	bx,0Eh
020A:9C2E  75 1F				jne	loc_1589		; Jump if not equal
020A:9C30  06					push	es
020A:9C31  8E C0				mov	es,ax
020A:9C33  26: 81 3E 0154 2EFB			cmp	word ptr es:[154h],2EFBh	; (C705:0154=0C0C0h)
020A:9C3A  75 07				jne	loc_1587		; Jump if not equal
020A:9C3C  26: 81 3E 0156 2FFF			cmp	word ptr es:[156h],2FFFh	; (C705:0156=0C6C0h)
020A:9C43			loc_1587:
020A:9C43  07					pop	es
020A:9C44  75 09				jnz	loc_1589		; Jump if not zero
020A:9C46			loc_1588:
020A:9C46  B4 21				mov	ah,21h			; '!'
020A:9C48  B0 04				mov	al,4
020A:9C4A  9A 1510:57A4		;*		call	far ptr sub_168		;*(1510:57A4)
020A:9C4A  9A					db	9Ah
020A:9C4B  57A4 1510				dw	57A4h, 1510h
020A:9C4F			loc_1589:
020A:9C4F  26: 83 3E 0BC9 00			cmp	word ptr es:[0BC9h],0	; (4B2D:0BC9=0FFFFh)
020A:9C55  75 42				jne	loc_1590		; Jump if not equal
020A:9C57  26: 83 3E 0BD1 F0			cmp	word ptr es:[0BD1h],0FFF0h	; (4B2D:0BD1=0FFFFh)
020A:9C5D  75 3A				jne	loc_1590		; Jump if not equal
020A:9C5F  26: 83 3E 0BD3 FE			cmp	word ptr es:[0BD3h],0FFFEh	; (4B2D:0BD3=0FFFFh)
020A:9C65  72 32				jb	loc_1590		; Jump if below
020A:9C67  26: 81 3E 0BD7 0100			cmp	word ptr es:[0BD7h],100h	; (4B2D:0BD7=0FFFFh)
020A:9C6E  75 29				jne	loc_1590		; Jump if not equal
020A:9C70  26: 83 3E 0BD9 F0			cmp	word ptr es:[0BD9h],0FFF0h	; (4B2D:0BD9=0FFFFh)
020A:9C76  75 21				jne	loc_1590		; Jump if not equal
020A:9C78  83 3E 2CC8 00			cmp	word ptr ds:[2CC8h],0	; (ss:2CC8=0C422h)
020A:9C7D  75 1A				jne	loc_1590		; Jump if not equal
020A:9C7F  81 3E 2CC6 FE00			cmp	word ptr ds:[2CC6h],0FE00h	; (ss:2CC6=545h)
020A:9C85  73 12				jae	loc_1590		; Jump if above or =
020A:9C87  C6 06 327E 02			mov	byte ptr ds:[327Eh],2	; (ss:327E=0B0h)
020A:9C8C  C6 06 327F 02			mov	byte ptr ds:[327Fh],2	; (ss:327F=29h)
020A:9C91  9A 1510:2B70		;*		call	far ptr sub_142		;*(1510:2B70)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 329

020A:9C91  9A					db	9Ah
020A:9C92  2B70 1510				dw	2B70h, 1510h
020A:9C96  E9 FDA7				jmp	loc_1569		; (9A40)
020A:9C99			loc_1590:
020A:9C99  C7 06 2B39 0043			mov	word ptr ds:[2B39h],43h	; (ss:2B39=1199h)
020A:9C9F  9A 1510:2C58		;*		call	far ptr sub_144		;*(1510:2C58)
020A:9C9F  9A					db	9Ah
020A:9CA0  2C58 1510				dw	2C58h, 1510h
020A:9CA4  26: A1 0BC9				mov	ax,word ptr es:[0BC9h]	; (4B2D:0BC9=0FFFFh)
020A:9CA8  A3 4395				mov	word ptr ds:[4395h],ax	; (ss:4395=595Ah)
020A:9CAB  3D 2243				cmp	ax,2243h
020A:9CAE  76 03				jbe	loc_1591		; Jump if below or =
020A:9CB0  B8 2243				mov	ax,2243h
020A:9CB3			loc_1591:
020A:9CB3  A3 4397				mov	word ptr ds:[4397h],ax	; (ss:4397=2E5Bh)
020A:9CB6  26: A1 0BD1				mov	ax,word ptr es:[0BD1h]	; (4B2D:0BD1=0FFFFh)
020A:9CBA  26: 8B 1E 0BD3			mov	bx,word ptr es:[0BD3h]	; (4B2D:0BD3=0FFFFh)
020A:9CBF  E8 D4D2				call	sub_76			; (7194)
020A:9CC2  0B C0				or	ax,ax			; Zero ?
020A:9CC4  75 04				jnz	loc_1592		; Jump if not zero
020A:9CC6  0B DB				or	bx,bx			; Zero ?
020A:9CC8  74 40				jz	loc_1595		; Jump if zero
020A:9CCA			loc_1592:
020A:9CCA  C6 06 303B 01			mov	byte ptr ds:[303Bh],1	; (ss:303B=3Eh)
020A:9CCF  3D FFF0				cmp	ax,0FFF0h
020A:9CD2  75 05				jne	loc_1593		; Jump if not equal
020A:9CD4  A1 3039				mov	ax,word ptr ds:[3039h]	; (ss:3039=802Ah)
020A:9CD7  EB 04				jmp	short loc_1594		; (9CDD)
020A:9CD9			loc_1593:
020A:9CD9  03 06 3033				add	ax,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:9CDD			loc_1594:
020A:9CDD  26: 89 05				mov	es:[di],ax
020A:9CE0  A3 303C				mov	word ptr ds:[303Ch],ax	; (ss:303C=586Dh)
020A:9CE3  A3 3066				mov	word ptr ds:[3066h],ax	; (ss:3066=8E5Ah)
020A:9CE6  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:9CEC  4B					dec	bx
020A:9CED  26: 89 5D 04				mov	es:[di+4],bx
020A:9CF1  89 1E 3064				mov	word ptr ds:[3064h],bx	; (ss:3064=96h)
020A:9CF5  26: C7 45 0A 0003			mov	word ptr es:[di+0Ah],3
020A:9CFB  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:9D00  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
020A:9D06  FE 06 3040				inc	byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:9D0A			loc_1595:
020A:9D0A  A1 3033				mov	ax,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:9D0D  80 3E 303B 01			cmp	byte ptr ds:[303Bh],1	; (ss:303B=3Eh)
020A:9D12  75 08				jne	loc_1596		; Jump if not equal
020A:9D14  26: 3B 05				cmp	ax,es:[di]
020A:9D17  74 29				je	loc_1597		; Jump if equal
020A:9D19  83 C7 15				add	di,15h
020A:9D1C			loc_1596:
020A:9D1C  26: 89 45 06				mov	es:[di+6],ax
020A:9D20  26: 89 45 08				mov	es:[di+8],ax
020A:9D24  26: 89 05				mov	es:[di],ax
020A:9D27  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:9D2D  26: C7 45 0A 0000			mov	word ptr es:[di+0Ah],0
020A:9D33  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:9D38  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 330

020A:9D3E  FE 06 3040				inc	byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:9D42			loc_1597:
020A:9D42  A1 3033				mov	ax,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:9D45  8B D8				mov	bx,ax
020A:9D47  E8 D456				call	sub_79			; (71A0)
020A:9D4A  26: 03 1E 0BD9			add	bx,word ptr es:[0BD9h]	; (4B2D:0BD9=0FFFFh)
020A:9D4F  33 C0				xor	ax,ax			; Zero register
020A:9D51  BA 0010				mov	dx,10h
020A:9D54  E8 C275				call	sub_63			; (5FCC)
020A:9D57  72 28				jc	loc_1598		; Jump if carry Set
020A:9D59  26: 89 1D				mov	es:[di],bx
020A:9D5C  33 C0				xor	ax,ax			; Zero register
020A:9D5E  26: 89 45 02				mov	es:[di+2],ax
020A:9D62  26: 89 45 04				mov	es:[di+4],ax
020A:9D66  26: 89 45 0A				mov	es:[di+0Ah],ax
020A:9D6A  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:9D6F  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
020A:9D75  26: 89 5D 06				mov	es:[di+6],bx
020A:9D79  26: 89 5D 08				mov	es:[di+8],bx
020A:9D7D  FE 06 3040				inc	byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:9D81			loc_1598:
020A:9D81  C7 06 2B39 0044			mov	word ptr ds:[2B39h],44h	; (ss:2B39=1199h)
020A:9D87  9A 1510:2C58		;*		call	far ptr sub_144		;*(1510:2C58)
020A:9D87  9A					db	9Ah
020A:9D88  2C58 1510				dw	2C58h, 1510h
020A:9D8C  E8 D411				call	sub_79			; (71A0)
020A:9D8F  26: 8B 2E 0BDB			mov	bp,word ptr es:[0BDBh]	; (4B2D:0BDB=0FFFFh)
020A:9D94  81 C5 0BC3				add	bp,0BC3h
020A:9D98  26: 8B 36 0BC7			mov	si,word ptr es:[0BC7h]	; (4B2D:0BC7=0FFFFh)
020A:9D9D  B1 05				mov	cl,5
020A:9D9F  D3 E6				shl	si,cl			; Shift w/zeros fill
020A:9DA1  26: A1 0BC5				mov	ax,word ptr es:[0BC5h]	; (4B2D:0BC5=0FFFFh)
020A:9DA5  B1 04				mov	cl,4
020A:9DA7  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:9DA9  03 F0				add	si,ax
020A:9DAB  83 EE 1F				sub	si,1Fh
020A:9DAE  26: 2B 36 0BCB			sub	si,word ptr es:[0BCBh]	; (4B2D:0BCB=0FFFFh)
020A:9DB3  03 36 3033				add	si,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:9DB7			loc_1599:
020A:9DB7  83 3E 4395 00			cmp	word ptr ds:[4395h],0	; (ss:4395=595Ah)
020A:9DBC  75 03				jne	loc_1600		; Jump if not equal
020A:9DBE  E9 009B				jmp	loc_1606		; (9E5C)
020A:9DC1			loc_1600:
020A:9DC1  E8 D3DC				call	sub_79			; (71A0)
020A:9DC4  26: 8B 5E 00				mov	bx,es:[bp]
020A:9DC8  A1 3033				mov	ax,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:9DCB  26: 03 46 02				add	ax,es:[bp+2]
020A:9DCF  8E C0				mov	es,ax
020A:9DD1  26: 8B 1F				mov	bx,es:[bx]
020A:9DD4  3B DE				cmp	bx,si
020A:9DD6  72 02				jb	loc_1601		; Jump if below
020A:9DD8  EB 37				jmp	short loc_1602		; (9E11)
020A:9DDA			loc_1601:
020A:9DDA  33 C0				xor	ax,ax			; Zero register
020A:9DDC  BA 0010				mov	dx,10h
020A:9DDF  E8 C1EA				call	sub_63			; (5FCC)
020A:9DE2  72 2D				jc	loc_1602		; Jump if carry Set
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 331

020A:9DE4  26: 89 1D				mov	es:[di],bx
020A:9DE7  26: 89 45 02				mov	es:[di+2],ax
020A:9DEB  26: 89 45 04				mov	es:[di+4],ax
020A:9DEF  26: 89 5D 06				mov	es:[di+6],bx
020A:9DF3  26: 89 5D 08				mov	es:[di+8],bx
020A:9DF7  26: 89 45 0A				mov	es:[di+0Ah],ax
020A:9DFB  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:9E00  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
020A:9E06  FE 06 3040				inc	byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:9E0A  80 3E 3040 FA			cmp	byte ptr ds:[3040h],0FAh	; (ss:3040=0Ch)
020A:9E0F  73 4B				jae	loc_1606		; Jump if above or =
020A:9E11			loc_1602:
020A:9E11  83 C5 04				add	bp,4
020A:9E14  81 FD 2C40				cmp	bp,2C40h
020A:9E18  72 3B				jb	loc_1605		; Jump if below
020A:9E1A  BB 2C43				mov	bx,2C43h
020A:9E1D  2B DD				sub	bx,bp
020A:9E1F  0B DB				or	bx,bx			; Zero ?
020A:9E21  74 10				jz	loc_1603		; Jump if zero
020A:9E23  B9 FFFF				mov	cx,0FFFFh
020A:9E26  33 D2				xor	dx,dx			; Zero register
020A:9E28  2B D3				sub	dx,bx
020A:9E2A  B8 4201				mov	ax,4201h
020A:9E2D  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (ss:4152=0A106h)
020A:9E31  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020A:9E33			loc_1603:
020A:9E33  B9 2C43				mov	cx,2C43h
020A:9E36  81 E9 0C43				sub	cx,0C43h
020A:9E3A  BA 0C43				mov	dx,0C43h
020A:9E3D  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (ss:4152=0A106h)
020A:9E41  E8 D344				call	sub_75			; (7188)
020A:9E44  B4 3F				mov	ah,3Fh
020A:9E46  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020A:9E48  E8 D33A				call	sub_74			; (7185)
020A:9E4B  73 05				jnc	loc_1604		; Jump if carry=0
020A:9E4D  B3 0E				mov	bl,0Eh
020A:9E4F  E9 041E				jmp	loc_1647		; (A270)
020A:9E52			loc_1604:
020A:9E52  BD 0C43				mov	bp,0C43h
020A:9E55			loc_1605:
020A:9E55  FF 0E 4395				dec	word ptr ds:[4395h]	; (ss:4395=595Ah)
020A:9E59  E9 FF5B				jmp	loc_1599		; (9DB7)
020A:9E5C			loc_1606:
020A:9E5C  C7 06 2B39 0045			mov	word ptr ds:[2B39h],45h	; (ss:2B39=1199h)
020A:9E62  9A 1510:2C58		;*		call	far ptr sub_144		;*(1510:2C58)
020A:9E62  9A					db	9Ah
020A:9E63  2C58 1510				dw	2C58h, 1510h
020A:9E67  E8 8A46				call	sub_28			; (28B0)
020A:9E6A  BA 0015				mov	dx,15h
020A:9E6D  8B C2				mov	ax,dx
020A:9E6F  8A 1E 3040				mov	bl,byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:9E73  FE CB				dec	bl
020A:9E75  F6 E3				mul	bl			; ax = reg * al
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 332

020A:9E77  05 0000				add	ax,0
020A:9E7A  8B D8				mov	bx,ax
020A:9E7C  26: 8B 47 0A				mov	ax,es:[bx+0Ah]
020A:9E80  24 03				and	al,3
020A:9E82  3C 03				cmp	al,3
020A:9E84  75 32				jne	loc_1608		; Jump if not equal
020A:9E86  80 3E 3040 01			cmp	byte ptr ds:[3040h],1	; (ss:3040=0Ch)
020A:9E8B  74 03				je	loc_1607		; Jump if equal
020A:9E8D  E9 008B				jmp	loc_1611		; (9F1B)
020A:9E90			loc_1607:
020A:9E90  50					push	ax
020A:9E91  55					push	bp
020A:9E92  C6 06 2BE1 01			mov	byte ptr ds:[2BE1h],1	; (ss:2BE1=8Ch)
020A:9E97  26: 8B 47 04				mov	ax,es:[bx+4]
020A:9E9B  40					inc	ax
020A:9E9C  53					push	bx
020A:9E9D  BD 69E1				mov	bp,69E1h
020A:9EA0  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:9EA0  9A					db	9Ah
020A:9EA1  021C 1510				dw	21Ch, 1510h
020A:9EA5  5B					pop	bx
020A:9EA6  5D					pop	bp
020A:9EA7  58					pop	ax
020A:9EA8  26: C6 47 0A 00			mov	byte ptr es:[bx+0Ah],0
020A:9EAD  26: 8B 3F				mov	di,es:[bx]
020A:9EB0  26: 89 7F 06				mov	es:[bx+6],di
020A:9EB4  26: 89 7F 08				mov	es:[bx+8],di
020A:9EB8			loc_1608:
020A:9EB8  F6 C4 80				test	ah,80h
020A:9EBB  75 5E				jnz	loc_1611		; Jump if not zero
020A:9EBD  53					push	bx
020A:9EBE  E8 D2DF				call	sub_79			; (71A0)
020A:9EC1  26: A1 0BC7				mov	ax,word ptr es:[0BC7h]	; (C705:0BC7=0E600h)
020A:9EC5  B1 05				mov	cl,5
020A:9EC7  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:9EC9  26: 2B 06 0BCB			sub	ax,word ptr es:[0BCBh]	; (C705:0BCB=0DBDBh)
020A:9ECE  E8 D2C3				call	sub_76			; (7194)
020A:9ED1  26: 2B 07				sub	ax,es:[bx]
020A:9ED4  03 06 3033				add	ax,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:9ED8  2D 0020				sub	ax,20h
020A:9EDB  E8 D2C2				call	sub_79			; (71A0)
020A:9EDE  26: 8B 1E 0BC5			mov	bx,word ptr es:[0BC5h]	; (C705:0BC5=0)
020A:9EE3  B1 04				mov	cl,4
020A:9EE5  D3 EB				shr	bx,cl			; Shift w/zeros fill
020A:9EE7  03 C3				add	ax,bx
020A:9EE9  A9 F000				test	ax,0F000h
020A:9EEC  74 05				jz	loc_1609		; Jump if zero
020A:9EEE  B8 FFFF				mov	ax,0FFFFh
020A:9EF1  EB 20				jmp	short loc_1610		; (9F13)
020A:9EF3			loc_1609:
020A:9EF3  B1 04				mov	cl,4
020A:9EF5  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:9EF7  26: 8B 1E 0BC5			mov	bx,word ptr es:[0BC5h]	; (C705:0BC5=0)
020A:9EFC  83 E3 0F				and	bx,0Fh
020A:9EFF  03 C3				add	ax,bx
020A:9F01  48					dec	ax
020A:9F02  3D FFFF				cmp	ax,0FFFFh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 333

020A:9F05  75 0C				jne	loc_1610		; Jump if not equal
020A:9F07  40					inc	ax
020A:9F08  5B					pop	bx
020A:9F09  53					push	bx
020A:9F0A  E8 D287				call	sub_76			; (7194)
020A:9F0D  26: 81 4F 0A 4000			or	word ptr es:[bx+0Ah],4000h
020A:9F13			loc_1610:
020A:9F13  5B					pop	bx
020A:9F14  E8 D27D				call	sub_76			; (7194)
020A:9F17  26: 89 47 04				mov	es:[bx+4],ax
020A:9F1B			loc_1611:
020A:9F1B  26: 8B 07				mov	ax,es:[bx]
020A:9F1E  81 FB 0000				cmp	bx,0
020A:9F22  74 2B				je	loc_1614		; Jump if equal
020A:9F24  2B DA				sub	bx,dx
020A:9F26  26: 8B 4F 0A				mov	cx,es:[bx+0Ah]
020A:9F2A  80 E1 03				and	cl,3
020A:9F2D  80 F9 03				cmp	cl,3
020A:9F30  74 E9				je	loc_1611		; Jump if equal
020A:9F32  F6 C5 80				test	ch,80h
020A:9F35  75 E4				jnz	loc_1611		; Jump if not zero
020A:9F37  26: 2B 07				sub	ax,es:[bx]
020A:9F3A  F6 C4 F0				test	ah,0F0h
020A:9F3D  75 07				jnz	loc_1612		; Jump if not zero
020A:9F3F  B1 04				mov	cl,4
020A:9F41  D3 E0				shl	ax,cl			; Shift w/zeros fill
020A:9F43  48					dec	ax
020A:9F44  EB 03				jmp	short loc_1613		; (9F49)
020A:9F46			loc_1612:
020A:9F46  B8 FFFF				mov	ax,0FFFFh
020A:9F49			loc_1613:
020A:9F49  26: 89 47 04				mov	es:[bx+4],ax
020A:9F4D  EB CC				jmp	short loc_1611		; (9F1B)
020A:9F4F			loc_1614:
020A:9F4F  80 3E 3040 01			cmp	byte ptr ds:[3040h],1	; (ss:3040=0Ch)
020A:9F54  74 07				je	loc_1615		; Jump if equal
020A:9F56  80 3E 3040 FA			cmp	byte ptr ds:[3040h],0FAh	; (ss:3040=0Ch)
020A:9F5B  72 03				jb	loc_1616		; Jump if below
020A:9F5D			loc_1615:
020A:9F5D  E9 0084				jmp	loc_1620		; (9FE4)
020A:9F60			loc_1616:
020A:9F60  BF 0000				mov	di,0
020A:9F63  BB 0015				mov	bx,15h
020A:9F66  8A 16 3040				mov	dl,byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:9F6A			loc_1617:
020A:9F6A  FE CA				dec	dl
020A:9F6C  80 FA 01				cmp	dl,1
020A:9F6F  72 73				jb	loc_1620		; Jump if below
020A:9F71  26: 8B 45 0A				mov	ax,es:[di+0Ah]
020A:9F75  24 03				and	al,3
020A:9F77  3C 03				cmp	al,3
020A:9F79  75 65				jne	loc_1619		; Jump if not equal
020A:9F7B  26: 8B 45 04				mov	ax,es:[di+4]
020A:9F7F  B1 04				mov	cl,4
020A:9F81  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:9F83  26: F7 45 04 000F			test	word ptr es:[di+4],0Fh
020A:9F89  74 01				jz	loc_1618		; Jump if zero
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 334

020A:9F8B  40					inc	ax
020A:9F8C			loc_1618:
020A:9F8C  26: 03 05				add	ax,es:[di]
020A:9F8F  26: 3B 01				cmp	ax,es:[bx+di]
020A:9F92  73 50				jae	loc_1620		; Jump if above or =
020A:9F94  50					push	ax
020A:9F95  26: 8B 11				mov	dx,es:[bx+di]
020A:9F98  2B D0				sub	dx,ax
020A:9F9A  B1 04				mov	cl,4
020A:9F9C  D3 E2				shl	dx,cl			; Shift w/zeros fill
020A:9F9E  4A					dec	dx
020A:9F9F  8B C3				mov	ax,bx
020A:9FA1  8A 0E 3040				mov	cl,byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:9FA5  FE C9				dec	cl
020A:9FA7  F6 E1				mul	cl			; ax = reg * al
020A:9FA9  05 0000				add	ax,0
020A:9FAC  8B F8				mov	di,ax
020A:9FAE  03 FB				add	di,bx
020A:9FB0  58					pop	ax
020A:9FB1  26: 89 05				mov	es:[di],ax
020A:9FB4  26: C7 45 02 0000			mov	word ptr es:[di+2],0
020A:9FBA  26: 89 55 04				mov	es:[di+4],dx
020A:9FBE  26: 89 45 06				mov	es:[di+6],ax
020A:9FC2  26: 89 45 08				mov	es:[di+8],ax
020A:9FC6  26: C7 45 0A 0000			mov	word ptr es:[di+0Ah],0
020A:9FCC  26: C6 45 0E 00			mov	byte ptr es:[di+0Eh],0
020A:9FD1  26: C7 45 0C 0000			mov	word ptr es:[di+0Ch],0
020A:9FD7  FE 06 3040				inc	byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:9FDB  E8 88D2				call	sub_28			; (28B0)
020A:9FDE  EB 04				jmp	short loc_1620		; (9FE4)
020A:9FE0			loc_1619:
020A:9FE0  03 FB				add	di,bx
020A:9FE2  EB 86				jmp	short loc_1617		; (9F6A)
020A:9FE4			loc_1620:
020A:9FE4  E8 D1B9				call	sub_79			; (71A0)
020A:9FE7  A1 3033				mov	ax,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:9FEA  8B D8				mov	bx,ax
020A:9FEC  26: 03 1E 0BD9			add	bx,word ptr es:[0BD9h]	; (C705:0BD9=66C3h)
020A:9FF1  26: A1 0BD7				mov	ax,word ptr es:[0BD7h]	; (C705:0BD7=0C3C3h)
020A:9FF5  89 1E 304C				mov	word ptr ds:[304Ch],bx	; (ss:304C=0BA15h)
020A:9FF9  A3 304E				mov	word ptr ds:[304Eh],ax	; (ss:304E=2D1Bh)
020A:9FFC  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:A001  06					push	es
020A:A002  E8 D18F				call	sub_76			; (7194)
020A:A005  33 C0				xor	ax,ax			; Zero register
020A:A007  BA 0010				mov	dx,10h
020A:A00A  E8 BFBF				call	sub_63			; (5FCC)
020A:A00D  73 14				jnc	loc_1621		; Jump if carry=0
020A:A00F  26: 8B 45 04				mov	ax,es:[di+4]
020A:A013  3B 06 304E				cmp	ax,word ptr ds:[304Eh]	; (ss:304E=2D1Bh)
020A:A017  77 0A				ja	loc_1621		; Jump if above
020A:A019  A1 304E				mov	ax,word ptr ds:[304Eh]	; (ss:304E=2D1Bh)
020A:A01C  05 0002				add	ax,2
020A:A01F  26: 89 45 04				mov	es:[di+4],ax
020A:A023			loc_1621:
020A:A023  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A028  9C					pushf				; Push flags
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 335

020A:A029  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A02E  5A					pop	dx
020A:A02F  8E C2				mov	es,dx
020A:A031  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:A036  5A					pop	dx
020A:A037  75 0A				jnz	loc_1622		; Jump if not zero
020A:A039  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:A03E  74 03				je	loc_1622		; Jump if equal
020A:A040  E8 D4B9				call	sub_85			; (74FC)
020A:A043			loc_1622:
020A:A043  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A048  9D					popf				; Pop flags
020A:A049  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A04E  F7 06 35E9 0001			test	word ptr ds:[35E9h],1	; (ss:35E9=0F700h)
020A:A054  74 03				jz	loc_1623		; Jump if zero
020A:A056  E9 00DD				jmp	loc_1632		; (A136)
020A:A059			loc_1623:
020A:A059  E8 D144				call	sub_79			; (71A0)
020A:A05C  33 C9				xor	cx,cx			; Zero register
020A:A05E  26: 8B 16 0BDB			mov	dx,word ptr es:[0BDBh]	; (C705:0BDB=183Ch)
020A:A063  B8 4200				mov	ax,4200h
020A:A066  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (ss:4152=0A106h)
020A:A06A  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020A:A06C			loc_1624:
020A:A06C  BD 0C43				mov	bp,0C43h
020A:A06F  B9 2C43				mov	cx,2C43h
020A:A072  81 E9 0C43				sub	cx,0C43h
020A:A076  BA 0C43				mov	dx,0C43h
020A:A079  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (ss:4152=0A106h)
020A:A07D  E8 D108				call	sub_75			; (7188)
020A:A080  B4 3F				mov	ah,3Fh
020A:A082  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020A:A084  E8 D0FE				call	sub_74			; (7185)
020A:A087  73 05				jnc	loc_1625		; Jump if carry=0
020A:A089  B3 0E				mov	bl,0Eh
020A:A08B  E9 01E2				jmp	loc_1647		; (A270)
020A:A08E			loc_1625:
020A:A08E  83 3E 4397 00			cmp	word ptr ds:[4397h],0	; (ss:4397=2E5Bh)
020A:A093  75 03				jne	loc_1626		; Jump if not equal
020A:A095  E9 009E				jmp	loc_1632		; (A136)
020A:A098			loc_1626:
020A:A098  E8 D105				call	sub_79			; (71A0)
020A:A09B  26: 8B 5E 00				mov	bx,es:[bp]
020A:A09F  A1 3033				mov	ax,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:A0A2  26: 03 46 02				add	ax,es:[bp+2]
020A:A0A6  9A 1510:6B84		;*		call	far ptr sub_171		;*(1510:6B84)
020A:A0A6  9A					db	9Ah
020A:A0A7  6B84 1510				dw	6B84h, 1510h
020A:A0AB  A3 4399				mov	word ptr ds:[4399h],ax	; (ss:4399=68Eh)
020A:A0AE  89 1E 439B				mov	word ptr ds:[439Bh],bx	; (ss:439B=38A1h)
020A:A0B2  E8 D0DF				call	sub_76			; (7194)
020A:A0B5  B9 0015				mov	cx,15h
020A:A0B8  BF 0000				mov	di,0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 336

020A:A0BB			loc_1627:
020A:A0BB  26: 8B 05				mov	ax,es:[di]
020A:A0BE  3D FFFF				cmp	ax,0FFFFh
020A:A0C1  74 60				je	loc_1630		; Jump if equal
020A:A0C3  26: 8B 5D 02				mov	bx,es:[di+2]
020A:A0C7  9A 1510:6B84		;*		call	far ptr sub_171		;*(1510:6B84)
020A:A0C7  9A					db	9Ah
020A:A0C8  6B84 1510				dw	6B84h, 1510h
020A:A0CC  39 06 4399				cmp	word ptr ds:[4399h],ax	; (ss:4399=68Eh)
020A:A0D0  72 51				jb	loc_1630		; Jump if below
020A:A0D2  77 06				ja	loc_1628		; Jump if above
020A:A0D4  39 1E 439B				cmp	word ptr ds:[439Bh],bx	; (ss:439B=38A1h)
020A:A0D8  72 49				jb	loc_1630		; Jump if below
020A:A0DA			loc_1628:
020A:A0DA  26: 8B 05				mov	ax,es:[di]
020A:A0DD  26: 8B 5D 04				mov	bx,es:[di+4]
020A:A0E1  9A 1510:6B84		;*		call	far ptr sub_171		;*(1510:6B84)
020A:A0E1  9A					db	9Ah
020A:A0E2  6B84 1510				dw	6B84h, 1510h
020A:A0E6  2B 1E 439B				sub	bx,word ptr ds:[439Bh]	; (ss:439B=38A1h)
020A:A0EA  1B 06 4399				sbb	ax,word ptr ds:[4399h]	; (ss:4399=68Eh)
020A:A0EE  73 05				jnc	loc_1629		; Jump if carry=0
020A:A0F0  83 C7 15				add	di,15h
020A:A0F3  EB C6				jmp	short loc_1627		; (A0BB)
020A:A0F5			loc_1629:
020A:A0F5  26: 8B 05				mov	ax,es:[di]
020A:A0F8  26: 8B 5D 02				mov	bx,es:[di+2]
020A:A0FC  9A 1510:6B84		;*		call	far ptr sub_171		;*(1510:6B84)
020A:A0FC  9A					db	9Ah
020A:A0FD  6B84 1510				dw	6B84h, 1510h
020A:A101  8B C3				mov	ax,bx
020A:A103  8B 1E 439B				mov	bx,word ptr ds:[439Bh]	; (ss:439B=38A1h)
020A:A107  2B D8				sub	bx,ax
020A:A109  26: 8B 0D				mov	cx,es:[di]
020A:A10C  BE 532E				mov	si,532Eh
020A:A10F  89 0C				mov	[si],cx
020A:A111  89 5C 02				mov	[si+2],bx
020A:A114  C6 44 04 5F				mov	byte ptr [si+4],5Fh	; '_'
020A:A118  C6 44 05 00				mov	byte ptr [si+5],0
020A:A11C  C6 44 06 00				mov	byte ptr [si+6],0
020A:A120  E8 E4BD				call	sub_92			; (85E0)
020A:A123			loc_1630:
020A:A123  FF 0E 4397				dec	word ptr ds:[4397h]	; (ss:4397=2E5Bh)
020A:A127  83 C5 04				add	bp,4
020A:A12A  81 FD 2C43				cmp	bp,2C43h
020A:A12E  72 03				jb	loc_1631		; Jump if below
020A:A130  E9 FF39				jmp	loc_1624		; (A06C)
020A:A133			loc_1631:
020A:A133  E9 FF58				jmp	loc_1625		; (A08E)
020A:A136			loc_1632:
020A:A136  BB 0000				mov	bx,0
020A:A139  32 ED				xor	ch,ch			; Zero register
020A:A13B  8A 0E 3040				mov	cl,byte ptr ds:[3040h]	; (ss:3040=0Ch)
020A:A13F  B8 0015				mov	ax,15h
020A:A142  E8 D04F				call	sub_76			; (7194)

020A:A145			locloop_1633:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 337

020A:A145  26: 80 67 0B 7F			and	byte ptr es:[bx+0Bh],7Fh
020A:A14A  26: 80 4F 0B 1E			or	byte ptr es:[bx+0Bh],1Eh
020A:A14F  03 D8				add	bx,ax
020A:A151  E2 F2				loop	locloop_1633		; Loop if cx > 0

020A:A153  80 3E 3031 03			cmp	byte ptr ds:[3031h],3	; (ss:3031=30h)
020A:A158  75 03				jne	loc_1634		; Jump if not equal
020A:A15A  E9 00A3				jmp	loc_1643		; (A200)
020A:A15D			loc_1634:
020A:A15D  A1 3033				mov	ax,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:A160  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (ss:327F=29h)
020A:A165  75 0D				jne	loc_1636		; Jump if not equal
020A:A167  83 3E 302D 00			cmp	word ptr ds:[302Dh],0	; (ss:302D=3B06h)
020A:A16C  75 03				jne	loc_1635		; Jump if not equal
020A:A16E  E9 008C				jmp	loc_1642		; (A1FD)
020A:A171			loc_1635:
020A:A171  A1 302D				mov	ax,word ptr ds:[302Dh]	; (ss:302D=3B06h)
020A:A174			loc_1636:
020A:A174  8E C0				mov	es,ax
020A:A176  8B 36 302B				mov	si,word ptr ds:[302Bh]	; (ss:302B=7700h)
020A:A17A  26: 8A 04				mov	al,es:[si]
020A:A17D  3C EB				cmp	al,0EBh
020A:A17F  74 0C				je	loc_1638		; Jump if equal
020A:A181  3C EA				cmp	al,0EAh
020A:A183  74 07				je	loc_1637		; Jump if equal
020A:A185  3C E9				cmp	al,0E9h
020A:A187  75 07				jne	loc_1639		; Jump if not equal
020A:A189  83 C6 02				add	si,2
020A:A18C			loc_1637:
020A:A18C  46					inc	si
020A:A18D			loc_1638:
020A:A18D  83 C6 02				add	si,2
020A:A190			loc_1639:
020A:A190  81 FE 0100				cmp	si,100h
020A:A194  75 01				jne	loc_1640		; Jump if not equal
020A:A196  46					inc	si
020A:A197			loc_1640:
020A:A197  E8 B9E6				call	sub_52			; (5B80)
020A:A19A  E8 D000				call	sub_78			; (719D)
020A:A19D  80 FB 08				cmp	bl,8
020A:A1A0  76 5E				jbe	loc_1643		; Jump if below or =
020A:A1A2  8B F7				mov	si,di
020A:A1A4  BF 0378				mov	di,378h
020A:A1A7  32 ED				xor	ch,ch			; Zero register
020A:A1A9  8A CB				mov	cl,bl
020A:A1AB  FC					cld				; Clear direction
020A:A1AC  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A1AE  B1 22				mov	cl,22h			; '"'
020A:A1B0  2A CB				sub	cl,bl
020A:A1B2  B0 20				mov	al,20h			; ' '
020A:A1B4  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:A1B6  A1 3033				mov	ax,word ptr ds:[3033h]	; (ss:3033=0C706h)
020A:A1B9  80 3E 327F 08			cmp	byte ptr ds:[327Fh],8	; (ss:327F=29h)
020A:A1BE  75 03				jne	loc_1641		; Jump if not equal
020A:A1C0  A1 302D				mov	ax,word ptr ds:[302Dh]	; (ss:302D=3B06h)
020A:A1C3			loc_1641:
020A:A1C3  8E C0				mov	es,ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 338

020A:A1C5  8B 3E 302B				mov	di,word ptr ds:[302Bh]	; (ss:302B=7700h)
020A:A1C9  B0 2E				mov	al,2Eh			; '.'
020A:A1CB  B9 003C				mov	cx,3Ch
020A:A1CE  FC					cld				; Clear direction
020A:A1CF  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:A1D1  E3 2A				jcxz	loc_1642		; Jump if cx=0
020A:A1D3  26: 8B 05				mov	ax,es:[di]
020A:A1D6  2C 30				sub	al,30h			; '0'
020A:A1D8  3C 09				cmp	al,9
020A:A1DA  77 21				ja	loc_1642		; Jump if above
020A:A1DC  80 EC 30				sub	ah,30h			; '0'
020A:A1DF  80 FC 09				cmp	ah,9
020A:A1E2  77 19				ja	loc_1642		; Jump if above
020A:A1E4  83 EF 02				sub	di,2
020A:A1E7  26: 8A 05				mov	al,es:[di]
020A:A1EA  2C 30				sub	al,30h			; '0'
020A:A1EC  3C 09				cmp	al,9
020A:A1EE  77 0D				ja	loc_1642		; Jump if above
020A:A1F0  26: 8B 05				mov	ax,es:[di]
020A:A1F3  A3 60B2				mov	word ptr ds:[60B2h],ax	; (ss:60B2=2CC8h)
020A:A1F6  26: 8B 45 02				mov	ax,es:[di+2]
020A:A1FA  A3 60B4				mov	word ptr ds:[60B4h],ax	; (ss:60B4=173h)
020A:A1FD			loc_1642:
020A:A1FD  E8 CF9D				call	sub_78			; (719D)
020A:A200			loc_1643:
020A:A200  B4 3D				mov	ah,3Dh			; '='
020A:A202  B0 00				mov	al,0
020A:A204  BA 31F0				mov	dx,31F0h
020A:A207  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:A209  72 31				jc	loc_1644		; Jump if carry Set
020A:A20B  8B D8				mov	bx,ax
020A:A20D  A3 4152				mov	word ptr ds:[4152h],ax	; (ss:4152=0A106h)
020A:A210  B4 57				mov	ah,57h			; 'W'
020A:A212  32 C0				xor	al,al			; Zero register
020A:A214  CD 21				int	21h			; DOS Services  ah=function 57h
										;  get file date+time, bx=handle
										;   returns cx=time, dx=date
020A:A216  72 24				jc	loc_1644		; Jump if carry Set
020A:A218  89 16 341E				mov	word ptr ds:[341Eh],dx	; (ss:341E=9636h)
020A:A21C  83 26 341E 1F			and	word ptr ds:[341Eh],1Fh	; (ss:341E=9636h)
020A:A221  B1 05				mov	cl,5
020A:A223  D3 EA				shr	dx,cl			; Shift w/zeros fill
020A:A225  89 16 3420				mov	word ptr ds:[3420h],dx	; (ss:3420=9D00h)
020A:A229  83 26 3420 0F			and	word ptr ds:[3420h],0Fh	; (ss:3420=9D00h)
020A:A22E  B1 04				mov	cl,4
020A:A230  D3 EA				shr	dx,cl			; Shift w/zeros fill
020A:A232  83 E2 3F				and	dx,3Fh
020A:A235  83 C2 50				add	dx,50h
020A:A238  89 16 3422				mov	word ptr ds:[3422h],dx	; (ss:3422=8B2Eh)
020A:A23C			loc_1644:
020A:A23C  80 3E 4394 00			cmp	byte ptr ds:[4394h],0	; (ss:4394=0E7h)
020A:A241  74 15				je	loc_1646		; Jump if equal
020A:A243  A0 2B3B				mov	al,byte ptr ds:[2B3Bh]	; (ss:2B3B=0BAh)
020A:A246  3C 04				cmp	al,4
020A:A248  77 0B				ja	loc_1645		; Jump if above
020A:A24A  B0 04				mov	al,4
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 339

020A:A24C  80 3E 327F 01			cmp	byte ptr ds:[327Fh],1	; (ss:327F=29h)
020A:A251  76 02				jbe	loc_1645		; Jump if below or =
020A:A253  B0 0A				mov	al,0Ah
020A:A255			loc_1645:
020A:A255  E8 BD24				call	sub_62			; (5F7C)
020A:A258			loc_1646:
020A:A258  C6 06 1DD8 20			mov	byte ptr ds:[1DD8h],20h	; (ss:1DD8=2Eh) ' '
020A:A25D  E8 C624				call	sub_68			; (6884)
020A:A260  E8 B88D				call	sub_51			; (5AF0)
020A:A263  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (ss:4152=0A106h)
020A:A267  E8 0172				call	sub_98			; (A3DC)
020A:A26A  E8 110F				call	sub_107			; (B37C)
020A:A26D  F8					clc				; Clear carry flag
020A:A26E  EB 0B				jmp	short loc_1648		; (A27B)
020A:A270			loc_1647:
020A:A270  E8 CF12				call	sub_74			; (7185)
020A:A273  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (ss:4152=0A106h)
020A:A277  E8 0162				call	sub_98			; (A3DC)
020A:A27A  F9					stc				; Set carry flag
020A:A27B			loc_1648:
020A:A27B  C3					retn
							                        ;* No entry point to code
020A:A27C  51					push	cx
020A:A27D  57					push	di
020A:A27E  8B FE				mov	di,si
020A:A280  B9 0032				mov	cx,32h
020A:A283  03 F1				add	si,cx
020A:A285  B0 00				mov	al,0
020A:A287  FC					cld				; Clear direction
020A:A288  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:A28A  A0 3030				mov	al,data_274		; (020A:3030=0)
020A:A28D  26: 88 44 FB				mov	es:[si-5],al
020A:A291  C6 06 3030 00			mov	data_274,0		; (020A:3030=0)
020A:A296  5F					pop	di
020A:A297  59					pop	cx
020A:A298  C3					retn
							                        ;* No entry point to code
020A:A299  87 DB				xchg	bx,bx
020A:A29B  90					nop
020A:A29C  51					push	cx
020A:A29D  57					push	di
020A:A29E  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:A2A3  06					push	es
020A:A2A4  E8 CEF6				call	sub_78			; (719D)
020A:A2A7  BF 4637				mov	di,4637h
020A:A2AA  B9 46F0				mov	cx,46F0h
020A:A2AD  81 E9 4637				sub	cx,4637h
020A:A2B1  B0 20				mov	al,20h			; ' '
020A:A2B3  FC					cld				; Clear direction
020A:A2B4  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:A2B6  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A2BB  9C					pushf				; Push flags
020A:A2BC  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A2C1  5A					pop	dx
020A:A2C2  8E C2				mov	es,dx
020A:A2C4  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:A2C9  5A					pop	dx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 340

020A:A2CA  75 0A				jnz	loc_1649		; Jump if not zero
020A:A2CC  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:A2D1  74 03				je	loc_1649		; Jump if equal
020A:A2D3  E8 D226				call	sub_85			; (74FC)
020A:A2D6			loc_1649:
020A:A2D6  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A2DB  9D					popf				; Pop flags
020A:A2DC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A2E1  5F					pop	di
020A:A2E2  59					pop	cx
020A:A2E3  C3					retn
							                        ;* No entry point to code
020A:A2E4  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:A2E9  06					push	es
020A:A2EA  E8 CEB0				call	sub_78			; (719D)
020A:A2ED  BF 6359				mov	di,6359h
020A:A2F0  B9 638B				mov	cx,638Bh
020A:A2F3  81 E9 6359				sub	cx,6359h
020A:A2F7  49					dec	cx
020A:A2F8  B0 20				mov	al,20h			; ' '
020A:A2FA  FC					cld				; Clear direction
020A:A2FB  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:A2FD  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A302  9C					pushf				; Push flags
020A:A303  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A308  5A					pop	dx
020A:A309  8E C2				mov	es,dx
020A:A30B  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:A310  5A					pop	dx
020A:A311  75 0A				jnz	loc_1650		; Jump if not zero
020A:A313  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:A318  74 03				je	loc_1650		; Jump if equal
020A:A31A  E8 D1DF				call	sub_85			; (74FC)
020A:A31D			loc_1650:
020A:A31D  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A322  9D					popf				; Pop flags
020A:A323  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A328  C3					retn
							                        ;* No entry point to code
020A:A329  87 DB				xchg	bx,bx
020A:A32B  90					nop
020A:A32C  51					push	cx
020A:A32D  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:A332  06					push	es
020A:A333  E8 CE67				call	sub_78			; (719D)
020A:A336  BF 63A4				mov	di,63A4h
020A:A339  B9 63D6				mov	cx,63D6h
020A:A33C  81 E9 63A4				sub	cx,63A4h
020A:A340  49					dec	cx
020A:A341  B0 20				mov	al,20h			; ' '
020A:A343  FC					cld				; Clear direction
020A:A344  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:A346  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A34B  9C					pushf				; Push flags
020A:A34C  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A351  5A					pop	dx
020A:A352  8E C2				mov	es,dx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 341

020A:A354  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:A359  5A					pop	dx
020A:A35A  75 0A				jnz	loc_1651		; Jump if not zero
020A:A35C  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:A361  74 03				je	loc_1651		; Jump if equal
020A:A363  E8 D196				call	sub_85			; (74FC)
020A:A366			loc_1651:
020A:A366  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A36B  9D					popf				; Pop flags
020A:A36C  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A371  59					pop	cx
020A:A372  C3					retn
							                        ;* No entry point to code
020A:A373  90					nop
020A:A374  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:A379  75 59				jne	loc_1653		; Jump if not equal
020A:A37B  52					push	dx
020A:A37C  56					push	si
020A:A37D  57					push	di
020A:A37E  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:A383  06					push	es
020A:A384  BA 34E8				mov	dx,34E8h
020A:A387  9A 1510:233C		;*		call	far ptr sub_134		;*(1510:233C)
020A:A387  9A					db	9Ah
020A:A388  233C 1510				dw	233Ch, 1510h
020A:A38C  E8 CE0E				call	sub_78			; (719D)
020A:A38F  BF 34E8				mov	di,34E8h
020A:A392  B0 20				mov	al,20h			; ' '
020A:A394  B9 35A0				mov	cx,35A0h
020A:A397  81 E9 34E8				sub	cx,34E8h
020A:A39B  FC					cld				; Clear direction
020A:A39C  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
020A:A39E  B8 0003				mov	ax,3
020A:A3A1  9A 1510:2280		;*		call	far ptr sub_133		;*(1510:2280)
020A:A3A1  9A					db	9Ah
020A:A3A2  2280 1510				dw	2280h, 1510h
020A:A3A6  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A3AB  9C					pushf				; Push flags
020A:A3AC  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A3B1  5A					pop	dx
020A:A3B2  8E C2				mov	es,dx
020A:A3B4  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:A3B9  5A					pop	dx
020A:A3BA  75 0A				jnz	loc_1652		; Jump if not zero
020A:A3BC  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:A3C1  74 03				je	loc_1652		; Jump if equal
020A:A3C3  E8 D136				call	sub_85			; (74FC)
020A:A3C6			loc_1652:
020A:A3C6  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A3CB  9D					popf				; Pop flags
020A:A3CC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A3D1  5F					pop	di
020A:A3D2  5E					pop	si
020A:A3D3  5A					pop	dx
020A:A3D4			loc_1653:
020A:A3D4  C7 06 3447 FFFF			mov	data_347,0FFFFh		; (020A:3447=2054h)
020A:A3DA  C3					retn
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 342

020A:A3DB  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_98		proc	near
020A:A3DC  50					push	ax
020A:A3DD  B4 3E				mov	ah,3Eh
020A:A3DF  CD 21				int	21h			; DOS Services  ah=function 3Eh
										;  close file, bx=file handle
020A:A3E1  58					pop	ax
020A:A3E2  C3					retn
				sub_98		endp

020A:A3E3  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_99		proc	near
020A:A3E4  80 3E 35E6 00			cmp	data_400,0		; (020A:35E6=9Ah)
020A:A3E9  75 03				jne	loc_1654		; Jump if not equal
020A:A3EB  E9 0083				jmp	loc_1660		; (A471)
020A:A3EE			loc_1654:
020A:A3EE  06					push	es
020A:A3EF  55					push	bp
020A:A3F0  F7 06 4E24 0040			test	data_503,40h		; (020A:4E24=885Eh)
020A:A3F6  75 77				jnz	loc_1659		; Jump if not zero
020A:A3F8  80 3E 4D49 01			cmp	data_482,1		; (020A:4D49=0B1h)
020A:A3FD  74 70				je	loc_1659		; Jump if equal
020A:A3FF  80 3E 309E 78			cmp	data_313,78h		; (020A:309E=55h) 'x'
020A:A404  74 0E				je	loc_1655		; Jump if equal
020A:A406  80 3E 309E F5			cmp	data_313,0F5h		; (020A:309E=55h)
020A:A40B  74 07				je	loc_1655		; Jump if equal
020A:A40D  80 3E 309E 4F			cmp	data_313,4Fh		; (020A:309E=55h) 'O'
020A:A412  75 5B				jne	loc_1659		; Jump if not equal
020A:A414			loc_1655:
020A:A414  83 3E 40F5 FF			cmp	word ptr ds:[40F5h],0FFFFh	; (020A:40F5=744Ch)
020A:A419  75 0E				jne	loc_1656		; Jump if not equal
020A:A41B  80 3E 327F 08			cmp	byte ptr data_336,8	; (020A:327F='nuineIntel')
020A:A420  74			data_645	db	74h
020A:A421  4D					dec	bp
020A:A422  80 3E 327F 09			cmp	byte ptr data_336,9	; (020A:327F='nuineIntel')
020A:A427  74 46				je	loc_1659		; Jump if equal
020A:A429			loc_1656:
020A:A429  E8 C32C				call	sub_66			; (6758)
020A:A42C  3E: C6 46 00 28			mov	byte ptr ds:[bp],28h	; '('
020A:A431  45					inc	bp
020A:A432  A1 40F5				mov	ax,word ptr ds:[40F5h]	; (020A:40F5=744Ch)
020A:A435  80 3E 327F 08			cmp	byte ptr data_336,8	; (020A:327F='nuineIntel')
020A:A43A  75 1B				jne	loc_1657		; Jump if not equal
020A:A43C  2B 06 3050				sub	ax,data_291		; (020A:3050=464Dh)
020A:A440  A9 0FFF				test	ax,0FFFh
020A:A443  75 12				jnz	loc_1657		; Jump if not zero
020A:A445  51					push	cx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 343

020A:A446  B1 0C				mov	cl,0Ch
020A:A448  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:A44A  59					pop	cx
020A:A44B  9A 1510:00B0		;*		call	far ptr sub_112		;*(1510:00B0)
020A:A44B  9A					db	9Ah
020A:A44C  00B0 1510				dw	0B0h, 1510h
020A:A450  3E: 88 7E 00				mov	ds:[bp],bh
020A:A454  45					inc	bp
020A:A455  EB 0B				jmp	short loc_1658		; (A462)
020A:A457			loc_1657:
020A:A457  3B 06 344A				cmp	ax,data_348		; (020A:344A=414Ch)
020A:A45B  74 05				je	loc_1658		; Jump if equal
020A:A45D  9A 1510:0118		;*		call	far ptr sub_115		;*(1510:0118)
020A:A45D  9A					db	9Ah
020A:A45E  0118 1510				dw	118h, 1510h
020A:A462			loc_1658:
020A:A462  A1 40F7				mov	ax,word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:A465  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:A465  9A					db	9Ah
020A:A466  021C 1510				dw	21Ch, 1510h
020A:A46A  3E: C6 46 00 29			mov	byte ptr ds:[bp],29h	; ')'
020A:A46F			loc_1659:
020A:A46F  5D					pop	bp
020A:A470  07					pop	es
020A:A471			loc_1660:
020A:A471  C3					retn
				sub_99		endp

							                        ;* No entry point to code
020A:A472  87 DB				xchg	bx,bx
020A:A474  53					push	bx
020A:A475  80 3E 327F 01			cmp	byte ptr data_336,1	; (020A:327F='nuineIntel')
020A:A47A  74 2A				je	loc_1661		; Jump if equal
020A:A47C  F6 06 3459 01			test	data_356,1		; (020A:3459=0ABh)
020A:A481  75 23				jnz	loc_1661		; Jump if not zero
020A:A483  80 3E 2B3B 06			cmp	data_231,6		; (020A:2B3B=0A0h)
020A:A488  72 1C				jb	loc_1661		; Jump if below
020A:A48A  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:A48F  74 15				je	loc_1661		; Jump if equal
020A:A491  A1 344C				mov	ax,data_349		; (020A:344C=5453h)
020A:A494  2B 06 3482				sub	ax,data_375		; (020A:3482=0E0A5h)
020A:A498  3D 0064				cmp	ax,64h
020A:A49B  77 09				ja	loc_1661		; Jump if above
020A:A49D  BB FFFF				mov	bx,0FFFFh
020A:A4A0  39 1E 3484				cmp	data_376,bx		; (020A:3484=0D3Ah)
020A:A4A4  75 03				jne	loc_1662		; Jump if not equal
020A:A4A6			loc_1661:
020A:A4A6  E9 00B9				jmp	loc_1670		; (A562)
020A:A4A9			loc_1662:
020A:A4A9  51					push	cx
020A:A4AA  56					push	si
020A:A4AB  57					push	di
020A:A4AC  2E: FF		data_647	db	0FFh
020A:A4AE  A336			data_648	dw	0A336h
020A:A4B0  38 06 01BA				cmp	byte ptr ds:[1BAh],al	; (020A:01BA=0)
020A:A4B4  00 8B 4A1E				add	[bp+di+4A1Eh],cl
020A:A4B8  34 A1				xor	al,0A1h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 344

020A:A4BA  82 34 3D				xor	byte ptr [si],3Dh	; '='
020A:A4BD  FF					db	0FFh
020A:A4BE  FF 74 73				push	word ptr [si+73h]
020A:A4C1  E8 BB08				call	sub_63			; (5FCC)
020A:A4C4  73 6E				jnc	loc_1668		; Jump if carry=0
020A:A4C6  9A 1510:55E4		;*		call	far ptr sub_166		;*(1510:55E4)
020A:A4C6  9A					db	9Ah
020A:A4C7  55E4 1510				dw	55E4h, 1510h
020A:A4CB  72 67				jc	loc_1668		; Jump if carry Set
020A:A4CD  56					push	si
020A:A4CE  8B F7				mov	si,di
020A:A4D0  E8 E2F5				call	sub_93			; (87C8)
020A:A4D3  5E					pop	si
020A:A4D4  BE 346A				mov	si,346Ah
020A:A4D7  B9 0003				mov	cx,3

020A:A4DA			locloop_1663:
020A:A4DA  8B 7C 02				mov	di,[si+2]
020A:A4DD  83 FF FF				cmp	di,0FFFFh
020A:A4E0  74 20				je	loc_1665		; Jump if equal
020A:A4E2  BA 0001				mov	dx,1
020A:A4E5  8B 1C				mov	bx,[si]
020A:A4E7  8B 44 02				mov	ax,[si+2]
020A:A4EA  E8 BADF				call	sub_63			; (5FCC)
020A:A4ED  73 13				jnc	loc_1665		; Jump if carry=0
020A:A4EF  9A 1510:55E4		;*		call	far ptr sub_166		;*(1510:55E4)
020A:A4EF  9A					db	9Ah
020A:A4F0  55E4 1510				dw	55E4h, 1510h
020A:A4F4  72 07				jc	loc_1664		; Jump if carry Set
020A:A4F6  56					push	si
020A:A4F7  8B F7				mov	si,di
020A:A4F9  E8 E2CC				call	sub_93			; (87C8)
020A:A4FC  5E					pop	si
020A:A4FD			loc_1664:
020A:A4FD  83 C6 04				add	si,4
020A:A500  E2 D8				loop	locloop_1663		; Loop if cx > 0

020A:A502			loc_1665:
020A:A502  89 1E 3484				mov	data_376,bx		; (020A:3484=0D3Ah)
020A:A506  BE 3476				mov	si,3476h
020A:A509  B9 0003				mov	cx,3

020A:A50C			locloop_1666:
020A:A50C  8B 7C 02				mov	di,[si+2]
020A:A50F  83 FF FF				cmp	di,0FFFFh
020A:A512  74 20				je	loc_1668		; Jump if equal
020A:A514  8B 1C				mov	bx,[si]
020A:A516  8B 44 02				mov	ax,[si+2]
020A:A519  BA 0002				mov	dx,2
020A:A51C  E8 BAAD				call	sub_63			; (5FCC)
020A:A51F  73 13				jnc	loc_1668		; Jump if carry=0
020A:A521  9A 1510:55E4		;*		call	far ptr sub_166		;*(1510:55E4)
020A:A521  9A					db	9Ah
020A:A522  55E4 1510				dw	55E4h, 1510h
020A:A526  72 07				jc	loc_1667		; Jump if carry Set
020A:A528  56					push	si
020A:A529  8B F7				mov	si,di
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 345

020A:A52B  E8 E29A				call	sub_93			; (87C8)
020A:A52E  5E					pop	si
020A:A52F			loc_1667:
020A:A52F  83 C6 04				add	si,4
020A:A532  E2 D8				loop	locloop_1666		; Loop if cx > 0

020A:A534			loc_1668:
020A:A534  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A539  9C					pushf				; Push flags
020A:A53A  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A53F  5A					pop	dx
020A:A540  8E C2				mov	es,dx
020A:A542  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:A547  5A					pop	dx
020A:A548  75 0A				jnz	loc_1669		; Jump if not zero
020A:A54A  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:A54F  74 03				je	loc_1669		; Jump if equal
020A:A551  E8 CFA8				call	sub_85			; (74FC)
020A:A554			loc_1669:
020A:A554  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:A559  9D					popf				; Pop flags
020A:A55A  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A55F  5F					pop	di
020A:A560  5E					pop	si
020A:A561  59					pop	cx
020A:A562			loc_1670:
020A:A562  5B					pop	bx
020A:A563  C3					retn
020A:A564  000C[00]				db	12 dup (0)

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_100		proc	near
020A:A570  53					push	bx
020A:A571  52					push	dx
020A:A572  1E					push	ds
020A:A573  E8 CC12				call	sub_75			; (7188)
020A:A576  33 F6				xor	si,si			; Zero register
020A:A578  B3 FF				mov	bl,0FFh
020A:A57A  B7 01				mov	bh,1
020A:A57C  BD 0005				mov	bp,5
020A:A57F			loc_1671:
020A:A57F  38 1C				cmp	[si],bl
020A:A581  74 33				je	loc_1675		; Jump if equal
020A:A583  39 44 03				cmp	[si+3],ax
020A:A586  73 1A				jae	loc_1674		; Jump if above or =
020A:A588			loc_1672:
020A:A588  33 D2				xor	dx,dx			; Zero register
020A:A58A  02 54 02				add	dl,[si+2]
020A:A58D  D1 E2				shl	dx,1			; Shift w/zeros fill
020A:A58F  84 7C 01				test	bh,[si+1]
020A:A592  75 06				jnz	loc_1673		; Jump if not zero
020A:A594  03 D5				add	dx,bp
020A:A596  03 F2				add	si,dx
020A:A598  EB E5				jmp	short loc_1671		; (A57F)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 346

020A:A59A			loc_1673:
020A:A59A  D1 E2				shl	dx,1			; Shift w/zeros fill
020A:A59C  03 D5				add	dx,bp
020A:A59E  03 F2				add	si,dx
020A:A5A0  EB DD				jmp	short loc_1671		; (A57F)
020A:A5A2			loc_1674:
020A:A5A2  77			data_650	db	77h
020A:A5A3  12 80 FE3C				adc	al,byte ptr ds:[0FE3Ch][bx+si]	; (020A:FE3C=16h)
020A:A5A7  74 DF				jz	loc_1672		; Jump if zero
020A:A5A9  38 0C				cmp	[si],cl
020A:A5AB  77			data_651	db	77h
020A:A5AC  09			data_652	db	9
020A:A5AD  75 D9				jnz	loc_1672		; Jump if not zero
020A:A5AF  38 6C 01				cmp	[si+1],ch
020A:A5B2  74 05				je	loc_1676		; Jump if equal
020A:A5B4  EB D2				jmp	short loc_1672		; (A588)
020A:A5B6			loc_1675:
020A:A5B6  F8					clc				; Clear carry flag
020A:A5B7  EB 01				jmp	short loc_1677		; (A5BA)
020A:A5B9			loc_1676:
020A:A5B9  F9					stc				; Set carry flag
020A:A5BA			loc_1677:
020A:A5BA  8C DB				mov	bx,ds
020A:A5BC  8E C3				mov	es,bx
020A:A5BE  1F					pop	ds
020A:A5BF  5A					pop	dx
020A:A5C0  5B					pop	bx
020A:A5C1  C3					retn
				sub_100		endp

020A:A5C2  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_101		proc	near
020A:A5C4  E8 AD65				call	sub_36			; (532C)
020A:A5C7  50					push	ax
020A:A5C8  53					push	bx
020A:A5C9  51					push	cx
020A:A5CA  52					push	dx
020A:A5CB  57					push	di
020A:A5CC  56					push	si
020A:A5CD  55					push	bp
020A:A5CE  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:A5D3  06					push	es
020A:A5D4  8B 0E 4E82				mov	cx,data_545		; (020A:4E82=0E8F5h)
020A:A5D8  83 E9 0B				sub	cx,0Bh
020A:A5DB  3B 0E 4E80				cmp	cx,word ptr ds:[4E80h]	; (020A:4E80=0EEE8h)
020A:A5DF  77 03				ja	loc_1678		; Jump if above
020A:A5E1  E9 011E				jmp	loc_1696		; (A702)
020A:A5E4			loc_1678:
020A:A5E4  9A 1510:4610		;*		call	far ptr sub_163		;*(1510:4610)
020A:A5E4  9A					db	9Ah
020A:A5E5  4610 1510				dw	4610h, 1510h
020A:A5E9  83 FB 00				cmp	bx,0
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 347

020A:A5EC  75 10				jne	loc_1679		; Jump if not equal
020A:A5EE  3D 0400				cmp	ax,400h
020A:A5F1  72 0B				jb	loc_1679		; Jump if below
020A:A5F3  3D 0500				cmp	ax,500h
020A:A5F6  77 15				ja	loc_1680		; Jump if above
020A:A5F8  BB 0040				mov	bx,40h
020A:A5FB  2D 0400				sub	ax,400h
020A:A5FE			loc_1679:
020A:A5FE  83 FB 40				cmp	bx,40h
020A:A601  75 0A				jne	loc_1680		; Jump if not equal
020A:A603  3D 0100				cmp	ax,100h
020A:A606  75 05				jne	loc_1680		; Jump if not equal
020A:A608  33 C0				xor	ax,ax			; Zero register
020A:A60A  BB 0050				mov	bx,50h
020A:A60D			loc_1680:
020A:A60D  BE 0000				mov	si,0
020A:A610  E8 CB81				call	sub_76			; (7194)
020A:A613  B5 01				mov	ch,1
020A:A615			loc_1681:
020A:A615  26: 39 1C				cmp	es:[si],bx
020A:A618  75 0C				jne	loc_1682		; Jump if not equal
020A:A61A  26: 3B 44 02				cmp	ax,es:[si+2]
020A:A61E  72 06				jb	loc_1682		; Jump if below
020A:A620  26: 3B 44 04				cmp	ax,es:[si+4]
020A:A624  76 0E				jbe	loc_1683		; Jump if below or =
020A:A626			loc_1682:
020A:A626  FE C5				inc	ch
020A:A628  83 C6 15				add	si,15h
020A:A62B  3A 2E 3040				cmp	ch,data_285		; (020A:3040=0B3h)
020A:A62F  76 E4				jbe	loc_1681		; Jump if below or =
020A:A631  E9 00CE				jmp	loc_1696		; (A702)
020A:A634			loc_1683:
020A:A634  FE CD				dec	ch
020A:A636  8A CD				mov	cl,ch
020A:A638  32 ED				xor	ch,ch			; Zero register
020A:A63A  3B 1E 344A				cmp	bx,data_348		; (020A:344A=414Ch)
020A:A63E  74 03				je	loc_1684		; Jump if equal
020A:A640  80 CD 01				or	ch,1
020A:A643			loc_1684:
020A:A643  83 FA 04				cmp	dx,4
020A:A646  74 0D				je	loc_1686		; Jump if equal
020A:A648  83 FA 02				cmp	dx,2
020A:A64B  74 05				je	loc_1685		; Jump if equal
020A:A64D  80 CD 02				or	ch,2
020A:A650  EB 03				jmp	short loc_1686		; (A655)
020A:A652			loc_1685:
020A:A652  80 CD 04				or	ch,4
020A:A655			loc_1686:
020A:A655  E8 FF18				call	sub_100			; (A570)
020A:A658  72 04				jc	loc_1687		; Jump if carry Set
020A:A65A  B7 01				mov	bh,1
020A:A65C  EB 48				jmp	short loc_1692		; (A6A6)
020A:A65E			loc_1687:
020A:A65E  32 FF				xor	bh,bh			; Zero register
020A:A660  26: 8A 54 02				mov	dl,es:[si+2]
020A:A664  80 FA FF				cmp	dl,0FFh
020A:A667  74 25				je	loc_1689		; Jump if equal
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 348

020A:A669  8B FE				mov	di,si
020A:A66B  83 C6 05				add	si,5
020A:A66E  32 F6				xor	dh,dh			; Zero register
020A:A670  D1 E2				shl	dx,1			; Shift w/zeros fill
020A:A672  F6 C5 01				test	ch,1
020A:A675  74 02				jz	loc_1688		; Jump if zero
020A:A677  D1 E2				shl	dx,1			; Shift w/zeros fill
020A:A679			loc_1688:
020A:A679  03 F2				add	si,dx
020A:A67B  8B 16 344C				mov	dx,data_349		; (020A:344C=5453h)
020A:A67F  2B 16 5616				sub	dx,word ptr ds:[5616h]	; (020A:5616=10B9h)
020A:A683  F6 C5 01				test	ch,1
020A:A686  75 08				jnz	loc_1690		; Jump if not zero
020A:A688  26: 3B 54 FE				cmp	dx,es:[si-2]
020A:A68C  75 14				jne	loc_1691		; Jump if not equal
020A:A68E			loc_1689:
020A:A68E  EB 72				jmp	short loc_1696		; (A702)
020A:A690			loc_1690:
020A:A690  26: 3B 54 FC				cmp	dx,es:[si-4]
020A:A694  75 0C				jne	loc_1691		; Jump if not equal
020A:A696  8B 16 344A				mov	dx,data_348		; (020A:344A=414Ch)
020A:A69A  26: 3B 54 FE				cmp	dx,es:[si-2]
020A:A69E  75 02				jne	loc_1691		; Jump if not equal
020A:A6A0  EB 60				jmp	short loc_1696		; (A702)
020A:A6A2			loc_1691:
020A:A6A2  26: FE 45 02				inc	byte ptr es:[di+2]
020A:A6A6			loc_1692:
020A:A6A6  8B D6				mov	dx,si
020A:A6A8  8A DD				mov	bl,ch
020A:A6AA  51					push	cx
020A:A6AB  8B 3E 4E80				mov	di,word ptr ds:[4E80h]	; (020A:4E80=0EEE8h)
020A:A6AF  8B F7				mov	si,di
020A:A6B1  8B CF				mov	cx,di
020A:A6B3  2B CA				sub	cx,dx
020A:A6B5  83 C7 02				add	di,2
020A:A6B8  83 C1 02				add	cx,2
020A:A6BB  0A FF				or	bh,bh			; Zero ?
020A:A6BD  74 03				jz	loc_1693		; Jump if zero
020A:A6BF  83 C7 05				add	di,5
020A:A6C2			loc_1693:
020A:A6C2  F6 C3 01				test	bl,1
020A:A6C5  74 03				jz	loc_1694		; Jump if zero
020A:A6C7  83 C7 02				add	di,2
020A:A6CA			loc_1694:
020A:A6CA  89 3E 4E80				mov	word ptr ds:[4E80h],di	; (020A:4E80=0EEE8h)
020A:A6CE  06					push	es
020A:A6CF  1F					pop	ds
020A:A6D0  FD					std				; Set direction flag
020A:A6D1  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A6D3  E8 CAAF				call	sub_74			; (7185)
020A:A6D6  59					pop	cx
020A:A6D7  8B F2				mov	si,dx
020A:A6D9  0A FF				or	bh,bh			; Zero ?
020A:A6DB  74 0F				jz	loc_1695		; Jump if zero
020A:A6DD  26: 89 0C				mov	es:[si],cx
020A:A6E0  26: C6 44 02 01			mov	byte ptr es:[si+2],1
020A:A6E5  26: 89 44 03				mov	es:[si+3],ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 349

020A:A6E9  83 C6 05				add	si,5
020A:A6EC			loc_1695:
020A:A6EC  A1 344C				mov	ax,word ptr ds:[344Ch]	; (745A:344C=0FFFFh)
020A:A6EF  2B 06 5616				sub	ax,word ptr ds:[5616h]	; (745A:5616=0FFFFh)
020A:A6F3  26: 89 04				mov	es:[si],ax
020A:A6F6  F6 C3 01				test	bl,1
020A:A6F9  74 07				jz	loc_1696		; Jump if zero
020A:A6FB  A1 344A				mov	ax,word ptr ds:[344Ah]	; (745A:344A=0FFFFh)
020A:A6FE  26: 89 44 02				mov	es:[si+2],ax
020A:A702			loc_1696:
020A:A702  FC					cld				; Clear direction
020A:A703  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:A708  9C					pushf				; Push flags
020A:A709  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:A70E  5A					pop	dx
020A:A70F  8E C2				mov	es,dx
020A:A711  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:A716  5A					pop	dx
020A:A717  75 0A				jnz	loc_1697		; Jump if not zero
020A:A719  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:A71E  74 03				je	loc_1697		; Jump if equal
020A:A720  E8			data_654	db	0E8h
020A:A721  D9					db	0D9h
020A:A722  CD 2E				int	2Eh			; Execute DOS command at DS:SI
										;  all regs & ss:sp destroyed
020A:A724  FF 36 0096				push	word ptr ds:[96h]	; (745A:0096=0FFFFh)
020A:A728  9D					popf				; Pop flags
020A:A729  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:A72E  5D					pop	bp
020A:A72F  5E					pop	si
020A:A730  5F					pop	di
020A:A731  5A					pop	dx
020A:A732  59					pop	cx
020A:A733  5B					pop	bx
020A:A734  58					pop	ax
020A:A735  C3					retn
				sub_101		endp

							                        ;* No entry point to code
020A:A736  87 DB				xchg	bx,bx
020A:A738  50					push	ax
020A:A739  53					push	bx
020A:A73A  51					push	cx
020A:A73B  52					push	dx
020A:A73C  56					push	si
020A:A73D  57					push	di
020A:A73E  55					push	bp
020A:A73F  BF 0008				mov	di,8
020A:A742  8B F7				mov	si,di
020A:A744  BB 40C2				mov	bx,40C2h
020A:A747  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:A74C  72 03				jb	loc_1698		; Jump if below
020A:A74E  E9 02DB				jmp	loc_1739		; (AA2C)
020A:A751			loc_1698:
020A:A751  26: 8A 45 05				mov	al,es:[di+5]
020A:A755  25 000F				and	ax,0Fh
020A:A758  D7					xlat				; al=[al+[bx]] table
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 350

020A:A759  0A C0				or	al,al			; Zero ?
020A:A75B  75 04				jnz	loc_1699		; Jump if not zero
020A:A75D  26: 8A 45 06				mov	al,es:[di+6]
020A:A761			loc_1699:
020A:A761  8B F7				mov	si,di
020A:A763  03 F0				add	si,ax
020A:A765  26: 3B 36 0000			cmp	si,word ptr es:[0]	; (020A:0000=1828h)
020A:A76A  72 03				jb	loc_1700		; Jump if below
020A:A76C  E9 02BD				jmp	loc_1739		; (AA2C)
020A:A76F			loc_1700:
020A:A76F  26: 8B 05				mov	ax,es:[di]
020A:A772  26: 3B 04				cmp	ax,es:[si]
020A:A775  74 03				je	loc_1701		; Jump if equal
020A:A777  E9 0294				jmp	loc_1736		; (AA0E)
020A:A77A			loc_1701:
020A:A77A  26: 8B 45 02				mov	ax,es:[di+2]
020A:A77E  26: 3B 44 02				cmp	ax,es:[si+2]
020A:A782  75 03				jne	loc_1702		; Jump if not equal
020A:A784  E9 0152				jmp	loc_1721		; (A8D9)
020A:A787			loc_1702:
020A:A787  26: F6 45 05 80			test	byte ptr es:[di+5],80h
020A:A78C  74 03				jz	loc_1703		; Jump if zero
020A:A78E  E9 027D				jmp	loc_1736		; (AA0E)
020A:A791			loc_1703:
020A:A791  26: 8B 45 08				mov	ax,es:[di+8]
020A:A795  26: 03 45 02				add	ax,es:[di+2]
020A:A799  73 07				jnc	loc_1704		; Jump if carry=0
020A:A79B  40					inc	ax
020A:A79C  26: 29 45 08				sub	es:[di+8],ax
020A:A7A0  EB E5				jmp	short loc_1702		; (A787)
020A:A7A2			loc_1704:
020A:A7A2  26			data_655	db	26h			; Data table (indexed access)
020A:A7A3  3B 44 02				cmp	ax,[si+2]
020A:A7A6  77 03				ja	loc_1705		; Jump if above
020A:A7A8  E9 0263				jmp	loc_1736		; (AA0E)
020A:A7AB			loc_1705:
020A:A7AB  83 3E 31E7 00			cmp	data_326,0		; (020A:31E7=336Dh)
020A:A7B0  75 19				jne	loc_1706		; Jump if not equal
020A:A7B2  26: 8A 45 04				mov	al,es:[di+4]
020A:A7B6  24 3F				and	al,3Fh			; '?'
020A:A7B8  3C 20				cmp	al,20h			; ' '
020A:A7BA  75 0F				jne	loc_1706		; Jump if not equal
020A:A7BC  26: 8B 45 02				mov	ax,es:[di+2]
020A:A7C0  26: 03 45 08				add	ax,es:[di+8]
020A:A7C4  A3 31E7				mov	data_326,ax		; (020A:31E7=336Dh)
020A:A7C7  89 3E 31E9				mov	data_327,di		; (020A:31E9=5C32h)
020A:A7CB			loc_1706:
020A:A7CB  26: 8A 45 04				mov	al,es:[di+4]
020A:A7CF  24 3F				and	al,3Fh			; '?'
020A:A7D1  3C 21				cmp	al,21h			; '!'
020A:A7D3  74 04				je	loc_1707		; Jump if equal
020A:A7D5  3C 22				cmp	al,22h			; '"'
020A:A7D7  75 03				jne	loc_1708		; Jump if not equal
020A:A7D9			loc_1707:
020A:A7D9  E9 0091				jmp	loc_1716		; (A86D)
020A:A7DC			loc_1708:
020A:A7DC  26: 8A 44 04				mov	al,es:[si+4]
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 351

020A:A7E0  24 3F				and	al,3Fh			; '?'
020A:A7E2  3C 21				cmp	al,21h			; '!'
020A:A7E4  75 03				jne	loc_1710		; Jump if not equal
020A:A7E6			loc_1709:
020A:A7E6  E9 00A4				jmp	loc_1718		; (A88D)
020A:A7E9			loc_1710:
020A:A7E9  3C 22				cmp	al,22h			; '"'
020A:A7EB  74 F9				je	loc_1709		; Jump if equal
020A:A7ED  87 F7				xchg	si,di
020A:A7EF  9A 1510:55E4		;*		call	far ptr sub_166		;*(1510:55E4)
020A:A7EF  9A					db	9Ah
020A:A7F0  55E4 1510				dw	55E4h, 1510h
020A:A7F4  87 F7				xchg	si,di
020A:A7F6  72 75				jc	loc_1716		; Jump if carry Set
020A:A7F8  9A 1510:55E4		;*		call	far ptr sub_166		;*(1510:55E4)
020A:A7F8  9A					db	9Ah
020A:A7F9  55E4 1510				dw	55E4h, 1510h
020A:A7FD  72 5D				jc	loc_1714		; Jump if carry Set
020A:A7FF  26: 8B 44 02				mov	ax,es:[si+2]
020A:A803  26: 2B 45 02				sub	ax,es:[di+2]
020A:A807  BA 0004				mov	dx,4
020A:A80A  26: 8A 4D 04				mov	cl,es:[di+4]
020A:A80E  80 E1 3F				and	cl,3Fh			; '?'
020A:A811  80 F9 20				cmp	cl,20h			; ' '
020A:A814  75 03				jne	loc_1711		; Jump if not equal
020A:A816  BA 03F0				mov	dx,3F0h
020A:A819			loc_1711:
020A:A819  3B C2				cmp	ax,dx
020A:A81B  73 50				jae	loc_1716		; Jump if above or =
020A:A81D  81 FA 03F0				cmp	dx,3F0h
020A:A821  74 03				je	loc_1712		; Jump if equal
020A:A823  E9 00B9				jmp	loc_1722		; (A8DF)
020A:A826			loc_1712:
020A:A826  26: 8A 44 04				mov	al,es:[si+4]
020A:A82A  24 3F				and	al,3Fh			; '?'
020A:A82C  3C 02				cmp	al,2
020A:A82E  74 3D				je	loc_1716		; Jump if equal
020A:A830  3C 04				cmp	al,4
020A:A832  74 39				je	loc_1716		; Jump if equal
020A:A834  3C 20				cmp	al,20h			; ' '
020A:A836  75 19				jne	loc_1713		; Jump if not equal
020A:A838  53					push	bx
020A:A839  06					push	es
020A:A83A  26: 8B 5C 02				mov	bx,es:[si+2]
020A:A83E  26: 8B 04				mov	ax,es:[si]
020A:A841  8E C0				mov	es,ax
020A:A843  26: 8A 47 FF				mov	al,es:[bx-1]
020A:A847  07					pop	es
020A:A848  5B					pop	bx
020A:A849  3C 00				cmp	al,0
020A:A84B  74 20				je	loc_1716		; Jump if equal
020A:A84D  3C 24				cmp	al,24h			; '$'
020A:A84F  74 1C				je	loc_1716		; Jump if equal
020A:A851			loc_1713:
020A:A851  26: 8B 44 02				mov	ax,es:[si+2]
020A:A855  26: 2B 45 02				sub	ax,es:[di+2]
020A:A859  E9 0083				jmp	loc_1722		; (A8DF)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 352

020A:A85C			loc_1714:
020A:A85C  26: 8B 44 02				mov	ax,es:[si+2]
020A:A860  26: 2B 45 02				sub	ax,es:[di+2]
020A:A864  3D 03F0				cmp	ax,3F0h
020A:A867  73 02				jae	loc_1715		; Jump if above or =
020A:A869  EB 74				jmp	short loc_1722		; (A8DF)
020A:A86B			loc_1715:
020A:A86B  EB 6C				jmp	short loc_1721		; (A8D9)
020A:A86D			loc_1716:
020A:A86D  26: 8B 44 02				mov	ax,es:[si+2]
020A:A871  26: 2B 45 02				sub	ax,es:[di+2]
020A:A875  8B C8				mov	cx,ax
020A:A877  26: 87 45 08				xchg	es:[di+8],ax
020A:A87B  2B C1				sub	ax,cx
020A:A87D  26: 3B 44 08				cmp	ax,es:[si+8]
020A:A881  77 03				ja	loc_1717		; Jump if above
020A:A883  E9 0188				jmp	loc_1736		; (AA0E)
020A:A886			loc_1717:
020A:A886  26: 2B 44 02				sub	ax,es:[si+2]
020A:A88A  E9 0181				jmp	loc_1736		; (AA0E)
020A:A88D			loc_1718:
020A:A88D  26: 8B 45 02				mov	ax,es:[di+2]
020A:A891  26: 03 45 08				add	ax,es:[di+8]
020A:A895  26: 8B 4C 02				mov	cx,es:[si+2]
020A:A899  26: 03 4C 08				add	cx,es:[si+8]
020A:A89D  3B C8				cmp	cx,ax
020A:A89F  76 38				jbe	loc_1721		; Jump if below or =
020A:A8A1  2B C8				sub	cx,ax
020A:A8A3  26			data_658	db	26h
020A:A8A4  89 44 02				mov	[si+2],ax
020A:A8A7  26: 89 4C 08				mov	es:[si+8],cx
020A:A8AB  57					push	di
020A:A8AC  26: 8A		data_660	db	8Ah
020A:A8AE  44					inc	sp
020A:A8AF  05			data_661	db	5
020A:A8B0  25 000F				and	ax,0Fh
020A:A8B3  D7					xlat				; al=[al+[bx]] table
020A:A8B4  0A C0				or	al,al			; Zero ?
020A:A8B6  75 04				jnz	loc_1719		; Jump if not zero
020A:A8B8  26: 8A 44 06				mov	al,es:[si+6]
020A:A8BC			loc_1719:
020A:A8BC  8B FE				mov	di,si
020A:A8BE  03 F8				add	di,ax
020A:A8C0  26: 8B 05				mov	ax,es:[di]
020A:A8C3  26: 3B 04				cmp	ax,es:[si]
020A:A8C6  75 0D				jne	loc_1720		; Jump if not equal
020A:A8C8  26: 8B 45 02				mov	ax,es:[di+2]
020A:A8CC  26: 3B 44 02				cmp	ax,es:[si+2]
020A:A8D0  77 03				ja	loc_1720		; Jump if above
020A:A8D2  5F					pop	di
020A:A8D3  EB 04				jmp	short loc_1721		; (A8D9)
020A:A8D5			loc_1720:
020A:A8D5  5F					pop	di
020A:A8D6  E9 00F4				jmp	loc_1732		; (A9CD)
020A:A8D9			loc_1721:
020A:A8D9  E8 DEEC				call	sub_93			; (87C8)
020A:A8DC  E9 0147				jmp	loc_1738		; (AA26)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 353

020A:A8DF			loc_1722:
020A:A8DF  26: 80		data_662	db	80h			; Data table (indexed access)
020A:A8E1  4C					dec	sp
020A:A8E2  05 2680				add	ax,2680h
020A:A8E5  F6 45 05 80				test	byte ptr [di+5],80h
020A:A8E9  1974 8B26		data_663	dw	1974h, 8B26h
020A:A8ED  4D					dec	bp
020A:A8EE  06					push	es
020A:A8EF  81 E1 03FF				and	cx,3FFh
020A:A8F3  03 C1				add	ax,cx
020A:A8F5  72 05				jc	loc_1723		; Jump if carry Set
020A:A8F7  3D 03F0				cmp	ax,3F0h
020A:A8FA  76 08				jbe	loc_1724		; Jump if below or =
020A:A8FC			loc_1723:
020A:A8FC  C7 06 31E7 0000			mov	data_326,0		; (020A:31E7=336Dh)
020A:A902  EB D5				jmp	short loc_1721		; (A8D9)
020A:A904			loc_1724:
020A:A904  26: 81 64 06 FC00			and	word ptr es:[si+6],0FC00h
020A:A90A  26: 09 44 06				or	es:[si+6],ax
020A:A90E  26: 8A 45 05				mov	al,es:[di+5]
020A:A912  24 03				and	al,3
020A:A914  26: 8A 64 05				mov	ah,es:[si+5]
020A:A918  80 E4 03				and	ah,3
020A:A91B  D0 C4				rol	ah,1			; Rotate
020A:A91D  D0 C4				rol	ah,1			; Rotate
020A:A91F  0A C4				or	al,ah
020A:A921  53					push	bx
020A:A922  BB 4E77				mov	bx,4E77h
020A:A925  D7					xlat				; al=[al+[bx]] table
020A:A926  5B					pop	bx
020A:A927  8A D0				mov	dl,al
020A:A929  24 7F				and	al,7Fh
020A:A92B  32 E4				xor	ah,ah			; Zero register
020A:A92D  8B C8				mov	cx,ax
020A:A92F  E3 51				jcxz	loc_1728		; Jump if cx=0
020A:A931  26: 8A 44 05				mov	al,es:[si+5]
020A:A935  25 000F				and	ax,0Fh
020A:A938  D7					xlat				; al=[al+[bx]] table
020A:A939  57					push	di
020A:A93A  56					push	si
020A:A93B  06					push	es
020A:A93C  1F					pop	ds
020A:A93D  03 F0				add	si,ax
020A:A93F  F6 C2 80				test	dl,80h
020A:A942  74 19				jz	loc_1725		; Jump if zero
020A:A944  8B FE				mov	di,si
020A:A946  2B F9				sub	di,cx
020A:A948  26: A1 0000				mov	ax,word ptr es:[0]	; (020A:0000=1828h)
020A:A94C  26: 29 0E 0000			sub	word ptr es:[0],cx	; (020A:0000=1828h)
020A:A951  E8 00E0				call	sub_102			; (AA34)
020A:A954  8B C8				mov	cx,ax
020A:A956  2B CE				sub	cx,si
020A:A958  FC					cld				; Clear direction
020A:A959  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A95B  EB 23				jmp	short loc_1727		; (A980)
020A:A95D			loc_1725:
020A:A95D  26: A1 0000				mov	ax,word ptr es:[0]	; (020A:0000=1828h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 354

020A:A961  2B C6				sub	ax,si
020A:A963  26: 8B 36 0000			mov	si,word ptr es:[0]	; (020A:0000=1828h)
020A:A968  4E					dec	si
020A:A969  8B FE				mov	di,si
020A:A96B  03 F9				add	di,cx
020A:A96D  26: 01 0E 0000			add	word ptr es:[0],cx	; (020A:0000=1828h)
020A:A972  E8 00BF				call	sub_102			; (AA34)
020A:A975  8B C8				mov	cx,ax
020A:A977  73 03				jnc	loc_1726		; Jump if carry=0
020A:A979  E9 C1B2				jmp	loc_983			; (6B2E)
020A:A97C			loc_1726:
020A:A97C  FD					std				; Set direction flag
020A:A97D  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A97F  FC					cld				; Clear direction
020A:A980			loc_1727:
020A:A980  5E					pop	si
020A:A981  5F					pop	di
020A:A982			loc_1728:
020A:A982  26: 80 4D 04 40			or	byte ptr es:[di+4],40h	; '@'
020A:A987  26: 8A 45 04				mov	al,es:[di+4]
020A:A98B  24 3F				and	al,3Fh			; '?'
020A:A98D  26: 80 64 04 C0			and	byte ptr es:[si+4],0C0h
020A:A992  26: 08 44 04				or	es:[si+4],al
020A:A996  26: 8A 45 05				mov	al,es:[di+5]
020A:A99A  24 03				and	al,3
020A:A99C  3C 03				cmp	al,3
020A:A99E  75 02				jne	loc_1729		; Jump if not equal
020A:A9A0  FE			data_664	db	0FEh			; Data table (indexed access)
020A:A9A1  C8					db	0C8h
020A:A9A2			loc_1729:
020A:A9A2  26: 80 64 05 FC			and	byte ptr es:[si+5],0FCh
020A:A9A7  26: 08 44 05				or	es:[si+5],al
020A:A9AB  3C 00				cmp	al,0
020A:A9AD  74 1B				je	loc_1731		; Jump if equal
020A:A9AF  57					push	di
020A:A9B0  56					push	si
020A:A9B1  B9 0002				mov	cx,2
020A:A9B4  3C 01				cmp	al,1
020A:A9B6  74 03				je	loc_1730		; Jump if equal
020A:A9B8  B9 000F				mov	cx,0Fh
020A:A9BB			loc_1730:
020A:A9BB  83 C7 0A				add	di,0Ah
020A:A9BE  83 C6 0A				add	si,0Ah
020A:A9C1  87 F7				xchg	si,di
020A:A9C3  06					push	es
020A:A9C4  1F					pop	ds
020A:A9C5  FC					cld				; Clear direction
020A:A9C6  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:A9C8  5E					pop	si
020A:A9C9  5F					pop	di
020A:A9CA			loc_1731:
020A:A9CA  E8 C7B8				call	sub_74			; (7185)
020A:A9CD			loc_1732:
020A:A9CD  E8 0080				call	sub_103			; (AA50)
020A:A9D0  26: 8A 44 05				mov	al,es:[si+5]
020A:A9D4  25 000F				and	ax,0Fh
020A:A9D7  D7					xlat				; al=[al+[bx]] table
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 355

020A:A9D8  0A C0				or	al,al			; Zero ?
020A:A9DA  75 04				jnz	loc_1733		; Jump if not zero
020A:A9DC  26: 8A 44 06				mov	al,es:[si+6]
020A:A9E0			loc_1733:
020A:A9E0  03 F0				add	si,ax
020A:A9E2  26: 3B 36 0000			cmp	si,word ptr es:[0]	; (020A:0000=1828h)
020A:A9E7  73 09				jae	loc_1734		; Jump if above or =
020A:A9E9  26: 83 3C FF				cmp	word ptr es:[si],0FFFFh
020A:A9ED  75 00				jnz	$+2			; delay for I/O
020A:A9EF  E9 FD7D				jmp	loc_1700		; (A76F)
020A:A9F2			loc_1734:
020A:A9F2  26: 8A 45 05				mov	al,es:[di+5]
020A:A9F6  25 000F				and	ax,0Fh
020A:A9F9  D7					xlat				; al=[al+[bx]] table
020A:A9FA  0A C0				or	al,al			; Zero ?
020A:A9FC  75 04				jnz	loc_1735		; Jump if not zero
020A:A9FE  26: 8A 45 06				mov	al,es:[di+6]
020A:AA02			loc_1735:
020A:AA02  03 F8				add	di,ax
020A:AA04  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:AA09  73 21				jae	loc_1739		; Jump if above or =
020A:AA0B  E9 FD43				jmp	loc_1698		; (A751)
020A:AA0E			loc_1736:
020A:AA0E  E8 003F				call	sub_103			; (AA50)
020A:AA11  26: 8A 45 05				mov	al,es:[di+5]
020A:AA15  25 000F				and	ax,0Fh
020A:AA18  D7					xlat				; al=[al+[bx]] table
020A:AA19  0A C0				or	al,al			; Zero ?
020A:AA1B  75 04				jnz	loc_1737		; Jump if not zero
020A:AA1D  26: 8A 45 06				mov	al,es:[di+6]
020A:AA21			loc_1737:
020A:AA21  03 F8				add	di,ax
020A:AA23  E9 FD2B				jmp	loc_1698		; (A751)
020A:AA26			loc_1738:
020A:AA26  E8 0027				call	sub_103			; (AA50)
020A:AA29  E9 FD25				jmp	loc_1698		; (A751)
020A:AA2C			loc_1739:
020A:AA2C  5D					pop	bp
020A:AA2D  5F					pop	di
020A:AA2E  5E					pop	si
020A:AA2F  5A					pop	dx
020A:AA30  59					pop	cx
020A:AA31  5B					pop	bx
020A:AA32  58					pop	ax
020A:AA33  C3					retn

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_102		proc	near
020A:AA34  50					push	ax
020A:AA35  26: A1 0008				mov	ax,word ptr es:[8]	; (020A:0008=6702h)
020A:AA39  26: A3 0002				mov	word ptr es:[2],ax	; (020A:0002=10h)
020A:AA3D  26: A1 000A				mov	ax,word ptr es:[0Ah]	; (020A:000A=272Dh)
020A:AA41  26: A3 0004				mov	word ptr es:[4],ax	; (020A:0004=808h)
020A:AA45  26: C7 06 0006 0008			mov	word ptr es:[6],8	; (020A:0006=3)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 356

020A:AA4C  58					pop	ax
020A:AA4D  C3					retn
				sub_102		endp

020A:AA4E  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_103		proc	near
020A:AA50  26: 8A 45 04				mov	al,es:[di+4]
020A:AA54  24 3F				and	al,3Fh			; '?'
020A:AA56  8A E0				mov	ah,al
020A:AA58  26: 8B 4D 08				mov	cx,es:[di+8]
020A:AA5C  3C 21				cmp	al,21h			; '!'
020A:AA5E  75 09				jne	loc_1740		; Jump if not equal
020A:AA60  83 F9 06				cmp	cx,6
020A:AA63  77 32				ja	loc_1744		; Jump if above
020A:AA65  B4 01				mov	ah,1
020A:AA67  EB 25				jmp	short loc_1743		; (AA8E)
020A:AA69			loc_1740:
020A:AA69  3C 22				cmp	al,22h			; '"'
020A:AA6B  75 09				jne	loc_1741		; Jump if not equal
020A:AA6D  83 F9 06				cmp	cx,6
020A:AA70  77 25				ja	loc_1744		; Jump if above
020A:AA72  B4 02				mov	ah,2
020A:AA74  EB 18				jmp	short loc_1743		; (AA8E)
020A:AA76			loc_1741:
020A:AA76  3C 04				cmp	al,4
020A:AA78  75 09				jne	loc_1742		; Jump if not equal
020A:AA7A  83 F9 04				cmp	cx,4
020A:AA7D  73 18				jae	loc_1744		; Jump if above or =
020A:AA7F  B4 02				mov	ah,2
020A:AA81  B0 02				mov	al,2
020A:AA83			loc_1742:
020A:AA83  3C 02				cmp	al,2
020A:AA85  75 07				jne	loc_1743		; Jump if not equal
020A:AA87  83 F9 02				cmp	cx,2
020A:AA8A  73 02				jae	loc_1743		; Jump if above or =
020A:AA8C  B4 01				mov	ah,1
020A:AA8E			loc_1743:
020A:AA8E  26: 80 65 04 C0			and	byte ptr es:[di+4],0C0h
020A:AA93  26: 08 65 04				or	es:[di+4],ah
020A:AA97			loc_1744:
020A:AA97  C3					retn
				sub_103		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_104		proc	near
020A:AA98  53					push	bx
020A:AA99  57					push	di
020A:AA9A  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 357

020A:AA9F  06					push	es
020A:AAA0  26			data_666	db	26h			; Data table (indexed access)
020A:AAA1  8B 05				mov	ax,[di]
020A:AAA3  26: 8B 5D 02				mov	bx,es:[di+2]
020A:AAA7  E8 C6EA				call	sub_76			; (7194)
020A:AAAA  BF 0000				mov	di,0
020A:AAAD			loc_1745:
020A:AAAD  26: 83 3D FF				cmp	word ptr es:[di],0FFFFh
020A:AAB1  75 07				jne	loc_1746		; Jump if not equal
020A:AAB3  26: 83 7D 02 FF			cmp	word ptr es:[di+2],0FFFFh
020A:AAB8  74 1A				je	loc_1749		; Jump if equal
020A:AABA			loc_1746:
020A:AABA  26: 3B 05				cmp	ax,es:[di]
020A:AABD  75 0C				jne	loc_1747		; Jump if not equal
020A:AABF  26: 3B 5D 02				cmp	bx,es:[di+2]
020A:AAC3  72 06				jb	loc_1747		; Jump if below
020A:AAC5  26: 3B 5D 04				cmp	bx,es:[di+4]
020A:AAC9  76 05				jbe	loc_1748		; Jump if below or =
020A:AACB			loc_1747:
020A:AACB  83 C7 15				add	di,15h
020A:AACE  EB DD				jmp	short loc_1745		; (AAAD)
020A:AAD0			loc_1748:
020A:AAD0  F9					stc				; Set carry flag
020A:AAD1  9F					lahf				; Load ah from flags
020A:AAD2  EB 02				jmp	short loc_1750		; (AAD6)
020A:AAD4			loc_1749:
020A:AAD4  F8					clc				; Clear carry flag
020A:AAD5  9F					lahf				; Load ah from flags
020A:AAD6			loc_1750:
020A:AAD6  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:AADB  9C					pushf				; Push flags
020A:AADC  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:AAE1  5A					pop	dx
020A:AAE2  8E C2				mov	es,dx
020A:AAE4  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:AAE9  5A					pop	dx
020A:AAEA  75 0A				jnz	loc_1751		; Jump if not zero
020A:AAEC  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:AAF1  74 03				je	loc_1751		; Jump if equal
020A:AAF3  E8 CA06				call	sub_85			; (74FC)
020A:AAF6			loc_1751:
020A:AAF6  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:AAFB  9D					popf				; Pop flags
020A:AAFC  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:AB01  5F					pop	di
020A:AB02  5B					pop	bx
020A:AB03  9E					sahf				; Store ah into flags
020A:AB04  C3					retn
				sub_104		endp

020A:AB05  87 DB				xchg	bx,bx
020A:AB07  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 358

				sub_105		proc	near
020A:AB08  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:AB0D  06					push	es
020A:AB0E  C7 06 2CC6 0000			mov	word ptr ds:[2CC6h],0	; (ss:2CC6=545h)
020A:AB14  C7 06 2CC8 0000			mov	word ptr ds:[2CC8h],0	; (ss:2CC8=0C422h)
020A:AB1A  80 3E 2C21 00			cmp	byte ptr ds:[2C21h],0	; (ss:2C21=0EBh)
020A:AB1F  74 3A				je	loc_1753		; Jump if equal
020A:AB21  B4 19				mov	ah,19h
020A:AB23  CD 21				int	21h			; DOS Services  ah=function 19h
										;  get default drive al  (0=a:)
020A:AB25  8A D0				mov	dl,al
020A:AB27  04 61				add	al,61h			; 'a'
020A:AB29  A2 2C61				mov	byte ptr ds:[2C61h],al	; (ss:2C61=0A8h)
020A:AB2C  C7 06 2C62 5C3A			mov	word ptr ds:[2C62h],5C3Ah	; (ss:2C62=7502h)
020A:AB32  B4 47				mov	ah,47h			; 'G'
020A:AB34  FE C2				inc	dl
020A:AB36  BE 2C64				mov	si,2C64h
020A:AB39  CD 21				int	21h			; DOS Services  ah=function 47h
										;  get present dir,drive dl,1=a:
										;   ds:si=ASCIIZ directory name
020A:AB3B  80 3E 2C22 3A			cmp	byte ptr ds:[2C22h],3Ah	; (ss:2C22=0D2h) ':'
020A:AB40  75 0E				jne	loc_1752		; Jump if not equal
020A:AB42  8A 16 2C21				mov	dl,byte ptr ds:[2C21h]	; (ss:2C21=0EBh)
020A:AB46  80 CA 60				or	dl,60h			; '`'
020A:AB49  80 EA 61				sub	dl,61h			; 'a'
020A:AB4C  B4 0E				mov	ah,0Eh
020A:AB4E  CD 21				int	21h			; DOS Services  ah=function 0Eh
										;  set default drive dl  (0=a:)
020A:AB50			loc_1752:
020A:AB50  B4 3B				mov	ah,3Bh			; ';'
020A:AB52  BA 2C21				mov	dx,2C21h
020A:AB55  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:AB57  73 02				jnc	loc_1753		; Jump if carry=0
020A:AB59  EB 21				jmp	short loc_1755		; (AB7C)
020A:AB5B			loc_1753:
020A:AB5B  B4 29				mov	ah,29h			; ')'
020A:AB5D  B0 01				mov	al,1
020A:AB5F  BE 2C13				mov	si,2C13h
020A:AB62  E8 C638				call	sub_78			; (719D)
020A:AB65  BF 2CA1				mov	di,2CA1h
020A:AB68  CD 21				int	21h			; DOS Services  ah=function 29h
										;  parse filenam @ds:si FCBes:di
										;   al=parsing control flags
020A:AB6A  3C 00				cmp	al,0
020A:AB6C  74 02				je	loc_1754		; Jump if equal
020A:AB6E  EB 0C				jmp	short loc_1755		; (AB7C)
020A:AB70			loc_1754:
020A:AB70  B4 23				mov	ah,23h			; '#'
020A:AB72  8B D7				mov	dx,di
020A:AB74  C7 06 2CAF 0001			mov	word ptr ds:[2CAFh],1	; (ss:2CAF=4AE9h)
020A:AB7A  CD 21				int	21h			; DOS Services  ah=function 23h
										;  get file size, FCB @ ds:dx
020A:AB7C			loc_1755:
020A:AB7C  80 3E 2C21 00			cmp	byte ptr ds:[2C21h],0	; (ss:2C21=0EBh)
020A:AB81  74 07				je	loc_1756		; Jump if equal
020A:AB83  B4 3B				mov	ah,3Bh			; ';'
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 359

020A:AB85  BA 2C61				mov	dx,2C61h
020A:AB88  CD 21				int	21h			; DOS Services  ah=function 3Bh
										;  set current dir, path @ ds:dx
020A:AB8A			loc_1756:
020A:AB8A  A1 2CC4				mov	ax,word ptr ds:[2CC4h]	; (ss:2CC4=8A28h)
020A:AB8D  A3 2CC8				mov	word ptr ds:[2CC8h],ax	; (ss:2CC8=0C422h)
020A:AB90  A1 2CC2				mov	ax,word ptr ds:[2CC2h]	; (ss:2CC2=730Dh)
020A:AB93  A3 2CC6				mov	word ptr ds:[2CC6h],ax	; (ss:2CC6=545h)
020A:AB96  B4 3D				mov	ah,3Dh			; '='
020A:AB98  B0 00				mov	al,0
020A:AB9A  BA 31F0				mov	dx,31F0h
020A:AB9D  CD 21				int	21h			; DOS Services  ah=function 3Dh
										;  open file, al=mode,name@ds:dx
020A:AB9F  73 05				jnc	loc_1757		; Jump if carry=0
020A:ABA1  B3			data_668	db	0B3h
020A:ABA2  01 E9				add	cx,bp
020A:ABA4  5E					pop	si
020A:ABA5  02 A3 4152				add	ah,[bp+di+4152h]
020A:ABA9  80			data_670	db	80h
020A:ABAA  3E					db	3Eh
020A:ABAB  E6 2B				out	2Bh,al			; port 2Bh ??I/O Non-standard
020A:ABAD  02 74 34				add	dh,[si+34h]
020A:ABB0  B9 2C43				mov	cx,2C43h
020A:ABB3  81 E9 0BC3				sub	cx,0BC3h
020A:ABB7  BA 0BC3				mov	dx,0BC3h
020A:ABBA  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (ss:4152=0A106h)
020A:ABBE  E8 C5C7				call	sub_75			; (7188)
020A:ABC1  B4 3F				mov	ah,3Fh
020A:ABC3  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020A:ABC5  E8 C5BD				call	sub_74			; (7185)
020A:ABC8  73 03				jnc	loc_1758		; Jump if carry=0
020A:ABCA  E9 0235				jmp	loc_1785		; (AE02)
020A:ABCD			loc_1758:
020A:ABCD  E8 C5D0				call	sub_79			; (71A0)
020A:ABD0  BE 0BC3				mov	si,0BC3h
020A:ABD3  26: 81 3C 5A4D			cmp	word ptr es:[si],5A4Dh
020A:ABD8  75 07				jne	loc_1759		; Jump if not equal
020A:ABDA  80 3E 2BE6 01			cmp	byte ptr ds:[2BE6h],1	; (ss:2BE6=0B4h)
020A:ABDF  75 13				jne	loc_1760		; Jump if not equal
020A:ABE1			loc_1759:
020A:ABE1  E9 0220				jmp	loc_1786		; (AE04)
							                        ;* No entry point to code
020A:ABE4  E8 C5B9				call	sub_79			; (71A0)
020A:ABE7  BE 0BC3				mov	si,0BC3h
020A:ABEA  8B 0E 2C0F				mov	cx,word ptr ds:[2C0Fh]	; (ss:2C0F=0E4EBh)
020A:ABEE  8B 16 2C11				mov	dx,word ptr ds:[2C11h]	; (ss:2C11=2A8h)
020A:ABF2  EB 21				jmp	short loc_1762		; (AC15)
020A:ABF4			loc_1760:
020A:ABF4  26: 8B 4C 3E				mov	cx,es:[si+3Eh]
020A:ABF8  89 0E 2C0F				mov	word ptr ds:[2C0Fh],cx	; (ss:2C0F=0E4EBh)
020A:ABFC  3B 0E 2CC8				cmp	cx,word ptr ds:[2CC8h]	; (ss:2CC8=0C422h)
020A:AC00  77 10				ja	loc_1761		; Jump if above
020A:AC02  26: 8B 54 3C				mov	dx,es:[si+3Ch]
020A:AC06  89 16 2C11				mov	word ptr ds:[2C11h],dx	; (ss:2C11=2A8h)
020A:AC0A  0B D2				or	dx,dx			; Zero ?
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 360

020A:AC0C  75 07				jnz	loc_1762		; Jump if not zero
020A:AC0E  0B C9				or	cx,cx			; Zero ?
020A:AC10  75 03				jnz	loc_1762		; Jump if not zero
020A:AC12			loc_1761:
020A:AC12  E9 012C				jmp	loc_1774		; (AD41)
020A:AC15			loc_1762:
020A:AC15  B8 4200				mov	ax,4200h
020A:AC18  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (ss:4152=0A106h)
020A:AC1C  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020A:AC1E  B9 2C43				mov	cx,2C43h
020A:AC21  81 E9 0BC3				sub	cx,0BC3h
020A:AC25  BA 0BC3				mov	dx,0BC3h
020A:AC28  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (ss:4152=0A106h)
020A:AC2C  E8 C559				call	sub_75			; (7188)
020A:AC2F  B4 3F				mov	ah,3Fh
020A:AC31  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020A:AC33  E8 C54F				call	sub_74			; (7185)
020A:AC36  26: 8B 04				mov	ax,es:[si]
020A:AC39  3D 454C				cmp	ax,454Ch
020A:AC3C  75 09				jne	loc_1763		; Jump if not equal
020A:AC3E  80 3E 2BE6 02			cmp	byte ptr ds:[2BE6h],2	; (ss:2BE6=0B4h)
020A:AC43  74 3E				je	loc_1771		; Jump if equal
020A:AC45  EB 1C				jmp	short loc_1767		; (AC63)
020A:AC47			loc_1763:
020A:AC47  3D 454E				cmp	ax,454Eh
020A:AC4A  74 05				je	loc_1764		; Jump if equal
020A:AC4C  3D 3357				cmp	ax,3357h
020A:AC4F  75 04				jne	loc_1765		; Jump if not equal
020A:AC51			loc_1764:
020A:AC51  B4 41				mov	ah,41h			; 'A'
020A:AC53  EB 10				jmp	short loc_1768		; (AC65)
020A:AC55			loc_1765:
020A:AC55  3D 3350				cmp	ax,3350h
020A:AC58  74 05				je	loc_1766		; Jump if equal
020A:AC5A  3D 584C				cmp	ax,584Ch
020A:AC5D  75 14				jne	loc_1769		; Jump if not equal
020A:AC5F			loc_1766:
020A:AC5F  B4 43				mov	ah,43h			; 'C'
020A:AC61  EB 02				jmp	short loc_1768		; (AC65)
020A:AC63			loc_1767:
020A:AC63  B4 3E				mov	ah,3Eh			; '>'
020A:AC65			loc_1768:
020A:AC65  B0 04				mov	al,4
020A:AC67  9A 1510:57A4		;*		call	far ptr sub_168		;*(1510:57A4)
020A:AC67  9A					db	9Ah
020A:AC68  57A4 1510				dw	57A4h, 1510h
020A:AC6C  26: 81 3C 454C			cmp	word ptr es:[si],454Ch
020A:AC71  74 03				je	loc_1770		; Jump if equal
020A:AC73			loc_1769:
020A:AC73  E9 00A6				jmp	loc_1773		; (AD1C)
020A:AC76			loc_1770:
020A:AC76  2C 31				sub	al,31h			; '1'
020A:AC78  3C 01				cmp	al,1
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 361

020A:AC7A  77 E7				ja	loc_1767		; Jump if above
020A:AC7C  3C 00				cmp	al,0
020A:AC7E  75 03				jne	loc_1771		; Jump if not equal
020A:AC80  E9 0099				jmp	loc_1773		; (AD1C)
020A:AC83			loc_1771:
020A:AC83  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:AC88  06					push	es
020A:AC89  E8 C50E				call	sub_77			; (719A)
020A:AC8C  26: C6 06 0001 E8			mov	byte ptr es:data_1+1,0E8h	; (020A:0001=18h)
020A:AC92  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:AC97  9C					pushf				; Push flags
020A:AC98  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:AC9D  5A					pop	dx
020A:AC9E  8E C2				mov	es,dx
020A:ACA0  2E			data_671	db	2Eh			; Data table (indexed access)
020A:ACA1  3B 16 38A1				cmp	dx,word ptr ds:[38A1h]	; (ss:38A1=0)
020A:ACA5  5A					pop	dx
020A:ACA6  75 0A				jnz	loc_1772		; Jump if not zero
020A:ACA8  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:ACAD  74 03				je	loc_1772		; Jump if equal
020A:ACAF  E8 C84A				call	sub_85			; (74FC)
020A:ACB2			loc_1772:
020A:ACB2  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:ACB7  9D					popf				; Pop flags
020A:ACB8  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:ACBD  C6 06 327F 08			mov	byte ptr ds:[327Fh],8	; (ss:327F=29h)
020A:ACC2  26: 8B 4C 44				mov	cx,es:[si+44h]
020A:ACC6  83 F9 00				cmp	cx,0
020A:ACC9  74 51				je	loc_1773		; Jump if equal
020A:ACCB  26: 8B 44 14				mov	ax,es:[si+14h]
020A:ACCF  3D 0000				cmp	ax,0
020A:ACD2  74 48				je	loc_1773		; Jump if equal
020A:ACD4  48					dec	ax
020A:ACD5  26: F7 64 28				mul	word ptr es:[si+28h]	; ax = data * ax
020A:ACD9  92					xchg	dx,ax
020A:ACDA  26: 03 54 2C				add	dx,es:[si+2Ch]
020A:ACDE  26: 13 44 2E				adc	ax,es:[si+2Eh]
020A:ACE2  26: 03		data_673	db	3			; Data table (indexed access)
020A:ACE4  94					xchg	sp,ax
020A:ACE5  8C 00				mov	[bx+si],es
020A:ACE7  26: 13 84 008E			adc	ax,word ptr es:[8Eh][si]	; (020A:008E=8155h)
020A:ACEC  A3 2CC8				mov	word ptr ds:[2CC8h],ax	; (ss:2CC8=0C422h)
020A:ACEF  A3 2BEB				mov	word ptr ds:[2BEBh],ax	; (ss:2BEB=15D0h)
020A:ACF2  89 16 2CC6				mov	word ptr ds:[2CC6h],dx	; (ss:2CC6=545h)
020A:ACF6  89 16 2BED				mov	word ptr ds:[2BEDh],dx	; (ss:2BED=7701h)
020A:ACFA  26: 8B 84 0080			mov	ax,word ptr es:[80h][si]	; (020A:0080=1850h)
020A:ACFF  A3 2BE9				mov	word ptr ds:[2BE9h],ax	; (ss:2BE9=3E80h)
020A:AD02  26: 8B 84 0082			mov	ax,word ptr es:[82h][si]	; (020A:0082=10h)
020A:AD07  A3 2BE7				mov	word ptr ds:[2BE7h],ax	; (ss:2BE7=2603h)
020A:AD0A  C6 06 327E 03			mov	byte ptr ds:[327Eh],3	; (ss:327E=0B0h)
020A:AD0F  9A 1510:2B70		;*		call	far ptr sub_142		;*(1510:2B70)
020A:AD0F  9A					db	9Ah
020A:AD10  2B70 1510				dw	2B70h, 1510h
020A:AD14  C6 06 2BE6 02			mov	byte ptr ds:[2BE6h],2	; (ss:2BE6=0B4h)
020A:AD19  E9 00E8				jmp	loc_1786		; (AE04)
020A:AD1C			loc_1773:
020A:AD1C  B8 4200				mov	ax,4200h
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 362

020A:AD1F  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (ss:4152=0A106h)
020A:AD23  33 C9				xor	cx,cx			; Zero register
020A:AD25  33 D2				xor	dx,dx			; Zero register
020A:AD27  CD 21				int	21h			; DOS Services  ah=function 42h
										;  move file ptr, bx=file handle
										;   al=method, cx,dx=offset
020A:AD29  B9 2C43				mov	cx,2C43h
020A:AD2C  81 E9 0BC3				sub	cx,0BC3h
020A:AD30  BA 0BC3				mov	dx,0BC3h
020A:AD33  8B 1E 4152				mov	bx,word ptr ds:[4152h]	; (ss:4152=0A106h)
020A:AD37  E8 C44E				call	sub_75			; (7188)
020A:AD3A  B4 3F				mov	ah,3Fh
020A:AD3C  CD 21				int	21h			; DOS Services  ah=function 3Fh
										;  read file, bx=file handle
										;   cx=bytes to ds:dx buffer
020A:AD3E  E8 C444				call	sub_74			; (7185)
020A:AD41			loc_1774:
020A:AD41  26: 8B 44 04				mov	ax,es:[si+4]
020A:AD45  33 D2				xor	dx,dx			; Zero register
020A:AD47  B9 0009				mov	cx,9

020A:AD4A			locloop_1775:
020A:AD4A  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:AD4C  D1 D2				rcl	dx,1			; Rotate thru carry
020A:AD4E  E2 FA				loop	locloop_1775		; Loop if cx > 0

020A:AD50  26: 8B 4C 02				mov	cx,es:[si+2]
020A:AD54  83 F9 00				cmp	cx,0
020A:AD57  74 0C				je	loc_1776		; Jump if equal
020A:AD59  B9 0200				mov	cx,200h
020A:AD5C  26: 2B 4C 02				sub	cx,es:[si+2]
020A:AD60  2B C1				sub	ax,cx
020A:AD62  83 DA 00				sbb	dx,0
020A:AD65			loc_1776:
020A:AD65  50					push	ax
020A:AD66  52					push	dx
020A:AD67  26: 8B 44 08				mov	ax,es:[si+8]
020A:AD6B  B9 0004				mov	cx,4
020A:AD6E  33 D2				xor	dx,dx			; Zero register

020A:AD70			locloop_1777:
020A:AD70  D1 E0				shl	ax,1			; Shift w/zeros fill
020A:AD72  D1 D2				rcl	dx,1			; Rotate thru carry
020A:AD74  E2 FA				loop	locloop_1777		; Loop if cx > 0

020A:AD76  29 06 2CC6				sub	word ptr ds:[2CC6h],ax	; (ss:2CC6=545h)
020A:AD7A  19 16 2CC8				sbb	word ptr ds:[2CC8h],dx	; (ss:2CC8=0C422h)
020A:AD7E  5A					pop	dx
020A:AD7F  58					pop	ax
020A:AD80  3B 16 2CC8				cmp	dx,word ptr ds:[2CC8h]	; (ss:2CC8=0C422h)
020A:AD84  74 0B				je	loc_1778		; Jump if equal
020A:AD86  77 16				ja	loc_1779		; Jump if above
020A:AD88  A3 2CC6				mov	word ptr ds:[2CC6h],ax	; (ss:2CC6=545h)
020A:AD8B  89 16 2CC8				mov	word ptr ds:[2CC8h],dx	; (ss:2CC8=0C422h)
020A:AD8F  EB 0D				jmp	short loc_1779		; (AD9E)
020A:AD91			loc_1778:
020A:AD91  3B 06 2CC6				cmp	ax,word ptr ds:[2CC6h]	; (ss:2CC6=545h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 363

020A:AD95  73 07				jae	loc_1779		; Jump if above or =
020A:AD97  A3 2CC6				mov	word ptr ds:[2CC6h],ax	; (ss:2CC6=545h)
020A:AD9A  89 16 2CC8				mov	word ptr ds:[2CC8h],dx	; (ss:2CC8=0C422h)
020A:AD9E			loc_1779:
020A:AD9E  26: 8B 44 0E				mov	ax,es:[si+0Eh]
020A:ADA2  26: 8B 5C 10				mov	bx,es:[si+10h]
020A:ADA6  3D FFF0				cmp	ax,0FFF0h
020A:ADA9  75 04				jne	loc_1780		; Jump if not equal
020A:ADAB  33 C0				xor	ax,ax			; Zero register
020A:ADAD  33 DB				xor	bx,bx			; Zero register
020A:ADAF			loc_1780:
020A:ADAF  9A 1510:6B84		;*		call	far ptr sub_171		;*(1510:6B84)
020A:ADAF  9A					db	9Ah
020A:ADB0  6B84 1510				dw	6B84h, 1510h
020A:ADB4  3B 06 2CC8				cmp	ax,word ptr ds:[2CC8h]	; (ss:2CC8=0C422h)
020A:ADB8  72 37				jb	loc_1784		; Jump if below
020A:ADBA  77 06				ja	loc_1781		; Jump if above
020A:ADBC  3B 1E 2CC6				cmp	bx,word ptr ds:[2CC6h]	; (ss:2CC6=545h)
020A:ADC0  76 2F				jbe	loc_1784		; Jump if below or =
020A:ADC2			loc_1781:
020A:ADC2  8B 0E 2CC8				mov	cx,word ptr ds:[2CC8h]	; (ss:2CC8=0C422h)
020A:ADC6  41					inc	cx
020A:ADC7  3B C1				cmp	ax,cx
020A:ADC9  72 1F				jb	loc_1783		; Jump if below
020A:ADCB  77 06				ja	loc_1782		; Jump if above
020A:ADCD  3B 1E 2CC6				cmp	bx,word ptr ds:[2CC6h]	; (ss:2CC6=545h)
020A:ADD1  76 17				jbe	loc_1783		; Jump if below or =
020A:ADD3			loc_1782:
020A:ADD3  B4 40				mov	ah,40h			; '@'
020A:ADD5  B0 04				mov	al,4
020A:ADD7  9A 1510:57A4		;*		call	far ptr sub_168		;*(1510:57A4)
020A:ADD7  9A					db	9Ah
020A:ADD8  57A4 1510				dw	57A4h, 1510h
020A:ADDC  26: C7 44 0E 0000			mov	word ptr es:[si+0Eh],0
020A:ADE2  26: C7 44 10 0000			mov	word ptr es:[si+10h],0
020A:ADE8  EB 07				jmp	short loc_1784		; (ADF1)
020A:ADEA			loc_1783:
020A:ADEA  A3 2CC8				mov	word ptr ds:[2CC8h],ax	; (ss:2CC8=0C422h)
020A:ADED  89 1E 2CC6				mov	word ptr ds:[2CC6h],bx	; (ss:2CC6=545h)
020A:ADF1			loc_1784:
020A:ADF1  C6 06 327E 03			mov	byte ptr ds:[327Eh],3	; (ss:327E=0B0h)
020A:ADF6  C6 06 327F 03			mov	byte ptr ds:[327Fh],3	; (ss:327F=29h)
020A:ADFB  9A 1510:2B70		;*		call	far ptr sub_142		;*(1510:2B70)
020A:ADFB  9A					db	9Ah
020A:ADFC  2B70 1510				dw	2B70h, 1510h
020A:AE00  EB 02				jmp	short loc_1786		; (AE04)
020A:AE02			loc_1785:
020A:AE02  B3 0E				mov	bl,0Eh
020A:AE04			loc_1786:
020A:AE04  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:AE09  9C					pushf				; Push flags
020A:AE0A  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:AE0F  5A					pop	dx
020A:AE10  8E C2				mov	es,dx
020A:AE12  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:AE17  5A					pop	dx
020A:AE18  75 0A				jnz	loc_1787		; Jump if not zero
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 364

020A:AE1A  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:AE1F  74 03				je	loc_1787		; Jump if equal
020A:AE21  E8 C6D8				call	sub_85			; (74FC)
020A:AE24			loc_1787:
020A:AE24  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:AE29  9D					popf				; Pop flags
020A:AE2A  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:AE2F  C3					retn
				sub_105		endp

							                        ;* No entry point to code
020A:AE30  50					push	ax
020A:AE31  53					push	bx
020A:AE32  57					push	di
020A:AE33  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:AE38  06					push	es
020A:AE39  1E					push	ds
020A:AE3A  BF 0008				mov	di,8
020A:AE3D  8B 1E 344A				mov	bx,data_348		; (020A:344A=414Ch)
020A:AE41  E8 C7D4				call	sub_88			; (7618)
020A:AE44  E8 C33E				call	sub_74			; (7185)
020A:AE47			loc_1788:
020A:AE47  26: 3B 3E 0000			cmp	di,word ptr es:[0]	; (020A:0000=1828h)
020A:AE4C  72 02				jb	loc_1789		; Jump if below
020A:AE4E  EB 1E				jmp	short loc_1791		; (AE6E)
020A:AE50			loc_1789:
020A:AE50  26: 80 65 04 FE			and	byte ptr es:[di+4],0FEh
020A:AE55  EB 00				jmp	short $+2		; delay for I/O
020A:AE57  BB 40C2				mov	bx,40C2h
020A:AE5A  26: 8A 45 05				mov	al,es:[di+5]
020A:AE5E  25 000F				and	ax,0Fh
020A:AE61  D7					xlat				; al=[al+[bx]] table
020A:AE62  0A C0				or	al,al			; Zero ?
020A:AE64  75 04				jnz	loc_1790		; Jump if not zero
020A:AE66  26: 8A 45 06				mov	al,es:[di+6]
020A:AE6A			loc_1790:
020A:AE6A  03 F8				add	di,ax
020A:AE6C  EB D9				jmp	short loc_1788		; (AE47)
020A:AE6E			loc_1791:
020A:AE6E  1F					pop	ds
020A:AE6F  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:AE74  9C					pushf				; Push flags
020A:AE75  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:AE7A  5A					pop	dx
020A:AE7B  8E C2				mov	es,dx
020A:AE7D  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:AE82  5A					pop	dx
020A:AE83  75 0A				jnz	loc_1792		; Jump if not zero
020A:AE85  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:AE8A  74 03				je	loc_1792		; Jump if equal
020A:AE8C  E8 C66D				call	sub_85			; (74FC)
020A:AE8F			loc_1792:
020A:AE8F  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:AE94  9D					popf				; Pop flags
020A:AE95  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:AE9A  5F					pop	di
020A:AE9B  5B					pop	bx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 365

020A:AE9C  58					pop	ax
020A:AE9D  C3					retn
020A:AE9E  87 DB				xchg	bx,bx
020A:AEA0  26: 8A		data_678	db	8Ah
020A:AEA2  45					inc	bp
020A:AEA3  12 F6				adc	dh,dh
020A:AEA5  06					push	es
020A:AEA6  A0 E030				mov	al,byte ptr ds:[0E030h]	; (020A:E030=0BEh)
020A:AEA9  75 02				jnz	loc_1793		; Jump if not zero
020A:AEAB  010C			data_679	dw	10Ch			; Data table (indexed access)
020A:AEAD			loc_1793:
020A:AEAD  F6			data_680	db	0F6h
020A:AEAE  D0 22				shl	byte ptr [bp+si],1	; Shift w/zeros fill
020A:AEB0  06					push	es
020A:AEB1  F0> 35 0375		                           lock	xor	ax,375h
020A:AEB5  E9 00E5				jmp	loc_1804		; (AF9D)
							                        ;* No entry point to code
020A:AEB8  3C 40				cmp	al,40h			; '@'
020A:AEBA  75 07				jne	loc_1794		; Jump if not equal
020A:AEBC  F6 06 30B0 07			test	data_317,7		; (020A:30B0=44h)
020A:AEC1  75 03				jnz	loc_1795		; Jump if not zero
020A:AEC3			loc_1794:
020A:AEC3  E9 0087				jmp	loc_1802		; (AF4D)
020A:AEC6			loc_1795:
020A:AEC6  80 26 35F0 BF			and	byte ptr ds:[35F0h],0BFh	; (020A:35F0=74h)
020A:AECB  F6 06 35F0 7F			test	byte ptr ds:[35F0h],7Fh	; (020A:35F0=74h)
020A:AED0  74 06				jz	loc_1796		; Jump if zero
020A:AED2  FF 06 35F1				inc	word ptr ds:[35F1h]	; (020A:35F1=8007h)
020A:AED6  EB 06				jmp	short loc_1797		; (AEDE)
020A:AED8			loc_1796:
020A:AED8  C7 06 35F1 FFFF			mov	word ptr ds:[35F1h],0FFFFh	; (020A:35F1=8007h)
020A:AEDE			loc_1797:
020A:AEDE  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:AEE3  74 03				je	loc_1798		; Jump if equal
020A:AEE5  E9 00B5				jmp	loc_1804		; (AF9D)
020A:AEE8			loc_1798:
020A:AEE8  52					push	dx
020A:AEE9  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:AEEE  06					push	es
020A:AEEF  BA 2DD4				mov	dx,2DD4h
020A:AEF2  80 3E 14FA 02			cmp	data_155,2		; (020A:14FA=0)
020A:AEF7  75 21				jne	loc_1799		; Jump if not equal
020A:AEF9  80 3E 4E2C FE			cmp	data_507,0FEh		; (020A:4E2C=30h)
020A:AEFE  74 1A				je	loc_1799		; Jump if equal
020A:AF00  C7 06 2DF4 2A3B			mov	data_268,2A3Bh		; (020A:2DF4=4352h)
020A:AF06  9A 1510:233C		;*		call	far ptr sub_134		;*(1510:233C)
020A:AF06  9A					db	9Ah
020A:AF07  233C 1510				dw	233Ch, 1510h
020A:AF0B  C7 06 2DF4 2020			mov	data_268,2020h		; (020A:2DF4=4352h)
020A:AF11  B0 57				mov	al,57h			; 'W'
020A:AF13  9A 1510:2280		;*		call	far ptr sub_133		;*(1510:2280)
020A:AF13  9A					db	9Ah
020A:AF14  2280 1510				dw	2280h, 1510h
020A:AF18  EB 05				jmp	short loc_1800		; (AF1F)
020A:AF1A			loc_1799:
020A:AF1A  9A 1510:233C		;*		call	far ptr sub_134		;*(1510:233C)
020A:AF1A  9A					db	9Ah
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 366

020A:AF1B  233C 1510				dw	233Ch, 1510h
020A:AF1F			loc_1800:
020A:AF1F  2E: 89		data_682	db	89h
020A:AF21  16					push	ss
020A:AF22  92					xchg	dx,ax
020A:AF23  00 9C 8F2E				add	data_621[si],bl		; (020A:8F2E=45h)
020A:AF27  06					push	es
020A:AF28  96					xchg	si,ax
020A:AF29  00 5A 8E				add	[bp+si-72h],bl
020A:AF2C  C2 3B2E				retn	3B2Eh
							                        ;* No entry point to code
020A:AF2F  16					push	ss
020A:AF30  A1 5A38				mov	ax,word ptr ds:[5A38h]	; (020A:5A38=2B34h)
020A:AF33  75 0A				jnz	loc_1801		; Jump if not zero
020A:AF35  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:AF3A  74 03				je	loc_1801		; Jump if equal
020A:AF3C  E8 C5BD				call	sub_85			; (74FC)
020A:AF3F			loc_1801:
020A:AF3F  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:AF44  9D					popf				; Pop flags
020A:AF45  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:AF4A  5A					pop	dx
020A:AF4B  EB 50				jmp	short loc_1804		; (AF9D)
020A:AF4D			loc_1802:
020A:AF4D  F7 06 35E9 0080			test	data_402,80h		; (020A:35E9=6E14h)
020A:AF53  75 48				jnz	loc_1804		; Jump if not zero
020A:AF55  A1 35F1				mov	ax,word ptr ds:[35F1h]	; (020A:35F1=8007h)
020A:AF58  A3 344C				mov	data_349,ax		; (020A:344C=5453h)
020A:AF5B  C6 06 35F0 00			mov	byte ptr ds:[35F0h],0	; (020A:35F0=74h)
020A:AF60  C6 06 4E2C FE			mov	data_507,0FEh		; (020A:4E2C=30h)
020A:AF65  C6 06 3628 00			mov	byte ptr ds:[3628h],0	; (020A:3628=47h)
020A:AF6A  C7 06 35F1 FFFF			mov	word ptr ds:[35F1h],0FFFFh	; (020A:35F1=8007h)
020A:AF70  C7 06 3027 0000			mov	data_270,0		; (020A:3027=0)
020A:AF76  80 0E 3459 05			or	data_356,5		; (020A:3459=0ABh)
020A:AF7B  C6 06 5709 05			mov	data_579,5		; (020A:5709=3)
020A:AF80  C6 06 30B3 00			mov	byte ptr data_319,0	; (020A:30B3='A=C:\DOCU')
020A:AF85  E8 AEC8				call	sub_61			; (5E50)
020A:AF88  80 3E 2B3C 01			cmp	byte ptr ds:[2B3Ch],1	; (414C:2B3C=0FFh)
020A:AF8D  75 0B				jne	loc_1803		; Jump if not equal
020A:AF8F  A1 344C				mov	ax,word ptr ds:[344Ch]	; (414C:344C=0FFFFh)
020A:AF92  BD 2D20				mov	bp,2D20h
020A:AF95  9A 1510:021C		;*		call	far ptr sub_116		;*(1510:021C)
020A:AF95  9A					db	9Ah
020A:AF96  021C 1510				dw	21Ch, 1510h
020A:AF9A			loc_1803:
020A:AF9A  F9					stc				; Set carry flag
020A:AF9B  EB 01				jmp	short loc_1805		; (AF9E)
020A:AF9D			loc_1804:
020A:AF9D  F8					clc				; Clear carry flag
020A:AF9E			loc_1805:
020A:AF9E  C3					retn
020A:AF9F  90					nop
020A:AFA0  C7			data_683	db	0C7h			; Data table (indexed access)
020A:AFA1  06					push	es
020A:AFA2  F1					db	0F1h
020A:AFA3  35 FFFF				xor	ax,0FFFFh
020A:AFA6  C6 06 35F0 00			mov	byte ptr ds:[35F0h],0	; (020A:35F0=74h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 367

020A:AFAB  C6 06 3628 00			mov	byte ptr ds:[3628h],0	; (020A:3628=47h)
020A:AFB0  2E: C6 06 F26A 90			mov	byte ptr cs:[0F26Ah],90h	; (020A:F26A=0F8h)
020A:AFB6  2E: C6 06 F26B 90			mov	byte ptr cs:[0F26Bh],90h	; (020A:F26B=0F6h)
020A:AFBC  2E: C6 06 F26C 90			mov	byte ptr cs:[0F26Ch],90h	; (020A:F26C=6)
020A:AFC2  2E: C6 06 F26D 90			mov	byte ptr cs:[0F26Dh],90h	; (020A:F26D=0F0h)
020A:AFC8  C6 06 4D48 20			mov	byte ptr ds:[4D48h],20h	; (020A:4D48=0E8h) ' '
020A:AFCD  80 26 35EE CF			and	data_405,0CFh		; (020A:35EE=2Bh)
020A:AFD2  80 26 35EE FC			and	data_405,0FCh		; (020A:35EE=2Bh)
020A:AFD7  F6 06 35EE 04			test	data_405,4		; (020A:35EE=2Bh)
020A:AFDC  74 05				jz	loc_1806		; Jump if zero
020A:AFDE  80 0E 35EE 03			or	data_405,3		; (020A:35EE=2Bh)
020A:AFE3			loc_1806:
020A:AFE3  C3					retn
							                        ;* No entry point to code
020A:AFE4  50					push	ax
020A:AFE5  53					push	bx
020A:AFE6  51					push	cx
020A:AFE7  52					push	dx
020A:AFE8  56					push	si
020A:AFE9  57					push	di
020A:AFEA  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:AFEF  06					push	es
020A:AFF0  F6 06 35F0 06			test	byte ptr ds:[35F0h],6	; (020A:35F0=74h)
020A:AFF5  75 02				jnz	loc_1807		; Jump if not zero
020A:AFF7  EB 5B				jmp	short loc_1811		; (B054)
020A:AFF9			loc_1807:
020A:AFF9  FC					cld				; Clear direction
020A:AFFA  A0 309E				mov	al,data_313		; (020A:309E=55h)
020A:AFFD  A2 309F				mov	data_314,al		; (020A:309F=4Dh)
020A:B000  C6 06 309E 34			mov	data_313,34h		; (020A:309E=55h) '4'
020A:B005  E8 C195				call	sub_78			; (719D)
020A:B008  BE 2D5B				mov	si,2D5Bh
020A:B00B  BF 2D63				mov	di,2D63h
020A:B00E  B9 0007				mov	cx,7
020A:B011  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:B013  BD 2D5B				mov	bp,2D5Bh
020A:B016  BE 37F5				mov	si,37F5h
020A:B019  9A 1510:4160		;*		call	far ptr sub_157		;*(1510:4160)
020A:B019  9A					db	9Ah
020A:B01A  4160 1510				dw	4160h, 1510h
020A:B01E  BD 2D5E				mov	bp,2D5Eh
020A:B021  F6 06 35F0 04			test	byte ptr ds:[35F0h],4	; (020A:35F0=74h)
020A:B026  75 0E				jnz	loc_1808		; Jump if not zero
020A:B028  8A C2				mov	al,dl
020A:B02A  0C 01				or	al,1
020A:B02C  3C 71				cmp	al,71h			; 'q'
020A:B02E  74 15				je	loc_1809		; Jump if equal
020A:B030  3C 7B				cmp	al,7Bh			; '{'
020A:B032  74 11				je	loc_1809		; Jump if equal
020A:B034  EB 1E				jmp	short loc_1811		; (B054)
020A:B036			loc_1808:
020A:B036  C6 06 309E 35			mov	data_313,35h		; (020A:309E=55h) '5'
020A:B03B  A0 3BA8				mov	al,data_444		; (020A:3BA8=0E8h)
020A:B03E  3E: 88 46 00				mov	ds:[bp],al
020A:B042  45					inc	bp
020A:B043  EB 05				jmp	short loc_1810		; (B04A)
020A:B045			loc_1809:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 368

020A:B045  C6 06 309E 69			mov	data_313,69h		; (020A:309E=55h) 'i'
020A:B04A			loc_1810:
020A:B04A  A0 3B9F				mov	al,byte ptr ds:[3B9Fh]	; (020A:3B9F=10h)
020A:B04D  3E: 88 46 00				mov	ds:[bp],al
020A:B051  45					inc	bp
020A:B052  EB 00				jmp	short loc_1811		; (B054)
020A:B054			loc_1811:
020A:B054  80 FA 6F				cmp	dl,6Fh			; 'o'
020A:B057  75 03				jne	loc_1812		; Jump if not equal
020A:B059  E9 008B				jmp	loc_1821		; (B0E7)
020A:B05C			loc_1812:
020A:B05C  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (020A:35F0=74h)
020A:B061  75 50				jnz	loc_1817		; Jump if not zero
020A:B063  8A 1E 35EE				mov	bl,data_405		; (020A:35EE=2Bh)
020A:B067  80 E3 07				and	bl,7
020A:B06A  80 FB 00				cmp	bl,0
020A:B06D  74 65				je	loc_1820		; Jump if equal
020A:B06F  80 FB 06				cmp	bl,6
020A:B072  74 60				je	loc_1820		; Jump if equal
020A:B074  80 FB 07				cmp	bl,7
020A:B077  75 07				jne	loc_1813		; Jump if not equal
020A:B079  F6 C2 01				test	dl,1
020A:B07C  74 56				jz	loc_1820		; Jump if zero
020A:B07E  EB 15				jmp	short loc_1815		; (B095)
020A:B080			loc_1813:
020A:B080  F6 06 35EE 02			test	data_405,2		; (020A:35EE=2Bh)
020A:B085  74 07				jz	loc_1814		; Jump if zero
020A:B087  80 FB 07				cmp	bl,7
020A:B08A  74 09				je	loc_1815		; Jump if equal
020A:B08C  EB 25				jmp	short loc_1817		; (B0B3)
020A:B08E			loc_1814:
020A:B08E  80 FB 01				cmp	bl,1
020A:B091  74 02				je	loc_1815		; Jump if equal
020A:B093  EB 1E				jmp	short loc_1817		; (B0B3)
020A:B095			loc_1815:
020A:B095  BF 2D5B				mov	di,2D5Bh
020A:B098  F6 06 35F0 06			test	byte ptr ds:[35F0h],6	; (020A:35F0=74h)
020A:B09D  74 03				jz	loc_1816		; Jump if zero
020A:B09F  BF 2D63				mov	di,2D63h
020A:B0A2			loc_1816:
020A:B0A2  A0 3BB1				mov	al,byte ptr ds:[3BB1h]	; (020A:3BB1=0Fh)
020A:B0A5  B9 0007				mov	cx,7
020A:B0A8  FC					cld				; Clear direction
020A:B0A9  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:B0AB  4F					dec	di
020A:B0AC  A0 3B9E				mov	al,byte ptr ds:[3B9Eh]	; (020A:3B9E=9Ah)
020A:B0AF  88 05				mov	[di],al
020A:B0B1  EB 21				jmp	short loc_1820		; (B0D4)
020A:B0B3			loc_1817:
020A:B0B3  BF 2D5B				mov	di,2D5Bh
020A:B0B6  F6 06 35F0 06			test	byte ptr ds:[35F0h],6	; (020A:35F0=74h)
020A:B0BB  74 03				jz	loc_1818		; Jump if zero
020A:B0BD  BF 2D63				mov	di,2D63h
020A:B0C0			loc_1818:
020A:B0C0  A0 3BB1				mov	al,byte ptr ds:[3BB1h]	; (020A:3BB1=0Fh)
020A:B0C3  F6 C2 01				test	dl,1
020A:B0C6  75 03				jnz	loc_1819		; Jump if not zero
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 369

020A:B0C8  A0 3B9C				mov	al,data_441		; (020A:3B9C=0EBh)
020A:B0CB			loc_1819:
020A:B0CB  B9 0007				mov	cx,7
020A:B0CE  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:B0D0  4F					dec	di
020A:B0D1  C6 05 20				mov	byte ptr [di],20h	; ' '
020A:B0D4			loc_1820:
020A:B0D4  F6 06 35F0 06			test	byte ptr ds:[35F0h],6	; (020A:35F0=74h)
020A:B0D9  74 0C				jz	loc_1821		; Jump if zero
020A:B0DB  BF 2D63				mov	di,2D63h
020A:B0DE  B9 0007				mov	cx,7
020A:B0E1  B0 20				mov	al,20h			; ' '
020A:B0E3  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:B0E5  8B EF				mov	bp,di
020A:B0E7			loc_1821:
020A:B0E7  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B0EC  9C					pushf				; Push flags
020A:B0ED  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B0F2  5A					pop	dx
020A:B0F3  8E C2				mov	es,dx
020A:B0F5  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:B0FA  5A					pop	dx
020A:B0FB  75 0A				jnz	loc_1822		; Jump if not zero
020A:B0FD  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:B102  74 03				je	loc_1822		; Jump if equal
020A:B104  E8 C3F5				call	sub_85			; (74FC)
020A:B107			loc_1822:
020A:B107  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B10C  9D					popf				; Pop flags
020A:B10D  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B112  5F					pop	di
020A:B113  5E					pop	si
020A:B114  5A					pop	dx
020A:B115  59					pop	cx
020A:B116  5B					pop	bx
020A:B117  58					pop	ax
020A:B118  C3					retn
							                        ;* No entry point to code
020A:B119  87 DB				xchg	bx,bx
020A:B11B  90					nop
020A:B11C  52					push	dx
020A:B11D  51					push	cx
020A:B11E  57					push	di
020A:B11F  56					push	si
020A:B120  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:B125  06					push	es
020A:B126  BE 2D06				mov	si,2D06h
020A:B129  80 3C 00				cmp	byte ptr [si],0
020A:B12C  74 17				je	loc_1823		; Jump if equal
020A:B12E  BF 2D26				mov	di,2D26h
020A:B131  E8 B708				call	sub_67			; (683C)
020A:B134  B9 0015				mov	cx,15h
020A:B137  E8 C063				call	sub_78			; (719D)
020A:B13A  FC					cld				; Clear direction
020A:B13B  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:B13D  BA 2D1B				mov	dx,2D1Bh
020A:B140  9A 1510:233C		;*		call	far ptr sub_134		;*(1510:233C)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 370

020A:B140  9A					db	9Ah
020A:B141  233C 1510				dw	233Ch, 1510h
020A:B145			loc_1823:
020A:B145  C6 06 2D06 00			mov	byte ptr ds:[2D06h],0	; (020A:2D06=43h)
020A:B14A  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B14F  9C					pushf				; Push flags
020A:B150  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B155  5A					pop	dx
020A:B156  8E C2				mov	es,dx
020A:B158  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:B15D  5A					pop	dx
020A:B15E  75 0A				jnz	loc_1824		; Jump if not zero
020A:B160  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:B165  74 03				je	loc_1824		; Jump if equal
020A:B167  E8 C392				call	sub_85			; (74FC)
020A:B16A			loc_1824:
020A:B16A  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B16F  9D					popf				; Pop flags
020A:B170  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B175  5E					pop	si
020A:B176  5F					pop	di
020A:B177  59					pop	cx
020A:B178  5A					pop	dx
020A:B179  C3					retn
							                        ;* No entry point to code
020A:B17A  87 DB				xchg	bx,bx
020A:B17C  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:B181  75 4D				jne	loc_1826		; Jump if not equal
020A:B183  50					push	ax
020A:B184  51					push	cx
020A:B185  57					push	di
020A:B186  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:B18B  06					push	es
020A:B18C  E8 C00E				call	sub_78			; (719D)
020A:B18F  B9 0007				mov	cx,7
020A:B192  BF 2D5B				mov	di,2D5Bh
020A:B195  B0 20				mov	al,20h			; ' '
020A:B197  FC					cld				; Clear direction
020A:B198  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:B19A  4F					dec	di
020A:B19B  8A 0E 3B9E				mov	cl,byte ptr ds:[3B9Eh]	; (020A:3B9E=9Ah)
020A:B19F  26: 88 0D				mov	es:[di],cl
020A:B1A2  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B1A7  9C					pushf				; Push flags
020A:B1A8  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B1AD  5A					pop	dx
020A:B1AE  8E C2				mov	es,dx
020A:B1B0  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:B1B5  5A					pop	dx
020A:B1B6  75 0A				jnz	loc_1825		; Jump if not zero
020A:B1B8  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:B1BD  74 03				je	loc_1825		; Jump if equal
020A:B1BF  E8 C33A				call	sub_85			; (74FC)
020A:B1C2			loc_1825:
020A:B1C2  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B1C7  9D					popf				; Pop flags
020A:B1C8  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 371

020A:B1CD  5F					pop	di
020A:B1CE  59					pop	cx
020A:B1CF  58					pop	ax
020A:B1D0			loc_1826:
020A:B1D0  C3					retn
							                        ;* No entry point to code
020A:B1D1  87 DB				xchg	bx,bx
020A:B1D3  90					nop
020A:B1D4  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:B1D9  75 54				jne	loc_1828		; Jump if not equal
020A:B1DB  50					push	ax
020A:B1DC  51					push	cx
020A:B1DD  57					push	di
020A:B1DE  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:B1E3  06					push	es
020A:B1E4  E8 BFB6				call	sub_78			; (719D)
020A:B1E7  B9 0007				mov	cx,7
020A:B1EA  BF 2D5B				mov	di,2D5Bh
020A:B1ED  A0 3BAA				mov	al,data_445		; (020A:3BAA=1Fh)
020A:B1F0  FC					cld				; Clear direction
020A:B1F1  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:B1F3  26: 8B 05				mov	ax,es:[di]
020A:B1F6  8A 0E 3B9E				mov	cl,byte ptr ds:[3B9Eh]	; (020A:3B9E=9Ah)
020A:B1FA  26: 88 0D				mov	es:[di],cl
020A:B1FD  47					inc	di
020A:B1FE  26: 89 05				mov	es:[di],ax
020A:B201  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B206  9C					pushf				; Push flags
020A:B207  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B20C  5A					pop	dx
020A:B20D  8E C2				mov	es,dx
020A:B20F  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:B214  5A					pop	dx
020A:B215  75 0A				jnz	loc_1827		; Jump if not zero
020A:B217  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:B21C  74 03				je	loc_1827		; Jump if equal
020A:B21E  E8 C2DB				call	sub_85			; (74FC)
020A:B221			loc_1827:
020A:B221  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B226  9D					popf				; Pop flags
020A:B227  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B22C  5F					pop	di
020A:B22D  59					pop	cx
020A:B22E  58					pop	ax
020A:B22F			loc_1828:
020A:B22F  C3					retn
							                        ;* No entry point to code
020A:B230  80 3E 2B36 04			cmp	data_227,4		; (020A:2B36=0ADh)
020A:B235  75 07				jne	loc_1829		; Jump if not equal
020A:B237  F6 06 3459 02			test	data_356,2		; (020A:3459=0ABh)
020A:B23C  75 03				jnz	loc_1830		; Jump if not zero
020A:B23E			loc_1829:
020A:B23E  E9 008B				jmp	loc_1833		; (B2CC)
020A:B241			loc_1830:
020A:B241  50					push	ax
020A:B242  53					push	bx
020A:B243  52					push	dx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 372

020A:B244  57					push	di
020A:B245  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:B24A  06					push	es
020A:B24B  8B 1E 3466				mov	bx,word ptr ds:[3466h]	; (020A:3466=0E0AEh)
020A:B24F  A1 3468				mov	ax,data_362		; (020A:3468=0A0E2h)
020A:B252  BA 0004				mov	dx,4
020A:B255  E8 AD74				call	sub_63			; (5FCC)
020A:B258  73 43				jnc	loc_1831		; Jump if carry=0
020A:B25A  26: 8A 45 32				mov	al,es:[di+32h]
020A:B25E  24 38				and	al,38h			; '8'
020A:B260  3C 38				cmp	al,38h			; '8'
020A:B262  74 39				je	loc_1831		; Jump if equal
020A:B264  26: 80 45 32 08			add	byte ptr es:[di+32h],8
020A:B269  80 26 3459 FD			and	data_356,0FDh		; (020A:3459=0ABh)
020A:B26E  26: F6 45 05 20			test	byte ptr es:[di+5],20h	; ' '
020A:B273  75 28				jnz	loc_1831		; Jump if not zero
020A:B275  A1 3056				mov	ax,data_294		; (020A:3056=0BB1Bh)
020A:B278  2B 06 344C				sub	ax,data_349		; (020A:344C=5453h)
020A:B27C  3D 0018				cmp	ax,18h
020A:B27F  76 1C				jbe	loc_1831		; Jump if below or =
020A:B281  B8 0018				mov	ax,18h
020A:B284  C6 06 53D8 01			mov	data_563,1		; (020A:53D8=1Eh)
020A:B289  9A 1510:3558		;*		call	far ptr sub_149		;*(1510:3558)
020A:B289  9A					db	9Ah
020A:B28A  3558 1510				dw	3558h, 1510h
020A:B28E  C6 06 53D8 00			mov	data_563,0		; (020A:53D8=1Eh)
020A:B293  3D 0017				cmp	ax,17h
020A:B296  72 05				jb	loc_1831		; Jump if below
020A:B298  26: 80 4D 05 20			or	byte ptr es:[di+5],20h	; ' '
020A:B29D			loc_1831:
020A:B29D  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B2A2  9C					pushf				; Push flags
020A:B2A3  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B2A8  5A					pop	dx
020A:B2A9  8E C2				mov	es,dx
020A:B2AB  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:B2B0  5A					pop	dx
020A:B2B1  75 0A				jnz	loc_1832		; Jump if not zero
020A:B2B3  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:B2B8  74 03				je	loc_1832		; Jump if equal
020A:B2BA  E8 C23F				call	sub_85			; (74FC)
020A:B2BD			loc_1832:
020A:B2BD  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B2C2  9D					popf				; Pop flags
020A:B2C3  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B2C8  5F					pop	di
020A:B2C9  5A					pop	dx
020A:B2CA  5B					pop	bx
020A:B2CB  58					pop	ax
020A:B2CC			loc_1833:
020A:B2CC  C3					retn
020A:B2CD  87 DB				xchg	bx,bx
020A:B2CF  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 373


				sub_106		proc	near
020A:B2D0  50					push	ax
020A:B2D1  53					push	bx
020A:B2D2  51					push	cx
020A:B2D3  52					push	dx
020A:B2D4  56					push	si
020A:B2D5  57					push	di
020A:B2D6  55					push	bp
020A:B2D7  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:B2DC  1E					push	ds
020A:B2DD  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:B2E2  06					push	es
020A:B2E3  E8 BE9F				call	sub_74			; (7185)
020A:B2E6  E8 BED2				call	sub_83			; (71BB)
020A:B2E9  8B D8				mov	bx,ax
020A:B2EB  A1 2B3D				mov	ax,word ptr ds:[2B3Dh]	; (ss:2B3D=0BF00h)
020A:B2EE  8C C9				mov	cx,cs
020A:B2F0  2B D9				sub	bx,cx
020A:B2F2  2B C3				sub	ax,bx
020A:B2F4  B9 0006				mov	cx,6
020A:B2F7  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:B2F9  BD 0706				mov	bp,706h
020A:B2FC  B3 01				mov	bl,1
020A:B2FE  3D 03E7				cmp	ax,3E7h
020A:B301  77 0D				ja	loc_1834		; Jump if above
020A:B303  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:B303  9A					db	9Ah
020A:B304  0288 1510				dw	288h, 1510h
020A:B308  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=41B5h)
020A:B30C  C6 47 5E 07				mov	byte ptr [bx+5Eh],7
020A:B310			loc_1834:
020A:B310  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:B316  74 04				je	loc_1835		; Jump if equal
020A:B318  C6 47 5D 07				mov	byte ptr [bx+5Dh],7
020A:B31C			loc_1835:
020A:B31C  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B321  9C					pushf				; Push flags
020A:B322  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B327  5A					pop	dx
020A:B328  8E C2				mov	es,dx
020A:B32A  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:B32F  5A					pop	dx
020A:B330  75 0A				jnz	loc_1836		; Jump if not zero
020A:B332  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:B337  74 03				je	loc_1836		; Jump if equal
020A:B339  E8 C1C0				call	sub_85			; (74FC)
020A:B33C			loc_1836:
020A:B33C  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B341  9D					popf				; Pop flags
020A:B342  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B347  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B34C  9C					pushf				; Push flags
020A:B34D  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B352  5A					pop	dx
020A:B353  8E DA				mov	ds,dx
020A:B355  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 374

020A:B35A  5A					pop	dx
020A:B35B  75 0A				jnz	loc_1837		; Jump if not zero
020A:B35D  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:B362  74 03				je	loc_1837		; Jump if equal
020A:B364  E8 C195				call	sub_85			; (74FC)
020A:B367			loc_1837:
020A:B367  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B36C  9D					popf				; Pop flags
020A:B36D  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B372  5D					pop	bp
020A:B373  5F					pop	di
020A:B374  5E					pop	si
020A:B375  5A					pop	dx
020A:B376  59					pop	cx
020A:B377  5B					pop	bx
020A:B378  58					pop	ax
020A:B379  C3					retn
				sub_106		endp

020A:B37A  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_107		proc	near
020A:B37C  50					push	ax
020A:B37D  53					push	bx
020A:B37E  51					push	cx
020A:B37F  52					push	dx
020A:B380  56					push	si
020A:B381  57					push	di
020A:B382  55					push	bp
020A:B383  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:B388  1E					push	ds
020A:B389  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:B38E  06					push	es
020A:B38F  E8 BDF3				call	sub_74			; (7185)
020A:B392  E8 BE23				call	sub_82			; (71B8)
020A:B395  BB 2C44				mov	bx,2C44h
020A:B398  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:B39A  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:B39C  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:B39E  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:B3A0  03 C3				add	ax,bx
020A:B3A2  8B D8				mov	bx,ax
020A:B3A4  A1 2B3D				mov	ax,word ptr ds:[2B3Dh]	; (ss:2B3D=0BF00h)
020A:B3A7  8C C9				mov	cx,cs
020A:B3A9  2B D9				sub	bx,cx
020A:B3AB  2B C3				sub	ax,bx
020A:B3AD  B9 0006				mov	cx,6
020A:B3B0  D3 E8				shr	ax,cl			; Shift w/zeros fill
020A:B3B2  8B D0				mov	dx,ax
020A:B3B4  8B 1E 2CC8				mov	bx,word ptr ds:[2CC8h]	; (ss:2CC8=0C422h)
020A:B3B8  A1 2CC6				mov	ax,word ptr ds:[2CC6h]	; (ss:2CC6=545h)
020A:B3BB  B9 000A				mov	cx,0Ah
020A:B3BE  05 03FF				add	ax,3FFh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 375

020A:B3C1  83 D3 00				adc	bx,0
020A:B3C4  F8					clc				; Clear carry flag

020A:B3C5			locloop_1838:
020A:B3C5  D1 EB				shr	bx,1			; Shift w/zeros fill
020A:B3C7  D1 D8				rcr	ax,1			; Rotate thru carry
020A:B3C9  E2 FA				loop	locloop_1838		; Loop if cx > 0

020A:B3CB  92					xchg	dx,ax
020A:B3CC  2B C2				sub	ax,dx
020A:B3CE  3D 0000				cmp	ax,0
020A:B3D1  7D 02				jge	loc_1839		; Jump if > or =
020A:B3D3  33 C0				xor	ax,ax			; Zero register
020A:B3D5			loc_1839:
020A:B3D5  BD 0708				mov	bp,708h
020A:B3D8  3E: C7 46 00 2020			mov	word ptr ds:[bp],2020h
020A:B3DE  3E: C6 46 02 20			mov	byte ptr ds:[bp+2],20h	; ' '
020A:B3E3  BD 0706				mov	bp,706h
020A:B3E6  B3 01				mov	bl,1
020A:B3E8  3D 03E7				cmp	ax,3E7h
020A:B3EB  77 0D				ja	loc_1840		; Jump if above
020A:B3ED  9A 1510:0288		;*		call	far ptr sub_119		;*(1510:0288)
020A:B3ED  9A					db	9Ah
020A:B3EE  0288 1510				dw	288h, 1510h
020A:B3F2  8B 1E 1326				mov	bx,word ptr ds:[1326h]	; (ss:1326=41B5h)
020A:B3F6  C6 47 5E 07				mov	byte ptr [bx+5Eh],7
020A:B3FA			loc_1840:
020A:B3FA  2E: 80 3E 38A0 00			cmp	byte ptr cs:[38A0h],0	; (020A:38A0=51h)
020A:B400  74 04				je	loc_1841		; Jump if equal
020A:B402  C6 47 5D 07				mov	byte ptr [bx+5Dh],7
020A:B406			loc_1841:
020A:B406  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B40B  9C					pushf				; Push flags
020A:B40C  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B411  5A					pop	dx
020A:B412  8E C2				mov	es,dx
020A:B414  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:B419  5A					pop	dx
020A:B41A  75 0A				jnz	loc_1842		; Jump if not zero
020A:B41C  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:B421  74 03				je	loc_1842		; Jump if equal
020A:B423  E8 C0D6				call	sub_85			; (74FC)
020A:B426			loc_1842:
020A:B426  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B42B  9D					popf				; Pop flags
020A:B42C  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B431  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B436  9C					pushf				; Push flags
020A:B437  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B43C  5A					pop	dx
020A:B43D  8E DA				mov	ds,dx
020A:B43F  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:B444  5A					pop	dx
020A:B445  75 0A				jnz	loc_1843		; Jump if not zero
020A:B447  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:B44C  74 03				je	loc_1843		; Jump if equal
020A:B44E  E8 C0AB				call	sub_85			; (74FC)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 376

020A:B451			loc_1843:
020A:B451  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B456  9D					popf				; Pop flags
020A:B457  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B45C  5D					pop	bp
020A:B45D  5F					pop	di
020A:B45E  5E					pop	si
020A:B45F  5A					pop	dx
020A:B460  59					pop	cx
020A:B461  5B					pop	bx
020A:B462  58					pop	ax
020A:B463  C3					retn
				sub_107		endp


				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_108		proc	near
020A:B464  06					push	es
020A:B465  57					push	di
020A:B466  51					push	cx
020A:B467  1E					push	ds
020A:B468  07					pop	es
020A:B469  BF 4E2D				mov	di,4E2Dh
020A:B46C  B9 0018				mov	cx,18h
020A:B46F  B8 FFFF				mov	ax,0FFFFh
020A:B472  FC					cld				; Clear direction
020A:B473  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
020A:B475  59					pop	cx
020A:B476  5F					pop	di
020A:B477  07					pop	es
020A:B478  B8 FFFF				mov	ax,0FFFFh
020A:B47B  39 06 4E66				cmp	data_537,ax		; (020A:4E66=0E801h)
020A:B47F  75 03				jne	loc_1844		; Jump if not equal
020A:B481  E9 0086				jmp	loc_1848		; (B50A)
020A:B484			loc_1844:
020A:B484  50					push	ax
020A:B485  53					push	bx
020A:B486  51					push	cx
020A:B487  52					push	dx
020A:B488  56					push	si
020A:B489  57					push	di
020A:B48A  55					push	bp
020A:B48B  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:B490  1E					push	ds
020A:B491  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:B496  06					push	es
020A:B497  8B 1E 4E64				mov	bx,data_536		; (020A:4E64=0B614h)
020A:B49B  A1 4E66				mov	ax,data_537		; (020A:4E66=0E801h)
020A:B49E  BA 0004				mov	dx,4
020A:B4A1  E8 AB28				call	sub_63			; (5FCC)
020A:B4A4  73 07				jnc	loc_1845		; Jump if carry=0
020A:B4A6  A1 4E60				mov	ax,data_534		; (020A:4E60=6C6h)
020A:B4A9  26: 89 45 07				mov	es:[di+7],ax
020A:B4AD			loc_1845:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 377

020A:B4AD  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B4B2  9C					pushf				; Push flags
020A:B4B3  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B4B8  5A					pop	dx
020A:B4B9  8E C2				mov	es,dx
020A:B4BB  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:B4C0  5A					pop	dx
020A:B4C1  75 0A				jnz	loc_1846		; Jump if not zero
020A:B4C3  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:B4C8  74 03				je	loc_1846		; Jump if equal
020A:B4CA  E8 C02F				call	sub_85			; (74FC)
020A:B4CD			loc_1846:
020A:B4CD  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B4D2  9D					popf				; Pop flags
020A:B4D3  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B4D8  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B4DD  9C					pushf				; Push flags
020A:B4DE  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B4E3  5A					pop	dx
020A:B4E4  8E DA				mov	ds,dx
020A:B4E6  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:B4EB  5A					pop	dx
020A:B4EC  75 0A				jnz	loc_1847		; Jump if not zero
020A:B4EE  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:B4F3  74 03				je	loc_1847		; Jump if equal
020A:B4F5  E8 C004				call	sub_85			; (74FC)
020A:B4F8			loc_1847:
020A:B4F8  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B4FD  9D					popf				; Pop flags
020A:B4FE  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B503  5D					pop	bp
020A:B504  5F					pop	di
020A:B505  5E					pop	si
020A:B506  5A					pop	dx
020A:B507  59					pop	cx
020A:B508  5B					pop	bx
020A:B509  58					pop	ax
020A:B50A			loc_1848:
020A:B50A  B8 FFFF				mov	ax,0FFFFh
020A:B50D  A2 4E5D				mov	data_532,al		; (020A:4E5D=80h)
020A:B510  A3 4E64				mov	data_536,ax		; (020A:4E64=0B614h)
020A:B513  A3 4E66				mov	data_537,ax		; (020A:4E66=0E801h)
020A:B516  33 C0				xor	ax,ax			; Zero register
020A:B518  A3 4E5E				mov	data_533,ax		; (020A:4E5E=574h)
020A:B51B  A3 4E60				mov	data_534,ax		; (020A:4E60=6C6h)
020A:B51E  C3					retn
				sub_108		endp

							                        ;* No entry point to code
020A:B51F  90					nop
020A:B520  80 3E 309E 77			cmp	data_313,77h		; (020A:309E=55h) 'w'
020A:B525  75 6D				jne	loc_1852		; Jump if not equal
020A:B527  83 3E 344C 00			cmp	data_349,0		; (020A:344C=5453h)
020A:B52C  74 66				je	loc_1852		; Jump if equal
020A:B52E  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:B533  06					push	es
020A:B534  50					push	ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 378

020A:B535  56					push	si
020A:B536  8E 06 344A				mov	es,data_348		; (020A:344A=414Ch)
020A:B53A  8B 36 3488				mov	si,word ptr ds:[3488h]	; (020A:3488=0EBE0h)
020A:B53E  26: 8A 04				mov	al,es:[si]
020A:B541  3C 68				cmp	al,68h			; 'h'
020A:B543  74 15				je	loc_1849		; Jump if equal
020A:B545  3C 50				cmp	al,50h			; 'P'
020A:B547  72 1D				jb	loc_1850		; Jump if below
020A:B549  3C 57				cmp	al,57h			; 'W'
020A:B54B  77 19				ja	loc_1850		; Jump if above
020A:B54D  24 07				and	al,7
020A:B54F  C7 06 4E5E 0044			mov	data_533,44h		; (020A:4E5E=574h)
020A:B555  E8 04F8				call	sub_111			; (BA50)
020A:B558  EB 0C				jmp	short loc_1850		; (B566)
020A:B55A			loc_1849:
020A:B55A  A1 3488				mov	ax,word ptr ds:[3488h]	; (020A:3488=0EBE0h)
020A:B55D  C7 06 4E5E 0044			mov	data_533,44h		; (020A:4E5E=574h)
020A:B563  E8 00BE				call	sub_110			; (B624)
020A:B566			loc_1850:
020A:B566  5E					pop	si
020A:B567  58					pop	ax
020A:B568  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:B56D  9C					pushf				; Push flags
020A:B56E  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:B573  5A					pop	dx
020A:B574  8E C2				mov	es,dx
020A:B576  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:B57B  5A					pop	dx
020A:B57C  75 0A				jnz	loc_1851		; Jump if not zero
020A:B57E  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:B583  74 03				je	loc_1851		; Jump if equal
020A:B585  E8 BF74				call	sub_85			; (74FC)
020A:B588			loc_1851:
020A:B588  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:B58D  9D					popf				; Pop flags
020A:B58E  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:B593  C3					retn
020A:B594			loc_1852:
020A:B594  E8 FECD				call	sub_108			; (B464)
020A:B597  C3					retn
020A:B598  D8					db	0D8h
020A:B599  D9					db	0D9h
020A:B59A  DA					db	0DAh
020A:B59B  DB					db	0DBh
020A:B59C  DC					db	0DCh
020A:B59D  DD					db	0DDh
020A:B59E  DE					db	0DEh
020A:B59F  DF					db	0DFh
							                        ;* No entry point to code
020A:B5A0  26					db	26h
020A:B5A1  9B					db	9Bh
020A:B5A2  90					nop
020A:B5A3  90					nop
020A:B5A4  F6 06 30B0 1F			test	data_317,1Fh		; (020A:30B0=44h)
020A:B5A9  74 59				jz	loc_1858		; Jump if zero
020A:B5AB  F7 06 4E22 0001			test	data_502,1		; (020A:4E22=348Ah)
020A:B5B1  75 51				jnz	loc_1858		; Jump if not zero
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 379

020A:B5B3  50					push	ax
020A:B5B4  53					push	bx
020A:B5B5  57					push	di
020A:B5B6  06					push	es
020A:B5B7  1E					push	ds
020A:B5B8  07					pop	es
020A:B5B9  BF 2CCA				mov	di,2CCAh
020A:B5BC  B8 9B9B				mov	ax,9B9Bh
020A:B5BF  26: 8B 1D				mov	bx,es:[di]
020A:B5C2  80 FB CD				cmp	bl,0CDh
020A:B5C5  74 03				je	loc_1853		; Jump if equal
020A:B5C7  F8					clc				; Clear carry flag
020A:B5C8  EB 35				jmp	short loc_1857		; (B5FF)
020A:B5CA			loc_1853:
020A:B5CA  8A DF				mov	bl,bh
020A:B5CC  8A C3				mov	al,bl
020A:B5CE  3C 3E				cmp	al,3Eh			; '>'
020A:B5D0  72 03				jb	loc_1854		; Jump if below
020A:B5D2  F8					clc				; Clear carry flag
020A:B5D3  EB 2A				jmp	short loc_1857		; (B5FF)
020A:B5D5			loc_1854:
020A:B5D5  2C 34				sub	al,34h			; '4'
020A:B5D7  BB 80D8				mov	bx,80D8h
020A:B5DA  2E: D7				xlat	cs:[bx]			; al=[al+[bx]] table
020A:B5DC  3C 9B				cmp	al,9Bh
020A:B5DE  75 04				jne	loc_1855		; Jump if not equal
020A:B5E0  B0 90				mov	al,90h
020A:B5E2  EB 02				jmp	short loc_1856		; (B5E6)
020A:B5E4			loc_1855:
020A:B5E4  86 E0				xchg	ah,al
020A:B5E6			loc_1856:
020A:B5E6  26: 8B 1D				mov	bx,es:[di]
020A:B5E9  89 1E 4E26				mov	data_504,bx		; (020A:4E26=0A036h)
020A:B5ED  26: 89 05				mov	es:[di],ax
020A:B5F0  A3 4E28				mov	data_505,ax		; (020A:4E28=0F630h)
020A:B5F3  C6 06 4E2C 02			mov	data_507,2		; (020A:4E2C=30h)
020A:B5F8  A1 344C				mov	ax,data_349		; (020A:344C=5453h)
020A:B5FB  A3 4E2A				mov	data_506,ax		; (020A:4E2A=0B006h)
020A:B5FE  F9					stc				; Set carry flag
020A:B5FF			loc_1857:
020A:B5FF  07					pop	es
020A:B600  5F					pop	di
020A:B601  5B					pop	bx
020A:B602  58					pop	ax
020A:B603  C3					retn
020A:B604			loc_1858:
020A:B604  F8					clc				; Clear carry flag
020A:B605  C3					retn
020A:B606  87 DB				xchg	bx,bx

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_109		proc	near
020A:B608  1E					push	ds
020A:B609  0E					push	cs
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 380

020A:B60A  1F					pop	ds
020A:B60B  B8 2523				mov	ax,2523h
020A:B60E  BA 8155				mov	dx,8155h
020A:B611  CD 21				int	21h			; DOS Services  ah=function 25h
										;  set intrpt vector al to ds:dx
020A:B613  1F					pop	ds
020A:B614  C3					retn
				sub_109		endp

							                        ;* No entry point to code
020A:B615  2E: C6 06 0098 01			mov	byte ptr cs:[98h],1	; (020A:0098=0)
020A:B61B  F8					clc				; Clear carry flag
020A:B61C  CB					retf
020A:B61D  00					db	0
020A:B61E  00					db	0
							                        ;* No entry point to code
020A:B61F  00 00				add	[bx+si],al
020A:B621  00 87 F7DB				add	byte ptr ds:[0F7DBh][bx],al	; (020A:F7DB=3)
020A:B625  06					push	es
020A:B626  5E					pop	si
020A:B627  4E					dec	si
020A:B628  E0 00				loopnz	locloop_1859		; Loop if zf=0, cx>0


020A:B62A			locloop_1859:
020A:B62A  75 01				jnz	loc_1860		; Jump if not zero
020A:B62C  C3					retn
020A:B62D			loc_1860:
020A:B62D  2E: A3 8160				mov	word ptr cs:[8160h],ax	; (020A:8160=0BF06h)
020A:B631  50					push	ax
020A:B632  53					push	bx
020A:B633  51					push	cx
020A:B634  52					push	dx
020A:B635  56					push	si
020A:B636  57					push	di
020A:B637  55					push	bp
020A:B638  BB FFFF				mov	bx,0FFFFh
020A:B63B  E9 0191				jmp	loc_1877		; (B7CF)
							                        ;* No entry point to code
020A:B63E  87 DB				xchg	bx,bx
020A:B640  83 3E 4E2D FF			cmp	data_508,0FFFFh		; (020A:4E2D=741Fh)
020A:B645  74 09				je	loc_1861		; Jump if equal
020A:B647  F7 06 4E5E 00E0			test	data_533,0E0h		; (020A:4E5E=574h)
020A:B64D  75 0B				jnz	loc_1862		; Jump if not zero
020A:B64F  C3					retn
020A:B650			loc_1861:
020A:B650  50					push	ax
020A:B651  B0 01				mov	al,1
020A:B653  9A 1510:60D0		;*		call	far ptr sub_170		;*(1510:60D0)
020A:B653  9A					db	9Ah
020A:B654  60D0 1510				dw	60D0h, 1510h
020A:B658  58					pop	ax
020A:B659  C3					retn
020A:B65A			loc_1862:
020A:B65A  50					push	ax
020A:B65B  53					push	bx
020A:B65C  51					push	cx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 381

020A:B65D  52					push	dx
020A:B65E  56					push	si
020A:B65F  57					push	di
020A:B660  55					push	bp
020A:B661  A1 4E2D				mov	ax,data_508		; (020A:4E2D=741Fh)
020A:B664  2E: A3 8160				mov	word ptr cs:[8160h],ax	; (020A:8160=0BF06h)
020A:B668  8B 1E 4E2F				mov	bx,data_509		; (020A:4E2F=0C61Dh)
020A:B66C  A1 4E31				mov	ax,data_510		; (020A:4E31=0B006h)
020A:B66F  E9 015D				jmp	loc_1877		; (B7CF)
							                        ;* No entry point to code
020A:B672  87 DB				xchg	bx,bx
020A:B674  83 3E 4E33 FF			cmp	data_511,0FFFFh		; (020A:4E33=130h)
020A:B679  74 09				je	loc_1863		; Jump if equal
020A:B67B  F7 06 4E5E 00E0			test	data_533,0E0h		; (020A:4E5E=574h)
020A:B681  75 0B				jnz	loc_1864		; Jump if not zero
020A:B683  C3					retn
020A:B684			loc_1863:
020A:B684  50					push	ax
020A:B685  B0 02				mov	al,2
020A:B687  9A 1510:60D0		;*		call	far ptr sub_170		;*(1510:60D0)
020A:B687  9A					db	9Ah
020A:B688  60D0 1510				dw	60D0h, 1510h
020A:B68C  58					pop	ax
020A:B68D  C3					retn
020A:B68E			loc_1864:
020A:B68E  50					push	ax
020A:B68F  53					push	bx
020A:B690  51					push	cx
020A:B691  52					push	dx
020A:B692  56					push	si
020A:B693  57					push	di
020A:B694  55					push	bp
020A:B695  A1 4E33				mov	ax,data_511		; (020A:4E33=130h)
020A:B698  2E: A3 8160				mov	word ptr cs:[8160h],ax	; (020A:8160=0BF06h)
020A:B69C  8B 1E 4E35				mov	bx,data_512		; (020A:4E35=0C6F6h)
020A:B6A0  A1 4E37				mov	ax,data_513		; (020A:4E37=7410h)
020A:B6A3  E9 0129				jmp	loc_1877		; (B7CF)
							                        ;* No entry point to code
020A:B6A6  87 DB				xchg	bx,bx
020A:B6A8  83 3E 4E39 FF			cmp	data_514,0FFFFh		; (020A:4E39=0C607h)
020A:B6AD  74 09				je	loc_1865		; Jump if equal
020A:B6AF  F7 06 4E5E 00E0			test	data_533,0E0h		; (020A:4E5E=574h)
020A:B6B5  75 0B				jnz	loc_1866		; Jump if not zero
020A:B6B7  C3					retn
020A:B6B8			loc_1865:
020A:B6B8  50					push	ax
020A:B6B9  B0 03				mov	al,3
020A:B6BB  9A 1510:60D0		;*		call	far ptr sub_170		;*(1510:60D0)
020A:B6BB  9A					db	9Ah
020A:B6BC  60D0 1510				dw	60D0h, 1510h
020A:B6C0  58					pop	ax
020A:B6C1  C3					retn
020A:B6C2			loc_1866:
020A:B6C2  50					push	ax
020A:B6C3  53					push	bx
020A:B6C4  51					push	cx
020A:B6C5  52					push	dx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 382

020A:B6C6  56					push	si
020A:B6C7  57					push	di
020A:B6C8  55					push	bp
020A:B6C9  A1 4E39				mov	ax,data_514		; (020A:4E39=0C607h)
020A:B6CC  2E: A3 8160				mov	word ptr cs:[8160h],ax	; (020A:8160=0BF06h)
020A:B6D0  8B 1E 4E3B				mov	bx,data_515		; (020A:4E3B=0B006h)
020A:B6D4  A1 4E3D				mov	ax,data_516		; (020A:4E3D=230h)
020A:B6D7  E9 00F5				jmp	loc_1877		; (B7CF)
							                        ;* No entry point to code
020A:B6DA  87 DB				xchg	bx,bx
020A:B6DC  83 3E 4E3F FF			cmp	data_517,0FFFFh		; (020A:4E3F=0CEBh)
020A:B6E1  74 09				je	loc_1867		; Jump if equal
020A:B6E3  F7 06 4E5E 00E0			test	data_533,0E0h		; (020A:4E5E=574h)
020A:B6E9  75 0B				jnz	loc_1868		; Jump if not zero
020A:B6EB  C3					retn
020A:B6EC			loc_1867:
020A:B6EC  50					push	ax
020A:B6ED  B0 04				mov	al,4
020A:B6EF  9A 1510:60D0		;*		call	far ptr sub_170		;*(1510:60D0)
020A:B6EF  9A					db	9Ah
020A:B6F0  60D0 1510				dw	60D0h, 1510h
020A:B6F4  58					pop	ax
020A:B6F5  C3					retn
020A:B6F6			loc_1868:
020A:B6F6  50					push	ax
020A:B6F7  53					push	bx
020A:B6F8  51					push	cx
020A:B6F9  52					push	dx
020A:B6FA  56					push	si
020A:B6FB  57					push	di
020A:B6FC  55					push	bp
020A:B6FD  A1 4E3F				mov	ax,data_517		; (020A:4E3F=0CEBh)
020A:B700  2E: A3 8160				mov	word ptr cs:[8160h],ax	; (020A:8160=0BF06h)
020A:B704  8B 1E 4E41				mov	bx,data_518		; (020A:4E41=0C6F6h)
020A:B708  A1 4E43				mov	ax,data_519		; (020A:4E43=7420h)
020A:B70B  E9 00C1				jmp	loc_1877		; (B7CF)
							                        ;* No entry point to code
020A:B70E  87 DB				xchg	bx,bx
020A:B710  83 3E 4E4B FF			cmp	data_523,0FFFFh		; (020A:4E4B=18EBh)
020A:B715  74 09				je	loc_1869		; Jump if equal
020A:B717  F7 06 4E5E 00E0			test	data_533,0E0h		; (020A:4E5E=574h)
020A:B71D  75 0B				jnz	loc_1870		; Jump if not zero
020A:B71F  C3					retn
020A:B720			loc_1869:
020A:B720  50					push	ax
020A:B721  B0 06				mov	al,6
020A:B723  9A 1510:60D0		;*		call	far ptr sub_170		;*(1510:60D0)
020A:B723  9A					db	9Ah
020A:B724  60D0 1510				dw	60D0h, 1510h
020A:B728  58					pop	ax
020A:B729  C3					retn
020A:B72A			loc_1870:
020A:B72A  50					push	ax
020A:B72B  53					push	bx
020A:B72C  51					push	cx
020A:B72D  52					push	dx
020A:B72E  56					push	si
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 383

020A:B72F  57					push	di
020A:B730  55					push	bp
020A:B731  A1 4E4B				mov	ax,data_523		; (020A:4E4B=18EBh)
020A:B734  2E: A3 8160				mov	word ptr cs:[8160h],ax	; (020A:8160=0BF06h)
020A:B738  8B 1E 4E4D				mov	bx,data_524		; (020A:4E4D=6F6h)
020A:B73C  A1 4E4F				mov	ax,data_525		; (020A:4E4F=30A0h)
020A:B73F  E9 008D				jmp	loc_1877		; (B7CF)
							                        ;* No entry point to code
020A:B742  87 DB				xchg	bx,bx
020A:B744  83 3E 4E45 FF			cmp	data_520,0FFFFh		; (020A:4E45=0C607h)
020A:B749  74 09				je	loc_1871		; Jump if equal
020A:B74B  F7 06 4E5E 00E0			test	data_533,0E0h		; (020A:4E5E=574h)
020A:B751  75 0B				jnz	loc_1872		; Jump if not zero
020A:B753  C3					retn
020A:B754			loc_1871:
020A:B754  50					push	ax
020A:B755  B0 05				mov	al,5
020A:B757  9A 1510:60D0		;*		call	far ptr sub_170		;*(1510:60D0)
020A:B757  9A					db	9Ah
020A:B758  60D0 1510				dw	60D0h, 1510h
020A:B75C  58					pop	ax
020A:B75D  C3					retn
020A:B75E			loc_1872:
020A:B75E  50					push	ax
020A:B75F  53					push	bx
020A:B760  51					push	cx
020A:B761  52					push	dx
020A:B762  56					push	si
020A:B763  57					push	di
020A:B764  55					push	bp
020A:B765  A1 4E45				mov	ax,data_520		; (020A:4E45=0C607h)
020A:B768  2E: A3 8160				mov	word ptr cs:[8160h],ax	; (020A:8160=0BF06h)
020A:B76C  8B 1E 4E47				mov	bx,data_521		; (020A:4E47=0B006h)
020A:B770  A1 4E49				mov	ax,data_522		; (020A:4E49=430h)
020A:B773  EB 5A				jmp	short loc_1877		; (B7CF)
							                        ;* No entry point to code
020A:B775  87 DB				xchg	bx,bx
020A:B777  90					nop
020A:B778  83 3E 4E57 FF			cmp	data_529,0FFFFh		; (020A:4E57=0C30h)
020A:B77D  74 08				je	loc_1873		; Jump if equal
020A:B77F  F7 06 4E5E 0060			test	data_533,60h		; (020A:4E5E=574h)
020A:B785  75 01				jnz	loc_1874		; Jump if not zero
020A:B787			loc_1873:
020A:B787  C3					retn
020A:B788			loc_1874:
020A:B788  50					push	ax
020A:B789  53					push	bx
020A:B78A  51					push	cx
020A:B78B  52					push	dx
020A:B78C  56					push	si
020A:B78D  57					push	di
020A:B78E  55					push	bp
020A:B78F  A1 4E57				mov	ax,data_529		; (020A:4E57=0C30h)
020A:B792  2E: A3 8160				mov	word ptr cs:[8160h],ax	; (020A:8160=0BF06h)
020A:B796  8B 1E 4E59				mov	bx,data_530		; (020A:4E59=6F6h)
020A:B79A  A1 4E5B				mov	ax,data_531		; (020A:4E5B=30A0h)
020A:B79D  EB 30				jmp	short loc_1877		; (B7CF)
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 384

							                        ;* No entry point to code
020A:B79F  90					nop
020A:B7A0  83 3E 4E51 FF			cmp	data_526,0FFFFh		; (020A:4E51=74C0h)
020A:B7A5  74 09				je	loc_1875		; Jump if equal
020A:B7A7  F7 06 4E5E 00E0			test	data_533,0E0h		; (020A:4E5E=574h)
020A:B7AD  75 0B				jnz	loc_1876		; Jump if not zero
020A:B7AF  C3					retn
020A:B7B0			loc_1875:
020A:B7B0  50					push	ax
020A:B7B1  B0 07				mov	al,7
020A:B7B3  9A 1510:60D0		;*		call	far ptr sub_170		;*(1510:60D0)
020A:B7B3  9A					db	9Ah
020A:B7B4  60D0 1510				dw	60D0h, 1510h
020A:B7B8  58					pop	ax
020A:B7B9  C3					retn
020A:B7BA			loc_1876:
020A:B7BA  50					push	ax
020A:B7BB  53					push	bx
020A:B7BC  51					push	cx
020A:B7BD  52					push	dx
020A:B7BE  56					push	si
020A:B7BF  57					push	di
020A:B7C0  55					push	bp
020A:B7C1  A1 4E51				mov	ax,data_526		; (020A:4E51=74C0h)
020A:B7C4  2E: A3 8160				mov	word ptr cs:[8160h],ax	; (020A:8160=0BF06h)
020A:B7C8  8B 1E 4E53				mov	bx,data_527		; (020A:4E53=0C611h)
020A:B7CC  A1 4E55				mov	ax,data_528		; (020A:4E55=0B006h)
020A:B7CF			loc_1877:
020A:B7CF  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:B7D4  06					push	es
020A:B7D5  FF 36 40F7				push	word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:B7D9  FF 36 40F5				push	word ptr ds:[40F5h]	; (020A:40F5=744Ch)
020A:B7DD  80 3E 2B3C 01			cmp	data_232,1		; (020A:2B3C=0ADh)
020A:B7E2  75 03				jne	loc_1878		; Jump if not equal
020A:B7E4  E9 0218				jmp	loc_1906		; (B9FF)
020A:B7E7			loc_1878:
020A:B7E7  80 3E 327F 08			cmp	byte ptr data_336,8	; (020A:327F='nuineIntel')
020A:B7EC  75 12				jne	loc_1879		; Jump if not equal
020A:B7EE  81 FB 1000				cmp	bx,1000h
020A:B7F2  77 0C				ja	loc_1879		; Jump if above
020A:B7F4  E8 B99D				call	sub_76			; (7194)
020A:B7F7  26: 03 1E 0000			add	bx,word ptr es:[0]	; (020A:0000=1828h)
020A:B7FC  89 1E 4E71				mov	word ptr ds:[4E71h],bx	; (020A:4E71=7400h)
020A:B800			loc_1879:
020A:B800  8B 1E 344A				mov	bx,data_348		; (020A:344A=414Ch)
020A:B804  C6 06 4D4B 01			mov	data_484,1		; (020A:4D4B=0E8h)
020A:B809  BA 0001				mov	dx,1
020A:B80C  E8 A7BD				call	sub_63			; (5FCC)
020A:B80F  73 43				jnc	loc_1883		; Jump if carry=0
020A:B811			loc_1880:
020A:B811  26: 8A 4D 04				mov	cl,es:[di+4]
020A:B815  80 E1 1F				and	cl,1Fh
020A:B818  80 F9 1F				cmp	cl,1Fh
020A:B81B  75 11				jne	loc_1881		; Jump if not equal
020A:B81D  26: 8A 4D 09				mov	cl,es:[di+9]
020A:B821  80 F9 40				cmp	cl,40h			; '@'
020A:B824  72 08				jb	loc_1881		; Jump if below
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 385

020A:B826  80 F9 44				cmp	cl,44h			; 'D'
020A:B829  77 03				ja	loc_1881		; Jump if above
020A:B82B  E9 01D1				jmp	loc_1906		; (B9FF)
020A:B82E			loc_1881:
020A:B82E  50					push	ax
020A:B82F  53					push	bx
020A:B830  BB 40C2				mov	bx,40C2h
020A:B833  26: 8A 45 05				mov	al,es:[di+5]
020A:B837  25 000F				and	ax,0Fh
020A:B83A  D7					xlat				; al=[al+[bx]] table
020A:B83B  0A C0				or	al,al			; Zero ?
020A:B83D  75 04				jnz	loc_1882		; Jump if not zero
020A:B83F  26: 8A 45 06				mov	al,es:[di+6]
020A:B843			loc_1882:
020A:B843  03 F8				add	di,ax
020A:B845  5B					pop	bx
020A:B846  58					pop	ax
020A:B847  26: 3B 1D				cmp	bx,es:[di]
020A:B84A  75 08				jne	loc_1883		; Jump if not equal
020A:B84C  26: 3B 45 02				cmp	ax,es:[di+2]
020A:B850  75 02				jne	loc_1883		; Jump if not equal
020A:B852  EB BD				jmp	short loc_1880		; (B811)
020A:B854			loc_1883:
020A:B854  BF 532E				mov	di,532Eh
020A:B857  89 1D				mov	[di],bx
020A:B859  89 45 02				mov	[di+2],ax
020A:B85C  C6 45 04 5F				mov	byte ptr [di+4],5Fh	; '_'
020A:B860  C6 45 05 02				mov	byte ptr [di+5],2
020A:B864  C6 45 06 00				mov	byte ptr [di+6],0
020A:B868  C7 45 07 203F			mov	word ptr [di+7],203Fh
020A:B86D  1E					push	ds
020A:B86E  8E DB				mov	ds,bx
020A:B870  8B D8				mov	bx,ax
020A:B872  80 3F 8D				cmp	byte ptr [bx],8Dh
020A:B875  1F					pop	ds
020A:B876  75 18				jnz	loc_1884		; Jump if not zero
020A:B878  B0 0A				mov	al,0Ah
020A:B87A  F7 06 4E5E 0020			test	data_533,20h		; (020A:4E5E=574h)
020A:B880  75 24				jnz	loc_1885		; Jump if not zero
020A:B882  B0 09				mov	al,9
020A:B884  F7 06 4E5E 0040			test	data_533,40h		; (020A:4E5E=574h)
020A:B88A  75 1A				jnz	loc_1885		; Jump if not zero
020A:B88C  B0 08				mov	al,8
020A:B88E  EB 16				jmp	short loc_1885		; (B8A6)
020A:B890			loc_1884:
020A:B890  B0 44				mov	al,44h			; 'D'
020A:B892  F7 06 4E5E 0020			test	data_533,20h		; (020A:4E5E=574h)
020A:B898  75 0C				jnz	loc_1885		; Jump if not zero
020A:B89A  B0 42				mov	al,42h			; 'B'
020A:B89C  F7 06 4E5E 0040			test	data_533,40h		; (020A:4E5E=574h)
020A:B8A2  75 02				jnz	loc_1885		; Jump if not zero
020A:B8A4  B0 40				mov	al,40h			; '@'
020A:B8A6			loc_1885:
020A:B8A6  88 45 09				mov	[di+9],al
020A:B8A9  A1 4E71				mov	ax,word ptr ds:[4E71h]	; (020A:4E71=7400h)
020A:B8AC  C7 06 4E71 FFFF			mov	word ptr ds:[4E71h],0FFFFh	; (020A:4E71=7400h)
020A:B8B2  3D FFFF				cmp	ax,0FFFFh
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 386

020A:B8B5  75 51				jne	loc_1890		; Jump if not equal
020A:B8B7  A1 344A				mov	ax,data_348		; (020A:344A=414Ch)
020A:B8BA  F7 06 4E5E 0004			test	data_533,4		; (020A:4E5E=574h)
020A:B8C0  75 46				jnz	loc_1890		; Jump if not zero
020A:B8C2  A1 4E62				mov	ax,data_535		; (020A:4E62=30B0h)
020A:B8C5  3D FFFF				cmp	ax,0FFFFh
020A:B8C8  75 3E				jne	loc_1890		; Jump if not equal
020A:B8CA  A1 361A				mov	ax,data_419		; (020A:361A=1E8Bh)
020A:B8CD  F6 06 35F0 08			test	byte ptr ds:[35F0h],8	; (020A:35F0=74h)
020A:B8D2  74 34				jz	loc_1890		; Jump if zero
020A:B8D4  8A 0E 362B				mov	cl,byte ptr ds:[362Bh]	; (020A:362B=7)
020A:B8D8  80 F9 26				cmp	cl,26h			; '&'
020A:B8DB  75 05				jne	loc_1886		; Jump if not equal
020A:B8DD  A1 3618				mov	ax,data_418		; (020A:3618=0A4F3h)
020A:B8E0  EB 26				jmp	short loc_1890		; (B908)
020A:B8E2			loc_1886:
020A:B8E2  80 F9 2E				cmp	cl,2Eh			; '.'
020A:B8E5  75 05				jne	loc_1887		; Jump if not equal
020A:B8E7  A1 344A				mov	ax,data_348		; (020A:344A=414Ch)
020A:B8EA  EB 1C				jmp	short loc_1890		; (B908)
020A:B8EC			loc_1887:
020A:B8EC  80 F9 36				cmp	cl,36h			; '6'
020A:B8EF  75 05				jne	loc_1888		; Jump if not equal
020A:B8F1  A1 3620				mov	ax,data_422		; (020A:3620=8812h)
020A:B8F4  EB 12				jmp	short loc_1890		; (B908)
020A:B8F6			loc_1888:
020A:B8F6  80 F9 64				cmp	cl,64h			; 'd'
020A:B8F9  75 05				jne	loc_1889		; Jump if not equal
020A:B8FB  A1 361C				mov	ax,data_420		; (020A:361C=1326h)
020A:B8FE  EB 08				jmp	short loc_1890		; (B908)
020A:B900			loc_1889:
020A:B900  80 F9 65				cmp	cl,65h			; 'e'
020A:B903  75 03				jne	loc_1890		; Jump if not equal
020A:B905  A1 361E				mov	ax,data_421		; (020A:361E=9A0h)
020A:B908			loc_1890:
020A:B908  89 45 0A				mov	[di+0Ah],ax
020A:B90B  F7 06 4E22 4000			test	data_502,4000h		; (020A:4E22=348Ah)
020A:B911  74 03				jz	loc_1891		; Jump if zero
020A:B913  E9 00E9				jmp	loc_1906		; (B9FF)
020A:B916			loc_1891:
020A:B916  E8 CCC7				call	sub_92			; (85E0)
020A:B919  8B D8				mov	bx,ax
020A:B91B  BF 532E				mov	di,532Eh
020A:B91E  2E: A1 8160				mov	ax,word ptr cs:[8160h]	; (020A:8160=0BF06h)
020A:B922  89 1D				mov	[di],bx
020A:B924  89 45 02				mov	[di+2],ax
020A:B927  80 3E 15D0 01			cmp	data_159,1		; (020A:15D0=0)
020A:B92C  77 04				ja	loc_1892		; Jump if above
020A:B92E  80 4D 05 01				or	byte ptr [di+5],1
020A:B932			loc_1892:
020A:B932  F7 06 4E5E 0020			test	data_533,20h		; (020A:4E5E=574h)
020A:B938  75 52				jnz	loc_1897		; Jump if not zero
020A:B93A  F7 06 4E5E 0040			test	data_533,40h		; (020A:4E5E=574h)
020A:B940  75 08				jnz	loc_1893		; Jump if not zero
020A:B942  F7 06 4E5E 0080			test	data_533,80h		; (020A:4E5E=574h)
020A:B948  75 1A				jnz	loc_1895		; Jump if not zero
020A:B94A			loc_1893:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 387

020A:B94A  C6 06 4D4B 00			mov	data_484,0		; (020A:4D4B=0E8h)
020A:B94F  BA 0001				mov	dx,1
020A:B952  E8 A677				call	sub_63			; (5FCC)
020A:B955  73 03				jnc	loc_1894		; Jump if carry=0
020A:B957  E9 00A5				jmp	loc_1906		; (B9FF)
020A:B95A			loc_1894:
020A:B95A  BF 532E				mov	di,532Eh
020A:B95D  C6 45 04 40				mov	byte ptr [di+4],40h	; '@'
020A:B961  E9 0098				jmp	loc_1905		; (B9FC)
020A:B964			loc_1895:
020A:B964  BA 0004				mov	dx,4
020A:B967  E8 A662				call	sub_63			; (5FCC)
020A:B96A  73 03				jnc	loc_1896		; Jump if carry=0
020A:B96C  E9 0090				jmp	loc_1906		; (B9FF)
020A:B96F			loc_1896:
020A:B96F  BF 532E				mov	di,532Eh
020A:B972  C6 45 04 43				mov	byte ptr [di+4],43h	; 'C'
020A:B976  80 4D 05 08				or	byte ptr [di+5],8
020A:B97A  57					push	di
020A:B97B  1E					push	ds
020A:B97C  07					pop	es
020A:B97D  83 C7 09				add	di,9
020A:B980  BE 35FA				mov	si,35FAh
020A:B983  B9 0029				mov	cx,29h
020A:B986  FC					cld				; Clear direction
020A:B987  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
020A:B989  5F					pop	di
020A:B98A  EB 70				jmp	short loc_1905		; (B9FC)
020A:B98C			loc_1897:
020A:B98C  BA 0002				mov	dx,2
020A:B98F  E8 A63A				call	sub_63			; (5FCC)
020A:B992  72 6B				jc	loc_1906		; Jump if carry Set
020A:B994  BF 532E				mov	di,532Eh
020A:B997  8A 0E 4E6C				mov	cl,data_538		; (020A:4E6C=0E8h)
020A:B99B  88 4D 04				mov	[di+4],cl
020A:B99E  80 E1 23				and	cl,23h			; '#'
020A:B9A1  80 F9 20				cmp	cl,20h			; ' '
020A:B9A4  75 46				jne	loc_1903		; Jump if not equal
020A:B9A6  C6 45 04 60				mov	byte ptr [di+4],60h	; '`'
020A:B9AA  57					push	di
020A:B9AB  06					push	es
020A:B9AC  B9 01F4				mov	cx,1F4h
020A:B9AF  8E C3				mov	es,bx
020A:B9B1  8B F8				mov	di,ax
020A:B9B3  26: 80 3D 00				cmp	byte ptr es:[di],0
020A:B9B7  75 0B				jne	loc_1898		; Jump if not equal
020A:B9B9  07					pop	es
020A:B9BA  5F					pop	di
020A:B9BB  B9 0001				mov	cx,1
020A:B9BE  C6 45 04 41				mov	byte ptr [di+4],41h	; 'A'
020A:B9C2  EB 21				jmp	short loc_1902		; (B9E5)
020A:B9C4			loc_1898:
020A:B9C4  3D FE0B				cmp	ax,0FE0Bh
020A:B9C7  76 06				jbe	loc_1900		; Jump if below or =
020A:B9C9  B9 FFFF				mov	cx,0FFFFh
020A:B9CC  2B C8				sub	cx,ax
020A:B9CE  41					inc	cx
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 388

020A:B9CF			loc_1900:
020A:B9CF  32 C0				xor	al,al			; Zero register
020A:B9D1  F6 06 4E6C 08			test	data_538,8		; (020A:4E6C=0E8h)
020A:B9D6  74 02				jz	loc_1901		; Jump if zero
020A:B9D8  B0 24				mov	al,24h			; '$'
020A:B9DA			loc_1901:
020A:B9DA  51					push	cx
020A:B9DB  FC					cld				; Clear direction
020A:B9DC  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
020A:B9DE  58					pop	ax
020A:B9DF  2B C1				sub	ax,cx
020A:B9E1  8B C8				mov	cx,ax
020A:B9E3  07					pop	es
020A:B9E4  5F					pop	di
020A:B9E5			loc_1902:
020A:B9E5  C7 45 06 0000			mov	word ptr [di+6],0
020A:B9EA  EB 09				jmp	short loc_1904		; (B9F5)
020A:B9EC			loc_1903:
020A:B9EC  8B 0E 4E6D				mov	cx,data_539		; (020A:4E6D=3E80h)
020A:B9F0  C7 45 06 1000			mov	word ptr [di+6],1000h
020A:B9F5			loc_1904:
020A:B9F5  89 4D 08				mov	[di+8],cx
020A:B9F8  80 4D 05 04				or	byte ptr [di+5],4
020A:B9FC			loc_1905:
020A:B9FC  E8 CBE1				call	sub_92			; (85E0)
020A:B9FF			loc_1906:
020A:B9FF  C6 06 4D4B 00			mov	data_484,0		; (020A:4D4B=0E8h)
020A:BA04  8F 06 40F5				pop	word ptr ds:[40F5h]	; (020A:40F5=744Ch)
020A:BA08  8F 06 40F7				pop	word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:BA0C  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:BA11  9C					pushf				; Push flags
020A:BA12  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:BA17  5A					pop	dx
020A:BA18  8E C2				mov	es,dx
020A:BA1A  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:BA1F  5A					pop	dx
020A:BA20  75 0A				jnz	loc_1907		; Jump if not zero
020A:BA22  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:BA27  74 03				je	loc_1907		; Jump if equal
020A:BA29  E8 BAD0				call	sub_85			; (74FC)
020A:BA2C			loc_1907:
020A:BA2C  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:BA31  9D					popf				; Pop flags
020A:BA32  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:BA37  5D					pop	bp
020A:BA38  5F					pop	di
020A:BA39  5E					pop	si
020A:BA3A  5A					pop	dx
020A:BA3B  59					pop	cx
020A:BA3C  5B					pop	bx
020A:BA3D  58					pop	ax
020A:BA3E  C3					retn
							                        ;* No entry point to code
020A:BA3F  80 81 81E8 1C			add	byte ptr ds:[81E8h][bx+di],1Ch	; (020A:81E8=88h)
020A:BA44  82 B4 B881 82			xor	byte ptr ds:[0B881h][si],82h	; (020A:B881=24h)
020A:BA49  E0 82		;*		loopnz	locloop_1899		;*Loop if zf=0, cx>0

           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 389

020A:BA49  E0 82				db	0E0h, 82h
020A:BA4B  84 82 8250				test	al,[bp+si-7DB0h]
020A:BA4F  90					nop

				;ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
				;                              SUBROUTINE
				;ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ

				sub_111		proc	near
020A:BA50  53					push	bx
020A:BA51  33 DB				xor	bx,bx			; Zero register
020A:BA53  8A D8				mov	bl,al
020A:BA55  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:BA57  2E: FF 97 857F			call	word ptr cs:[857Fh][bx]	;*(020A:857F=335h)
020A:BA5C  5B					pop	bx
020A:BA5D  C3					retn
				sub_111		endp

							                        ;* No entry point to code
020A:BA5E  80 81 81B4 E8			add	byte ptr ds:[81B4h][bx+di],0E8h	; (020A:81B4=45h)
020A:BA63  81 1C 8482				sbb	word ptr [si],8482h
020A:BA67  82 50 82 E0				adc	byte ptr [bx+si-7Eh],0E0h
020A:BA6B  82 50 53 51				adc	byte ptr [bx+si+53h],51h	; 'Q'
020A:BA6F  52					push	dx
020A:BA70  56					push	si
020A:BA71  57					push	di
020A:BA72  55					push	bp
020A:BA73  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:BA78  1E					push	ds
020A:BA79  2E: FF 36 38A3			push	cs:data_429		; (020A:38A3=0C88Ah)
020A:BA7E  06					push	es
020A:BA7F  A1 3468				mov	ax,data_362		; (020A:3468=0A0E2h)
020A:BA82  8B 1E 3466				mov	bx,word ptr ds:[3466h]	; (020A:3466=0E0AEh)
020A:BA86  BA 0004				mov	dx,4
020A:BA89  FF 36 40F7				push	word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:BA8D  FF 36 40F5				push	word ptr ds:[40F5h]	; (020A:40F5=744Ch)
020A:BA91  E8 A538				call	sub_63			; (5FCC)
020A:BA94  8F 06 40F5				pop	word ptr ds:[40F5h]	; (020A:40F5=744Ch)
020A:BA98  8F 06 40F7				pop	word ptr ds:[40F7h]	; (020A:40F7=3C0Bh)
020A:BA9C  72 03				jc	loc_1909		; Jump if carry Set
020A:BA9E			loc_1908:
020A:BA9E  E9 00C9				jmp	loc_1918		; (BB6A)
020A:BAA1			loc_1909:
020A:BAA1  26: 8B 55 07				mov	dx,es:[di+7]
020A:BAA5  F7 C2 0777				test	dx,777h
020A:BAA9  74 F3				jz	loc_1908		; Jump if zero
020A:BAAB  8B C2				mov	ax,dx
020A:BAAD  25 000F				and	ax,0Fh
020A:BAB0  A9 0007				test	ax,7
020A:BAB3  74 30				jz	loc_1912		; Jump if zero
020A:BAB5  8B 2E 361A				mov	bp,data_419		; (020A:361A=1E8Bh)
020A:BAB9  A9 0008				test	ax,8
020A:BABC  74 04				jz	loc_1910		; Jump if zero
020A:BABE  8B 2E 3618				mov	bp,data_418		; (020A:3618=0A4F3h)
020A:BAC2			loc_1910:
020A:BAC2  89 2E 4E62				mov	data_535,bp		; (020A:4E62=30B0h)
020A:BAC6  8B D8				mov	bx,ax
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 390

020A:BAC8  83 E3 07				and	bx,7
020A:BACB  4B					dec	bx
020A:BACC  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:BACE  C7 06 4E5E 0020			mov	data_533,20h		; (020A:4E5E=574h)
020A:BAD4  F7 C2 1000				test	dx,1000h
020A:BAD8  74 06				jz	loc_1911		; Jump if zero
020A:BADA  C7 06 4E5E 0040			mov	data_533,40h		; (020A:4E5E=574h)
020A:BAE0			loc_1911:
020A:BAE0  2E: FF 97 859E			call	word ptr cs:[859Eh][bx]	;*(020A:859E=0A5Dh)
020A:BAE5			loc_1912:
020A:BAE5  8B C2				mov	ax,dx
020A:BAE7  B1 04				mov	cl,4
020A:BAE9  D3 C8				ror	ax,cl			; Rotate
020A:BAEB  25 000F				and	ax,0Fh
020A:BAEE  A9 0007				test	ax,7
020A:BAF1  74 30				jz	loc_1915		; Jump if zero
020A:BAF3  8B 2E 361A				mov	bp,data_419		; (020A:361A=1E8Bh)
020A:BAF7  A9 0008				test	ax,8
020A:BAFA  74 04				jz	loc_1913		; Jump if zero
020A:BAFC  8B 2E 3618				mov	bp,data_418		; (020A:3618=0A4F3h)
020A:BB00			loc_1913:
020A:BB00  89 2E 4E62				mov	data_535,bp		; (020A:4E62=30B0h)
020A:BB04  8B D8				mov	bx,ax
020A:BB06  83 E3 07				and	bx,7
020A:BB09  4B					dec	bx
020A:BB0A  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:BB0C  C7 06 4E5E 0020			mov	data_533,20h		; (020A:4E5E=574h)
020A:BB12  F7 C2 2000				test	dx,2000h
020A:BB16  74 06				jz	loc_1914		; Jump if zero
020A:BB18  C7 06 4E5E 0040			mov	data_533,40h		; (020A:4E5E=574h)
020A:BB1E			loc_1914:
020A:BB1E  2E: FF 97 859E			call	word ptr cs:[859Eh][bx]	;*(020A:859E=0A5Dh)
020A:BB23			loc_1915:
020A:BB23  8B C2				mov	ax,dx
020A:BB25  B1 08				mov	cl,8
020A:BB27  D3 C8				ror	ax,cl			; Rotate
020A:BB29  25 000F				and	ax,0Fh
020A:BB2C  A9 0007				test	ax,7
020A:BB2F  74 39				jz	loc_1918		; Jump if zero
020A:BB31  26: 8B 2D				mov	bp,es:[di]
020A:BB34  F7 C2 8000				test	dx,8000h
020A:BB38  75 0D				jnz	loc_1916		; Jump if not zero
020A:BB3A  8B 2E 361A				mov	bp,data_419		; (020A:361A=1E8Bh)
020A:BB3E  A9 0008				test	ax,8
020A:BB41  74 04				jz	loc_1916		; Jump if zero
020A:BB43  8B 2E 3618				mov	bp,data_418		; (020A:3618=0A4F3h)
020A:BB47			loc_1916:
020A:BB47  89 2E 4E62				mov	data_535,bp		; (020A:4E62=30B0h)
020A:BB4B  8B D8				mov	bx,ax
020A:BB4D  83 E3 07				and	bx,7
020A:BB50  4B					dec	bx
020A:BB51  D1 E3				shl	bx,1			; Shift w/zeros fill
020A:BB53  C7 06 4E5E 0020			mov	data_533,20h		; (020A:4E5E=574h)
020A:BB59  F7 C2 2000				test	dx,2000h
020A:BB5D  74 06				jz	loc_1917		; Jump if zero
020A:BB5F  C7 06 4E5E 0040			mov	data_533,40h		; (020A:4E5E=574h)
020A:BB65			loc_1917:
           Temp.lst				Sourcer	v5.10   11-Sep-21   8:33 pm   Page 391

020A:BB65  2E: FF 97 859E			call	word ptr cs:[859Eh][bx]	;*(020A:859E=0A5Dh)
020A:BB6A			loc_1918:
020A:BB6A  E8 F8F7				call	sub_108			; (B464)
020A:BB6D  C7 06 4E62 FFFF			mov	data_535,0FFFFh		; (020A:4E62=30B0h)
020A:BB73  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:BB78  9C					pushf				; Push flags
020A:BB79  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:BB7E  5A					pop	dx
020A:BB7F  8E C2				mov	es,dx
020A:BB81  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:BB86  5A					pop	dx
020A:BB87  75 0A				jnz	loc_1919		; Jump if not zero
020A:BB89  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:BB8E  74 03				je	loc_1919		; Jump if equal
020A:BB90  E8 B969				call	sub_85			; (74FC)
020A:BB93			loc_1919:
020A:BB93  2E: FF 36 0096			push	word ptr cs:[96h]	; (020A:0096=0)
020A:BB98  9D					popf				; Pop flags
020A:BB99  2E: 8B 16 0092			mov	dx,word ptr cs:[92h]	; (020A:0092=4D00h)
020A:BB9E  2E: 89 16 0092			mov	word ptr cs:[92h],dx	; (020A:0092=4D00h)
020A:BBA3  9C					pushf				; Push flags
020A:BBA4  2E: 8F 06 0096			pop	word ptr cs:[96h]	; (020A:0096=0)
020A:BBA9  5A					pop	dx
020A:BBAA  8E DA				mov	ds,dx
020A:BBAC  2E: 3B 16 38A1			cmp	dx,cs:data_428		; (020A:38A1=4B3h)
020A:BBB1  5A					pop	dx
020A:BBB2  75 0A		;*		jnz	loc_1920		;*Jump if not zero
020A:BBB2  75 0A				db	 75h, 0Ah
020A:BBB4  2E: 3B 16 38A3			cmp	dx,cs:data_429		; (020A:38A3=0C88Ah)
020A:BBB9  74 03		;*		je	loc_1920		;*Jump if equal
020A:BBB9  74 03				db	 74h, 03h
020A:BBBB  E8 B93E				call	sub_85			; (74FC)

